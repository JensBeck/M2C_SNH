<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="9/2/2021 3:59:31 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="BC-NB-JBECK"
  DTS:CreatorName="BC-COMPETENCE\j.beck"
  DTS:DTSID="{8876BCE0-F7B6-4F20-A01F-85706DB8CF25}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="15.0.2000.128"
  DTS:LocaleID="1031"
  DTS:ObjectName="Package"
  DTS:PackageType="5"
  DTS:VersionBuild="555"
  DTS:VersionGUID="{A5460CCE-580D-40CC-967A-C55FDBAE2BF1}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Division information"
      DTS:DTSID="{68DCDF9B-BAF0-4C68-9A1D-115A974C6432}"
      DTS:ObjectName="Division"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">12</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="If true the event is deactivated"
      DTS:DTSID="{6A03EF7C-B4E3-4A5C-AC94-F0796AA7A948}"
      DTS:ObjectName="EventFaelligkeitsdatumZahlung_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="If true the event is deactivated"
      DTS:DTSID="{14FC7F3C-E944-4206-87FD-F0C48BA5E90C}"
      DTS:ObjectName="EventGeplantesAblesedatum_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="If true the event is deactivated"
      DTS:DTSID="{92BBAA40-0CFA-4959-8F00-30864A7AC15D}"
      DTS:ObjectName="EventGeplantesAbrechnungsdatum_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="If true the event is deactivated"
      DTS:DTSID="{3BCECB86-5ED5-426A-9EF7-8F49B76C9330}"
      DTS:ObjectName="EventStornoDruckbeleg_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="11"
      DTS:Description="The anonymization should only used if new data was exported"
      DTS:DTSID="{1582A791-DE3C-448D-B588-002BD2FC4632}"
      DTS:ObjectName="InsertData_Disable">
      <DTS:Property
        DTS:DataType="11"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Language key for text tables"
      DTS:DTSID="{8577F39C-914E-404D-B775-2D732C37C58E}"
      DTS:ObjectName="Language"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">D</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Comma separated list with ISTABLART (Estimation)"
      DTS:DTSID="{F12ABC05-050C-4ED4-85EA-B3F9A7B0CDBD}"
      DTS:ObjectName="Schaetzung"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">03, 05, 10, 12, 11, 28, 55</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:Description="Comma separated list with ISTABLART (Self-reading)"
      DTS:DTSID="{3DBE5CB7-B922-4F39-B470-4CB30B67B006}"
      DTS:ObjectName="Selbstablesung"
      DTS:Required="True">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue">02</DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables />
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Anonymsierung"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Insert Data"
      DTS:DTSID="{D907D6F1-B409-4536-8CF9-761DDEB9EDA9}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Anonymsierung">
      <DTS:Variables />
      <DTS:PropertyExpression
        DTS:Name="Disable">@[$Package::InsertData_Disable]</DTS:PropertyExpression>
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Anonymsierung\Anonymisierung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{d2472d97-d196-432b-a174-41d3aef88034}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Anonymisierung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[USR03]&#xA;&#xA;SELECT DISTINCT [t].[NAME], &#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN [USR02].[BNAME] IS NULL&#xA;&#x9;&#x9;&#x9;THEN CAST(ROW_NUMBER() OVER (ORDER BY [t].[NAME])+1000 AS NVARCHAR(8))+'#NAME'&#xA;&#x9;&#x9;&#x9;ELSE [USR02].[BNAME]&#xA;&#x9;&#x9;END AS [NAMECODE]&#xA;INTO [M2C_PAFnowIM].[USR03]&#xA;FROM (&#xA;SELECT DISTINCT [EABL].[ERNAM] AS [NAME]&#xA;FROM EABL&#xA;UNION &#xA;SELECT DISTINCT [EABL].[AENAM] AS [NAME]&#xA;FROM EABL&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_BILLING].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_BILLING]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_CONTRACT].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_CONTRACT]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_CONTRACTACCOUNT].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_CONTRACTACCOUNT]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_DUNNING].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_DUNNING]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_INVOICE].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_INVOICE]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_DUNNING].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_DUNNING]&#xA;UNION &#xA;SELECT DISTINCT [CDHDR_READ].[USERNAME] AS [NAME]&#xA;FROM [CDHDR_READ]&#xA;UNION &#xA;SELECT DISTINCT [DFKKLOCKS].[UNAME] AS [NAME]&#xA;FROM [DFKKLOCKS]&#xA;UNION &#xA;SELECT DISTINCT [DFKKKO].[ERNAM] AS [NAME]&#xA;FROM [DFKKKO]&#xA;UNION &#xA;SELECT DISTINCT [EABP].[ERNAM] AS [NAME]&#xA;FROM [EABP]&#xA;UNION &#xA;SELECT DISTINCT [EASTE].[ERNAM] AS [NAME]&#xA;FROM [EASTE]&#xA;UNION &#xA;SELECT DISTINCT [EASTS].[ERNAM] AS [NAME]&#xA;FROM [EASTS]&#xA;UNION &#xA;SELECT DISTINCT [ERCH].[ERNAM] AS [NAME]&#xA;FROM ERCH&#xA;UNION &#xA;SELECT DISTINCT [ERCH].[AENAM] AS [NAME]&#xA;FROM ERCH&#xA;UNION &#xA;SELECT DISTINCT [ERDK].[ERNAM] AS [NAME]&#xA;FROM ERDK&#xA;UNION &#xA;SELECT DISTINCT [ERDK].[AENAM] AS [NAME]&#xA;FROM ERDK&#xA;UNION &#xA;SELECT DISTINCT ERCHO.[FREI_VON] AS [NAME]&#xA;FROM ERCHO&#xA;UNION &#xA;SELECT DISTINCT ERDO.[FREI_VON] AS [NAME]&#xA;FROM ERDO&#xA;UNION &#xA;SELECT DISTINCT [EITR].[CRNAME] AS [NAME]&#xA;FROM [EITR]&#xA;UNION &#xA;SELECT DISTINCT [ETRF].[ERNAM] AS [NAME]&#xA;FROM [ETRF]&#xA;UNION &#xA;SELECT DISTINCT [ETRF].[AENAM] AS [NAME]&#xA;FROM [ETRF]&#xA;UNION &#xA;SELECT DISTINCT [EVER].[ERNAM] AS [NAME]&#xA;FROM [EVER]&#xA;UNION &#xA;SELECT DISTINCT [EVER].[AENAM] AS [NAME]&#xA;FROM [EVER]&#xA;UNION &#xA;SELECT DISTINCT [FKKVK].[ERNAM] AS [NAME]&#xA;FROM [FKKVK]&#xA;UNION &#xA;SELECT DISTINCT [FKKVK].[AENAM] AS [NAME]&#xA;FROM [FKKVK]&#xA;UNION &#xA;SELECT DISTINCT [FKKVKP].[ERNAM] AS [NAME]&#xA;FROM [FKKVKP]&#xA;UNION &#xA;SELECT DISTINCT [FKKVKP].[AENAMP] AS [NAME]&#xA;FROM [FKKVKP]&#xA;)  t&#xA;LEFT JOIN [dbo].[USR02]&#xA;ON [USR02].[BNAME] = [t].[NAME]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Anonymsierung\Anonymisierung 1"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{c210629c-0a10-49b9-98e3-25d973faf5aa}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Anonymisierung 1"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:BypassPrepare="False"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;UPDATE [EABL]&#xA;SET [EABL].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [EABL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EABL].[ERNAM] = [USR03].[NAME]&#xA;&#xA;&#xA;UPDATE [EABL]&#xA;SET [EABL].[AENAM] = [USR03].[NAMECODE]&#xA;FROM [EABL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EABL].[AENAM] = [USR03].[NAME]&#xA;&#xA;&#xA;UPDATE [CDHDR_CONTRACT]&#xA;SET [CDHDR_CONTRACT].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_CONTRACT]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_CONTRACT].[USERNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [CDHDR_BILLING]&#xA;SET [CDHDR_BILLING].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_BILLING]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_BILLING].[USERNAME] = [USR03].[NAME]&#xA;&#xA;&#x9;UPDATE [CDHDR_CONTRACTACCOUNT]&#xA;SET [CDHDR_CONTRACTACCOUNT].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_CONTRACTACCOUNT]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_CONTRACTACCOUNT].[USERNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [CDHDR_DUNNING]&#xA;SET [CDHDR_DUNNING].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_DUNNING]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_DUNNING].[USERNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [CDHDR_INVOICE]&#xA;SET [CDHDR_INVOICE].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_INVOICE]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_INVOICE].[USERNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [CDHDR_READ]&#xA;SET [CDHDR_READ].[USERNAME] = [USR03].[NAMECODE]&#xA;FROM [CDHDR_READ]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [CDHDR_READ].[USERNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [DFKKLOCKS]&#xA;SET [DFKKLOCKS].[UNAME] = [USR03].[NAMECODE]&#xA;FROM [DFKKLOCKS]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [DFKKLOCKS].[UNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [DFKKKO]&#xA;SET [DFKKKO].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [DFKKKO]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [DFKKKO].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [EABP]&#xA;SET [EABP].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [EABP]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EABP].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [EASTE]&#xA;SET [EASTE].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [EASTE]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EASTE].[ERNAM] = [USR03].[NAME]&#xA;&#xA;&#xA;UPDATE [EASTS]&#xA;SET [EASTS].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [EASTS]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EASTS].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [ERCH]&#xA;SET [ERCH].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [ERCH]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [ERCH].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [ERCH]&#xA;SET [ERCH].[AENAM] = [USR03].[NAMECODE]&#xA;FROM [ERCH]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [ERCH].[AENAM] = [USR03].[NAME]&#xA;&#xA;UPDATE ERDK&#xA;SET ERDK.[ERNAM] = [USR03].[NAMECODE]&#xA;FROM ERDK&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON ERDK.[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE ERDK&#xA;SET ERDK.[AENAM] = [USR03].[NAMECODE]&#xA;FROM ERDK&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON ERDK.[AENAM] = [USR03].[NAME]&#xA;&#xA;UPDATE ERCHO&#xA;SET ERCHO.[FREI_VON] = [USR03].[NAMECODE]&#xA;FROM ERCHO&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON ERCHO.[FREI_VON] = [USR03].[NAME]&#xA;&#xA;UPDATE ERDO&#xA;SET ERDO.[FREI_VON] = [USR03].[NAMECODE]&#xA;FROM ERDO&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON ERDO.[FREI_VON] = [USR03].[NAME]&#xA;&#xA;UPDATE [EITR]&#xA;SET [EITR].[CRNAME] = [USR03].[NAMECODE]&#xA;FROM [EITR]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EITR].[CRNAME] = [USR03].[NAME]&#xA;&#xA;UPDATE [ETRF]&#xA;SET [ETRF].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [ETRF]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [ETRF].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [ETRF]&#xA;SET [ETRF].[AENAM] = [USR03].[NAMECODE]&#xA;FROM [ETRF]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [ETRF].[AENAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [EVER]&#xA;SET [EVER].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [EVER]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EVER].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [EVER]&#xA;SET [EVER].[AENAM] = [USR03].[NAMECODE]&#xA;FROM [EVER]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [EVER].[AENAM] = [USR03].[NAME]&#xA;&#xA;&#xA;UPDATE [FKKVKP]&#xA;SET [FKKVKP].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [FKKVKP]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [FKKVKP].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [FKKVKP]&#xA;SET [FKKVKP].[AENAMP] = [USR03].[NAMECODE]&#xA;FROM [FKKVKP]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [FKKVKP].[AENAMP] = [USR03].[NAME]&#xA;&#xA;UPDATE [FKKVK]&#xA;SET [FKKVK].[ERNAM] = [USR03].[NAMECODE]&#xA;FROM [FKKVK]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [FKKVK].[ERNAM] = [USR03].[NAME]&#xA;&#xA;UPDATE [FKKVK]&#xA;SET [FKKVK].[AENAM] = [USR03].[NAMECODE]&#xA;FROM [FKKVK]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[USR03]&#xA;&#x9;ON [FKKVK].[AENAM] = [USR03].[NAME]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Anonymsierung\Create User Table"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{88CE73B7-B986-4948-9609-0CD2FBE95D34}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Create User Table"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;DROP TABLE IF EXISTS [dbo].[USR02] &#xA;&#xA;CREATE TABLE [dbo].[USR02]  (&#xA; [BNAME] varchar(100),&#xA; [USTYP] varchar(100),&#xA;&#xA; )&#xA;GO&#xA;&#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('BWALEREMOTE', 'B') &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('S8UC4GNH', 'B') &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('WF-BATCH', 'B')&#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('X1THORMIG', 'B')&#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('X1THORMIG', 'B')&#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('S8UC4JOBGNH', 'B')&#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('DDIC', 'B'); &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('CKUSS', 'B'); &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('X1MPOSSIEL', 'B'); &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('X1JSCHRAML', 'B'); &#xA;INSERT INTO [dbo].[USR02]  ([BNAME], [USTYP])&#xA;VALUES ('S8SSTSOAPO', 'B'); &#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Anonymsierung.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{2860857C-D713-4B38-BDBC-D0D7903F9BF1}"
          DTS:From="Package\Anonymsierung\Create User Table"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Anonymsierung\Anonymisierung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Anonymsierung.PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{15F8DF51-BEA8-4A4B-86F4-8B708C404A6A}"
          DTS:From="Package\Anonymsierung\Anonymisierung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Anonymsierung\Anonymisierung 1" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Attributes"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{b594414b-43c2-49f1-b661-08599e23eee8}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Attributes">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-0 Drop Attribute Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{840e2d79-767b-4a9c-b65e-f06df0d8ba62}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-0 Drop Attribute Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;-- Vertrag Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Contract]&#xA;GO&#xA;&#xA;&#xA;-- Ablesegründe Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_MeterReading]&#xA;GO&#xA;&#xA;-- Abrechnung Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Billing]&#xA;GO&#xA;&#xA;-- Faktura Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Invoice]&#xA;GO&#xA;&#xA;-- Anlage Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Installation]&#xA;GO&#xA;&#xA;&#xA;-- Kontokorrent Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Account]&#xA;GO&#xA;&#xA;&#xA;-- Faktura Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Invoice]&#xA;GO&#xA;&#xA;-- Ausgleichs Attribute&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-1 Reading Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{5c8b9ef3-8c0f-4862-a1f0-762963411eba}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-1 Reading Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Reading Attributes';&#xA;&#xA;DECLARE @tags NVARCHAR(MAX) = @schaetzung;&#xA;DECLARE @selbstTag NVARCHAR(MAX) = @selbst;&#xA;&#xA;SELECT Distinct&#xA;&#x9;&#x9;&#x9;&#x9;CAST([CLT].[CaseId] AS BIGINT)                                  AS [CaseId],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[Client]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS&#x9;[Client],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLBELNR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesebelegnummer],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ERDAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesebelegerstellungsdatum],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ISTABLART]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ist_Ableseart], &#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ISTABLART_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ist_Ableseart_T],&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [MRDoc].[ISTABLART]  IN  (SELECT REPLACE(value, ' ', '') FROM STRING_SPLIT(@tags, ','))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'X'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Schätzung],&#xA;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [MRDoc].[ISTABLART]  IN  (SELECT REPLACE(value, ' ', '') FROM STRING_SPLIT(@selbstTag , ','))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'X'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Selbstablesung],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[SCHAEGR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Schätzgrund],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLESTYP]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesetyp],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLESTYP_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesetyp_T],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLHINW]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesehinweis],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLHINW_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesehinweis_T],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[PRUEFPKT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Aussteuerungsgrund],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[PRUEFPKT_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Aussteuerungsgrund_T],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[POPCODE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abhängige Plausibilitätsprüfung],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[POPCODE_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abhängige Plausibilitätsprüfung_T],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[GERNR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Gerätenummer],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[EQUNR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Equipmentnummer],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ZWNUMMER]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Zählwerk],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ADAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsrelevantes Ablesedatum],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ADATSOLL]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Geplantes Ablesedatum],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLESER]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Nummer des Ablesers],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[V_ZWSTNDAB]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vorkommastellen des abgerechneten Zählerstands],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[N_ZWSTAND]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Nachkommastellen des abgelesenen Zählerstands],&#xA;&#x9;&#x9;&#x9;&#x9;[MRDoc].[ABLSTAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesestatus],&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[ABLESGR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesegrund],&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[ABLESGR_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesegrund_T],&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[ABLEINH]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ableseeinheit],&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[ABLEINH_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ableseeinheit_T],&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CHARINDEX('RLM', [MRReason].[ABLEINH_T]) = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'RLM'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN CHARINDEX('SLP', [MRReason].[ABLEINH_T]) = 1&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'SLP'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Zähler],&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[UNTERDR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [UnterdrückungsKZ],&#xA;&#x9;&#x9;&#x9;&#x9;[MRReason].[ABRDATS]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Tatsächliches Abrechnungsdatum]&#xA;&#xA;INTO [M2C_PAFnow].[Case_Attributes_MeterReading]&#xA;FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ReadingReason] AS [MRReason]&#xA;&#x9;&#x9;&#x9; ON [MRReason].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRReason].[ABLBELNR] = [CLT].[MRReasonABLBELNR]&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Reading Attributes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@schaetzung"
                SQLTask:DtsVariableName="$Package::Schaetzung"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="-1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@selbst"
                SQLTask:DtsVariableName="$Package::Selbstablesung"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="-1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-2 Utility Installation Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{01702a98-d536-4fb2-9cc7-26e28e44d7c6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-2 Utility Installation Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Installation Attributes ';&#xA;&#xA;&#xA;SELECT Distinct&#xA;    CAST([MeterReading2Installation].[CaseId] AS BIGINT)                                  AS [CaseId],&#xA;&#x9;[MeterReading2Installation].[ANLAGE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Anlage],&#xA;&#x9;[Installation].[ANLART]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Anlagenart],&#xA;&#x9;[Installation].[ANLART_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Anlagenart_T],&#xA;&#x9;[Installation].[SPARTE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Sparte],&#xA;&#x9;[Installation].[SERVICE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Service],&#xA;&#x9;[Installation].[ABLSPERR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ablesesperrgrund],&#xA;&#x9;[MeterReading2Installation].[TARIFTYP]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Tariftyp],&#xA;&#x9;[RateType].[TARIFTYP_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Tariftyp_T],&#xA;&#x9;[RateType].[AKLASSE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsklasse],&#xA;&#x9;[RateType].[AKLASSE_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsklasse_T]&#xA;INTO [M2C_PAFnow].[Case_Attributes_Installation]&#xA;FROM [M2C_PAFnowIM].[Object_MeterReading2Installation] AS [MeterReading2Installation] &#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_Installation] AS [Installation]&#xA;&#x9;&#x9;ON [MeterReading2Installation].[ANLAGE] = [Installation].[ANLAGE]&#xA;&#x9;&#x9;AND  [MeterReading2Installation].[MRDocsClient] = [Installation].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_RateTypeHead] AS [RateType]&#xA;&#x9;&#x9;ON [MeterReading2Installation].[TARIFTYP] = [RateType].[TARIFTYP]&#xA;&#x9;&#x9;AND  [MeterReading2Installation].[MRDocsClient] = [RateType].[Client]&#xA;&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Installation Attributes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-3 Contract Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{db85f8d2-39ee-474f-bbc4-2256c4db651b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-3 Contract Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Contract Attributes ';&#xA;&#xA;SELECT DISTINCT&#xA;    CAST([MeterReading2Billing].[CaseId] AS BIGINT)                                 AS [CaseId],&#xA;&#x9;[ContractData].[BUKRS]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Buchungskreis],&#xA;&#x9;[ContractData].[VERTRAG]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vertrags ID],&#xA;&#x9;[ContractData].[SPARTE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Sparte],&#xA;&#x9;[ContractData].[VBEGINN]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vertragsbeginn],&#xA;&#x9;[ContractData].[SERVICEID]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Serviceanbieter],&#xA;&#x9;[ContractData].[SERVICEID_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Serviceanbieter_T],&#xA;&#x9;[ContractData].[INVOICING_PARTY]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Serviceanbieter, der den Vertrag fakturiert],&#xA;&#x9;[ContractData].[LOEVM]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Löschkennzeichen],&#xA;&#x9;[ContractData].[AUSGRUP]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Aussteuerungsprüfgruppe],&#xA;&#x9;[ContractData].[AUSGRUP_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Aussteuerungsprüfgruppe_T],&#xA;&#x9;[ContractData].[EINZDAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Einzugsdatum],&#xA;&#x9;[ContractData].[AUSZDAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Auszugsdatum],&#xA;&#x9;[ContractData].[VKONTO]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vertragskonto ID],&#xA;&#x9;[ContractData].[ABRSPERR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungssperre],&#xA;&#x9;[ContractData].[ABRSPERR_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungssperre_T],&#xA;&#x9;[ContractAccountHeader].[VKTYP]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vertragskontotyp] &#xA;INTO [M2C_PAFnow].[Case_Attributes_Contract]&#xA;FROM [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractData] AS [ContractData]&#xA;&#x9;&#x9;ON [ContractData].[VERTRAG] = [MeterReading2Billing].[VERTRAG]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;LEFT JOIN [M2C_PAFnowIM].[Object_ContractAccountHeader] AS [ContractAccountHeader]&#xA;&#x9;&#x9;ON [ContractData].[VKONTO] = [ContractAccountHeader].[VKONT]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [ContractAccountHeader].[Client]&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Contract Attributes';&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-4 Billing Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{449ecf1f-eb41-4a45-b232-c9c874c0c3d1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-4 Billing Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Billing Attributes ';&#xA;&#xA;SELECT Distinct&#xA;    CAST([MeterReading2Billing].[CaseId] AS BIGINT)                                 AS [CaseId],&#xA;  [BillingDoc].[CompanyCode]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [CompanyCode],&#xA;  [BillingDoc].[BELNR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsbelegnummer],&#xA;  [BillingDoc].[ABRVORG]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsvorgang],&#xA;  [BillingDoc].[BELEGART]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsbelegart],&#xA;  [BillingDoc].[BELEGART_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Abrechnungsbelegart_T],&#xA;  [BillingDoc].[VERTRAG]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Vertrag ID],&#xA;  [BillingDoc].[SPARTE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Sparte],&#xA;  [BillingDoc].[GPARTNER]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Geschäftspartner],&#xA;  [BillingDoc].[ABRDATS]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Tatsächliches Abrechnungsdatum],&#xA;  [BillingDoc].[ADATSOLL]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Geplantes Ablesedatum],&#xA;  [BillingDoc].[STORNODAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Stornodatum],&#xA;  [BillingDoc].[BELEGDAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Belegdatum],&#xA;  [BillingDoc].[BCREASON]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Stornogrund],&#xA;  [BillingDoc].[BCREASON_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Stornogrund_T],&#xA;  CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [BillingOutsorting].[BELNR] IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'X'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;AS [AbrechnungAussteuerung]&#xA;INTO [M2C_PAFnow].[Case_Attributes_Billing]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;ON [MeterReading2Billing].[BELNR] = [BillingDoc].[BELNR] &#xA;&#x9;&#x9;LEFT JOIN [M2C_PAFnowIM].[Object_BillingDocOutsorting] AS [BillingOutsorting]&#xA;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] = [BillingOutsorting].[BELNR]&#xA;&#x9;&#x9;&#x9;AND [BillingDoc].[Client] = [BillingOutsorting].[Client]&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Billing Attributes';&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-5 Invoice Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{3490b15b-a74e-4782-8400-98237bdc0082}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-5 Invoice Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Invoice Attributes';&#xA;&#xA;SELECT Distinct &#xA;&#x9;&#x9;&#x9;&#x9;[MeterReading2Invoicing].[CaseId]&#x9;&#x9;AS [CaseId],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[OPBEL]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Fakturabelegnummer],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[FAEDN]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Nettofälligkeitsdatum],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[FAEDS]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Skontofälligkeitsdatum],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[ERGRD]&#x9;&#x9;&#x9;&#x9;&#x9;AS [ErstellungsgrundDesDruckbelegs],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[ERDAT]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Erstellungsdatum],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[ERNAM]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Name],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[TOTAL_AMNT]&#x9;&#x9;&#x9;AS [BetragDerTransaktionswährung],&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [TOTAL_AMNT] &gt;= 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'FORDERUNG'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 'GUTSCHRIFT'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Fakturabelegart],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[DRUCKDAT]&#x9;&#x9;&#x9;&#x9;AS [Druckdatum],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[EDISENDDATE]&#x9;&#x9;&#x9;AS [ErzeugungsdatumEinesEDIDesDruckbelegs],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[STOKZ]&#x9;&#x9;&#x9;&#x9;&#x9;AS [Stornokenzeichen],&#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[INTOPBEL]&#x9;&#x9;&#x9;&#x9;AS [Belegverweis],&#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [InvoiceOutsorting].[OPBEL] IS NOT NULL&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'X'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;AS [FakturaAussteuerung]&#xA;INTO [M2C_PAFnow].[Case_Attributes_Invoice]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;LEFT JOIN [M2C_PAFnowIM].[Object_FaktOutDoc] AS [InvoiceOutsorting]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [InvoiceOutsorting].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [InvoiceOutsorting].[Client]&#xA;&#x9;&#x9;&#x9;&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Invoice Attributes';&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-6 Account Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{c7802c0b-307e-43e9-830d-ee939f5ac0e2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-6 Account Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Account Attributes';&#xA;&#xA;SELECT Distinct&#xA;    CAST([MeterReading2Accounting].[CaseId] AS BIGINT)                                 AS [CaseId],&#xA;  [AccDocItems].[Client]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Client],&#xA;  [AccDocItems].[OPBEL]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Kontokorrent Belegnummer],&#xA;  [AccDocItems].[BETRH]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Betrag in Hauswährung mit Vorzeichen],&#xA;  [AccDocItems].[AUGBT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsbetrag],&#xA;&#x9;[AccDocItems].[AUGBL]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsbelegnummer],&#xA;   [AccDocItems].[BLART]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Belegart],&#xA;   [AccDocHead].[CPUDT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Tag der Erfassung des Buchhaltungsbelegs],&#xA;    [AccDocHead].[BUDAT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Buchungsdatum],&#xA;&#x9;[AccDocItems].[AUGST]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsstatus],&#xA;&#x9;[AccDocItems].[STAKZ]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Art der statistischen Belegposition],&#xA;&#x9;[AccDocItems].[STUDT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Studnung bis],&#xA;&#x9;[AccDocItems].[AUGRD]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsgrund],&#xA;&#x9;[AccDocItems].[AUGRD_T]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsgrund_T],&#xA;&#x9;[AccDocItems].[KOFIZ]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Kontenfindungsmerkmal],&#xA;&#x9;[AccDocItems].[TVORG]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Teilvorgang],&#xA;&#x9;[AccDocItems].[HVORG]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Hauptvorgang],&#xA;&#x9;[AccDocItems].[FAEDN]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Nettofälligkeitsdatum],&#xA;&#x9;[AccDocItems].[AUGDT]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Ausgleichsdatum],&#xA;&#x9;[AccDocItems].[BUREL]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Buchungsrelevant]&#xA;INTO [M2C_PAFnow].[Case_Attributes_Account]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentHead] AS [AccDocHead]&#xA;&#x9;&#x9;&#x9;&#x9;ON [AccDocHead].[Client] = [AccDocItems].[Client]&#xA;&#x9;&#x9;&#x9;&#x9;AND [AccDocHead].[OPBEL] = [AccDocItems].[OPBEL]&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Account Attributes';&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Attributes\5-6 Clearing Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{8ac14719-fdd7-4707-bfee-78fc4759951c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="5-6 Clearing Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Clearing Attributes ';&#xA;&#xA;WITH CTE AS (&#xA;SELECT &#xA;       CAST([MeterReading2Accounting].[CaseId] AS BIGINT)                                 AS [CaseId],&#xA;&#x9;[AccDocItems].[OPBEL] AS [Kontokorrentbelegnummer],&#xA;&#x9;[FaktDocHeader].[OPBEL] AS [Fakturabelegnummer],&#xA;&#x9;[AccDocItems].[AUGBL] AS [Ausgleichsbelegnummer],&#xA;&#x9;[AccDocItems].[AUGBT] AS [Ausgleichsbetrag],&#xA;&#x9;[FaktDocHeader].[TOTAL_AMNT] AS [Fakturabetrag],&#xA;&#x9;[AccDocItems].[TVORG] AS [Teilvorgang],&#xA;&#x9;[AccDocItems].[HVORG] AS [Hauptvorgang],&#xA;&#x9;[AccDocItems].[AUGRD] AS [Ausgleichsgrund],&#xA;&#x9;[AccDocItems].[AUGRD_T] AS [Ausgleichsgrund_T],&#xA;&#x9;[AccDocItems].[BUREL],&#xA;&#x9;&#x9;[FaktDocHeader].[FAEDN] AS [Fälligkeitsdatum]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;   INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;INNER JOIN  [M2C_PAFnowIM].[Object_FaktDocData] AS [FaktDocData]&#xA;&#x9;&#x9;ON [FaktDocData].INVOPBEL = [AccDocItems].[OPBEL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;ON [FaktDocData].OPBEL = [FaktDocHeader].[OPBEL]&#xA;   INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentHead] AS [AccDocHead]&#xA;&#x9;&#x9;ON [AccDocHead].[Client] = [AccDocItems].[Client]&#xA;&#x9;&#x9;AND [AccDocHead].[OPBEL] = [AccDocItems].[OPBEL]&#xA;&#x9;WHERE AUGBL IS NULL&#xA;UNION&#xA;SELECT &#xA;    CAST([MeterReading2Accounting].[CaseId] AS BIGINT)                                 AS [CaseId],&#xA;&#x9;[AccDocItems].[OPBEL] AS [KontokorrentBelegnummer],&#xA;&#x9;[FaktDocHeader].[OPBEL] AS [FakturaBelegnummer],&#xA;&#x9;[AccDocItems].[AUGBL] AS [AusgleichsBelegnummer],&#xA;&#x9;[AccDocItems].[AUGBT] AS [AusgleichsBetrag],&#xA;&#x9;[FaktDocHeader].[TOTAL_AMNT] AS [FakturaBetrag],&#xA;&#x9;&#x9;[AccDocItems].[TVORG] AS [TeilVorgang],&#xA;&#x9;[AccDocItems].[HVORG] AS [Hauptvorgang],&#xA;&#x9;[AccDocItems].[AUGRD] AS [Ausgleichsgrund],&#xA;&#x9;[AccDocItems].[AUGRD_T] AS [Ausgleichsgrund_T],&#xA;&#x9;[AccDocItems].[BUREL],&#xA;&#x9;[FaktDocHeader].[FAEDN] AS [Fälligkeitsdatum]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;   INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;INNER JOIN  [M2C_PAFnowIM].[Object_FaktDocData] AS [FaktDocData]&#xA;&#x9;&#x9;ON [FaktDocData].INVOPBEL = [AccDocItems].[OPBEL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;ON [FaktDocData].OPBEL = [FaktDocHeader].[OPBEL]&#xA;   INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentHead] AS [AccDocHead]&#xA;&#x9;&#x9;ON [AccDocHead].[Client] = [AccDocItems].[Client]&#xA;&#x9;&#x9;AND [AccDocHead].[OPBEL] = [AccDocItems].[OPBEL]&#xA;)&#xA;SELECT&#x9;[CTE].[CaseId], &#xA;&#x9;&#x9;[CTE].[Kontokorrentbelegnummer], &#xA;&#x9;&#x9;[CTE].[Fakturabelegnummer], &#xA;&#x9;&#x9;[CTE].[Ausgleichsbelegnummer], &#xA;&#x9;&#x9;[CTE].[Ausgleichsgrund],&#xA;&#x9;&#x9;[CTE].[Ausgleichsgrund_T],&#xA;&#x9;&#x9;sum(Ausgleichsbetrag) AS  [Ausgleichsbetrag], &#xA;&#x9;&#x9;[CTE].[Fakturabetrag],&#xA;&#x9;&#x9;[CTE].[Fälligkeitsdatum],&#xA;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [Fakturabetrag] &gt;= 0&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'FORDERUNG'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE 'GUTSCHRIFT'&#xA;&#x9;&#x9;&#x9;&#x9;END&#x9;&#x9;&#x9;&#x9;&#x9;AS [Fakturabelegart]&#xA;INTO [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;FROM [CTE]&#xA;WHERE [CTE].[BUREL] IS NOT NULL&#xA;GROUP BY&#x9;[CTE].[CaseId], &#xA;&#x9;&#x9;&#x9;[CTE].[Kontokorrentbelegnummer], &#xA;&#x9;&#x9;&#x9;[CTE].[Fakturabelegnummer], &#xA;&#x9;&#x9;&#x9;[CTE].[AusgleichsBelegnummer], &#xA;&#x9;&#x9;&#x9;[CTE].[Fakturabetrag], &#xA;&#x9;&#x9;&#x9;[CTE].[Fälligkeitsdatum], &#xA;&#x9;&#x9;&#x9;[CTE].[Ausgleichsgrund], &#xA;&#x9;&#x9;&#x9;[CTE].[Ausgleichsgrund_T]&#xA;ORDER BY [CTE].[CaseId]&#xA;GO&#xA;&#xA;ALTER TABLE [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;    ADD [AnzahlFakturenUnique] INT&#xA;GO&#xA;&#xA;&#xA;&#xA;WITH CTE2 AS (&#xA;Select [Case_Attributes_Clearing].[Fakturabelegnummer], count([Case_Attributes_Clearing].[Fakturabelegnummer]) AS [AnzahlFakturenUnique]&#xA;FROM [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;GROUP BY [Case_Attributes_Clearing].[Fakturabelegnummer]&#xA;)&#xA;UPDATE  [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;&#x9;SET [AnzahlFakturenUnique] = [CTE2].[AnzahlFakturenUnique]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM CTE2&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnow].[Case_Attributes_Clearing]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ON [Case_Attributes_Clearing].[Fakturabelegnummer] = [CTE2].[Fakturabelegnummer]&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{E6F0373A-ADD8-4359-AEBE-40D6BB24AA9B}"
          DTS:From="Package\Attributes\5-2 Utility Installation Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Attributes\5-3 Contract Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{5F9534A0-B099-4E99-8051-4F049551CCAE}"
          DTS:From="Package\Attributes\5-0 Drop Attribute Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Attributes\5-1 Reading Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 2]"
          DTS:CreationName=""
          DTS:DTSID="{04222F8D-D43A-4AE6-ADAA-B5FDD92D6A4A}"
          DTS:From="Package\Attributes\5-3 Contract Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 2"
          DTS:To="Package\Attributes\5-4 Billing Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 3]"
          DTS:CreationName=""
          DTS:DTSID="{DA283CFA-BCB1-4489-9BDA-43ED5EEE3B54}"
          DTS:From="Package\Attributes\5-4 Billing Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 3"
          DTS:To="Package\Attributes\5-5 Invoice Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 4]"
          DTS:CreationName=""
          DTS:DTSID="{389EE583-30AD-4041-A798-F896DFF1E664}"
          DTS:From="Package\Attributes\5-1 Reading Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 4"
          DTS:To="Package\Attributes\5-2 Utility Installation Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 5]"
          DTS:CreationName=""
          DTS:DTSID="{841ABA9E-2337-4843-AFB5-29574A0CF318}"
          DTS:From="Package\Attributes\5-5 Invoice Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 5"
          DTS:To="Package\Attributes\5-6 Account Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Attributes.PrecedenceConstraints[Einschränkung 6]"
          DTS:CreationName=""
          DTS:DTSID="{462BC04F-44C1-439D-A073-DAFD2DE8689F}"
          DTS:From="Package\Attributes\5-6 Account Attributes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 6"
          DTS:To="Package\Attributes\5-6 Clearing Attributes" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Business Objects"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{9A19F32C-92F8-41FB-895B-BC595D50CB31}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Business Objects">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-0 Drop Business Object Tables"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{5700479D-1CA5-413E-AF9D-6FADFCF1D060}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-0 Drop Business Object Tables"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;-- Ablesebelege&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ReadingDoc]&#xA;GO&#xA;&#xA;&#xA;-- Ablesegründe&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ReadingReason]&#xA;GO&#xA;&#xA;&#xA;-- Faktura Data&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_FaktDocData]&#xA;GO&#xA;&#xA;&#xA;-- Faktura Aussteuerung&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_FaktOutDoc]&#xA;GO&#xA;&#xA;&#xA;-- Faktura Header&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_FaktDocHeader]&#xA;GO&#xA;&#xA;&#xA;-- Abrechnungsbelege&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_BillingDoc]&#xA;GO&#xA;&#xA;&#xA;-- Abrechnungsbelege Aussteuern&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_BillingDocOutsorting]&#xA;GO&#xA;&#xA;&#xA;-- Position der Mahnhistorie&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_DunningHistory]&#xA;GO&#xA;&#xA;-- Abrechnungsbeleg Position&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_BillingItem]&#xA;GO&#xA;&#xA;-- Vertragsdaten&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractData]&#xA;GO&#xA;&#xA;&#xA;-- Vertrag Position&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractDocumentItem]&#xA;GO&#xA;&#xA;&#xA;-- Vertragshistorie&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_IRHistory]&#xA;GO&#xA;&#xA;&#xA;-- Kontokorrent Position&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractAccDocumentItems]&#xA;GO&#xA;&#xA;&#xA;-- Stornobeleg der Fakturierung&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_StornoFaktDocHeader]&#xA;GO&#xA;&#xA;&#xA;-- Kontokorrent&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_AccountDocuments]&#xA;GO&#xA;&#xA;-- Kontokorrent&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractAccDocumentHead]&#xA;GO&#xA;&#xA;&#xA;-- Abrechnungsdokumente&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_BillingDocuments]&#xA;GO&#xA;&#xA;&#xA;-- Technische Daten für Zählwerk&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_TechnicalData]&#xA;GO&#xA;&#xA;&#xA;-- Zählwerkdaten&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_TimeSliceData]&#xA;GO&#xA;&#xA;&#xA;-- Versorgungsanlage Zählwerk&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_InstallationTimeSlices]&#xA;GO&#xA;&#xA;&#xA;-- Versorgungsanlage&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_Installation]&#xA;GO&#xA;&#xA;&#xA;-- Vertragskonto Kopf&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractAccountHeader]&#xA;GO&#xA;&#xA;&#xA;-- Vertragskonto Partnerr&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractAccountPartner]&#xA;GO&#xA;&#xA;&#xA;-- Geschäftspartner&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_BusinessPartner]&#xA;GO&#xA;&#xA;&#xA;-- Tariftyp Kopf&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_RateTypeHead]&#xA;GO&#xA;&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_ContractLocks]&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-1 Meter Reading Docs (EABL)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{9F2794CA-20E5-4C6A-9540-630D9911B869}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-1 Meter Reading Docs (EABL)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Reading Docs';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABLBELNR], ''), NULL) AS NVARCHAR(20))  AS [ABLBELNR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABLESART], ''), NULL) AS NVARCHAR(2))  AS [ABLESART],&#xA;                CAST(ISNULL(NULLIF([p].[ABLESTYP], ''), NULL) AS NVARCHAR(2))  AS [ABLESTYP],&#xA;                CAST(ISNULL(NULLIF([p].[ABLHINW], ''), NULL) AS NVARCHAR(4))  AS [ABLHINW],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABLSTAT], ''), NULL) AS NVARCHAR(1))  AS [ABLSTAT],&#xA;&#x9;&#x9;&#x9;&#x9;[d].[TryDate]  AS [ADAT],&#xA;&#x9;&#x9;&#x9;&#x9;[q].[TryTime] AS [ATIM],&#xA;&#x9;&#x9;&#x9;&#x9;[d].[TryDate] + [q].[TryTime] AS [ADATTIM],&#xA;&#x9;&#x9;&#x9;&#x9;--[k].[TryDate]  AS [ADATERZ],&#xA;&#x9;&#x9;&#x9;&#x9;[n].[TryDate]  AS [ADATSOLL],&#xA;&#x9;&#x9;&#x9;&#x9;[o].[TryDate]  AS [ADATTATS],&#xA;&#x9;&#x9;&#x9;&#x9;[m].[TryDate]  AS [AEDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AENAM], ''), NULL) AS NVARCHAR(12))  AS [AENAM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AKTIV], ''), NULL) AS NVARCHAR(1))  AS [AKTIV],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ARBAUF], ''), NULL) AS NVARCHAR(1))  AS [ARBAUF],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABLESER], ''), NULL) AS NVARCHAR(3))  AS [ABLESER],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[EQUNR], ''), NULL) AS NVARCHAR(18))  AS [EQUNR],&#xA;&#x9;&#x9;&#x9;&#x9;[l].[TryDate]  AS [ERDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ERNAM], ''), NULL) AS NVARCHAR(12))  AS [ERNAM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[GERNR], ''), NULL) AS NVARCHAR(18))  AS [GERNR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ISTABLART], ''), NULL) AS NVARCHAR(2))  AS [ISTABLART],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[NACHERF], ''), NULL) AS NVARCHAR(1))  AS [NACHERF],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[PRUEFPKT], ''), NULL) AS NVARCHAR(2))  AS [PRUEFPKT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE218T].[TEXT60], ''), NULL) AS NVARCHAR(100))  AS [PRUEFPKT_T],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[V_ZWSTNDAB]  AS [V_ZWSTNDAB],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[N_ZWSTAND] AS [N_ZWSTAND],&#xA;&#x9;&#x9;&#x9;&#x9;--CAST(ISNULL(NULLIF([p].[MASSREAD], ''), NULL) AS NVARCHAR(3))  AS [MASSREAD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[MASSBILL], ''), NULL) AS NVARCHAR(3))  AS [MASSBILL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SCHAEGR], ''), NULL) AS NVARCHAR(2))  AS [SCHAEGR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SCHAEVER], ''), NULL) AS NVARCHAR(2))  AS [SCHAEVER],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[POPCODE], ''), NULL) AS NVARCHAR(2))  AS [POPCODE],&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ZWNUMMER], ''), NULL) AS NVARCHAR(3))  AS [ZWNUMMER],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE436T].[TEXT40], ''), NULL) AS NVARCHAR(100))  AS [ISTABLART_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE436T].[ZZ_KD_ABLESETEXT], ''), NULL) AS NVARCHAR(100))  AS [ISTABLART_ABLESETEXT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE614T].[TEXT40], ''), NULL) AS NVARCHAR(100))  AS [ABLESTYP_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE259T].[TABLHINW], ''), NULL) AS NVARCHAR(100))  AS [ABLHINW_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE625T].[TEXT60], ''), NULL) AS NVARCHAR(100))  AS [POPCODE_T]&#xA;INTO [M2C_PAFnowIM].[Object_ReadingDoc]&#xA;FROM [EABL] AS [p]&#xA;&#x9;LEFT JOIN [TE436T] &#xA;&#x9;&#x9;ON [p].[MANDT] = [TE436T].[MANDT]&#xA;&#x9;&#x9;AND [p].[ISTABLART] = [TE436T].[ISTABLART]&#xA;&#x9;&#x9;AND [TE436T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE614T]&#xA;&#x9;&#x9;ON [p].[MANDT] = [TE614T].[MANDT]&#xA;&#x9;&#x9;AND [p].[ABLESTYP] = [TE614T].[ABLESART]&#xA;&#x9;&#x9;AND [TE614T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE259T]&#xA;&#x9;&#x9;ON [p].[MANDT] = [TE259T].[MANDT]&#xA;&#x9;&#x9;AND [p].[ABLHINW] = [TE259T].[ABLHINW]&#xA;&#x9;&#x9;AND [TE259T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE625T]&#xA;&#x9;&#x9;ON [p].[POPCODE] = [TE625T].[POPCODE]&#xA;&#x9;&#x9;AND [TE625T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE218T]&#xA;&#x9;&#x9;ON [p].[PRUEFPKT] = [TE218T].[PRUEFPKT]&#xA;&#x9;&#x9;AND [TE218T].[SPRAS] = @lang&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADAT], ''), NULL)) AS [d]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATERZ], ''), NULL)) AS [k]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDAT], ''), NULL)) AS [m]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATSOLL], ''), NULL)) AS [n]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATTATS], ''), NULL)) AS [o]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([p].[ATIM], ''), NULL)) AS [q]&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-10 Invoicing-Reversal History (ERCHC)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0965a57b-381e-41db-969e-dd5b14c3c2f3}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-10 Invoicing-Reversal History (ERCHC)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Invoicing/Reversal History';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].BELNR, ''), NULL) AS NVARCHAR(12))  AS [BELNR],&#xA;    [f].[TryDate]  AS [BUDAT],&#xA;    [g].[TryDate]  AS [CPUDT],&#xA;    [h].[TryDate] AS [INTBUDAT],&#xA;    [i].[TryDate]  AS [INTCPUDT],&#xA;    CAST(ISNULL(NULLIF([p].[INTOPBEL], ''), NULL) AS NVARCHAR(12))  AS [INTOPBEL],&#xA;    CAST(ISNULL(NULLIF([p].[INVOICED], ''), NULL) AS NVARCHAR(1))  AS [INVOICED],&#xA;    CAST(ISNULL(NULLIF([p].[LFDNR], ''), NULL) AS NVARCHAR(3))  AS [LFDNR],&#xA;    CAST(ISNULL(NULLIF([p].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;    CAST(ISNULL(NULLIF([p].[SIMULATED], ''), NULL) AS NVARCHAR(1))  AS [SIMULATED],&#xA;    CAST(ISNULL(NULLIF([p].[STATUPD], ''), NULL) AS NVARCHAR(1))  AS [STATUPD]&#xA;INTO [M2C_PAFnowIM].[Object_IRHistory]&#xA;FROM [ERCHC] AS [p]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BUDAT], ''), NULL)) AS [f]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[CPUDT], ''), NULL)) AS [g]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[INTBUDAT], ''), NULL)) AS [h]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[INTCPUDT], ''), NULL)) AS [i]&#xA; WHERE [p].[SIMULATED] = ''" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-11 Contract data (EVER)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{38ac4a8b-9c7b-43a7-bb64-7c5e9fabecf9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-11 Contract data (EVER)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Contract Data';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[VERTRAG], ''), NULL) AS NVARCHAR(10))  AS [VERTRAG],&#xA;                CAST(ISNULL(NULLIF([p].[BUKRS], ''), NULL) AS NVARCHAR(4)) AS [BUKRS],&#xA;                CAST(ISNULL(NULLIF([p].[SPARTE], ''), NULL) AS NVARCHAR(2))  AS [SPARTE],&#xA;                CAST(ISNULL(NULLIF([p].[PORTION], ''), NULL) AS NVARCHAR(8))  AS [PORTION],&#xA;&#x9;&#x9;&#x9;&#x9;--CAST(ISNULL(NULLIF([p].[ABREFREIG], ''), NULL) AS NVARCHAR(2))  AS [ABREFREIG],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[INVOICING_PARTY], ''), NULL) AS NVARCHAR(10))  AS [INVOICING_PARTY],&#xA;&#x9;&#x9;&#x9;&#x9;--CAST(ISNULL(NULLIF([p].[ZZSCENARIO], ''), NULL) AS NVARCHAR(18))  AS [EQUNR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABRSPERR], ''), NULL) AS NVARCHAR(2))  AS [ABRSPERR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE021T].[TEXT30], ''), NULL) AS NVARCHAR(50))  AS [ABRSPERR_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ANLAGE], ''), NULL) AS NVARCHAR(10))  AS [ANLAGE],&#xA;&#x9;&#x9;&#x9;&#x9;[d].[TryDate] AS [AUSZDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [EINZDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VKONTO], ''), NULL) AS NVARCHAR(12))  AS [VKONTO],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VBEZ], ''), NULL) AS NVARCHAR(35))  AS [VBEZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[KOFIZ], ''), NULL) AS NVARCHAR(2))  AS [KOFIZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SERVICEID], ''), NULL) AS NVARCHAR(10))  AS [SERVICEID],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([ESERVPROVT].[SP_NAME], ''), NULL) AS NVARCHAR(10))  AS [SERVICEID_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AUSGRUP], ''), NULL) AS NVARCHAR(8))  AS [AUSGRUP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE191T].[TEXT30], ''), NULL) AS NVARCHAR(30))  AS [AUSGRUP_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[LOEVM], ''), NULL) AS NVARCHAR(1))  AS [LOEVM],&#xA;&#x9;&#x9;&#x9;&#x9;[f].[TryDate]  AS [VBEGINN]&#xA;&#x9;&#x9;&#x9;&#x9;--[g].[TryDate]  AS [VENDE]&#xA;INTO [M2C_PAFnowIM].[Object_ContractData]&#xA;FROM [EVER] AS [p]&#xA;&#x9;LEFT JOIN [TE021T]&#xA;&#x9;&#x9;ON [TE021T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE021T].[ABRSPERR] = [p].[ABRSPERR]&#xA;&#x9;&#x9;AND [TE021T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE191T]&#xA;&#x9;&#x9;ON [TE191T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE191T].[AUSGRUP] = [p].[AUSGRUP]&#xA;&#x9;&#x9;AND [TE191T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [ESERVPROVT]&#xA;&#x9;&#x9;ON [ESERVPROVT].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [ESERVPROVT].[SERVICEID] = [p].[SERVICEID]&#xA;&#x9;&#x9;AND [ESERVPROVT].[SPRAS] = @lang&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AUSZDAT], ''), NULL)) AS [d]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[EINZDAT], ''), NULL)) AS [e]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[VBEGINN], ''), NULL)) AS [f]&#xA;&#x9;--CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[VENDE], ''), NULL)) AS [g]&#xA;WHERE [p].[SPARTE] = @division" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@division"
                SQLTask:DtsVariableName="$Package::Division"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-110 Sperren (DFKKLOCKS)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{021638dd-14ba-43b9-9d7d-7ff588b017a2}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-110 Sperren (DFKKLOCKS)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Account Lock';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[CLIENT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[LOOBJ1], ''), NULL) AS NVARCHAR(64))  AS [LOOBJ1],&#xA;                CAST(ISNULL(NULLIF([p].[LOTYP], ''), NULL) AS NVARCHAR(4))  AS [LOTYP],&#xA;                [d].[TryDate]  AS [FDATE],&#xA;    [e].[TryDate]  AS [TDATE],&#xA;    CAST(ISNULL(NULLIF([p].[PROID], ''), NULL) AS NVARCHAR(4))  AS [PROID],&#xA;    CAST(ISNULL(NULLIF([p].[LOCKR], ''), NULL) AS NVARCHAR(2))  AS [LOCKR],&#xA;    CAST(ISNULL(NULLIF([p].[GPART], ''), NULL) AS NVARCHAR(20))  AS [GPART],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[VKONT], ''), NULL) AS NVARCHAR(24))  AS [VKONT],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[COND_LOOBJ], ''), NULL) AS NVARCHAR(64))  AS [COND_LOOBJ],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[ACTKEY], ''), NULL) AS NVARCHAR(4))  AS [ACTKEY],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[UNAME], ''), NULL) AS NVARCHAR(24))  AS [UNAME],&#xA;&#x9;[f].[TryDate]  AS [ADATUM],&#xA;&#x9;[g].[TryTime] AS [AZEIT],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[PROTECTED], ''), NULL) AS NVARCHAR(2))  AS [PROTECTED],&#xA;&#x9;[h].[TryDate]  AS [LAUFD],&#xA;&#x9;CAST(ISNULL(NULLIF([p].[LAUFI], ''), NULL) AS NVARCHAR(12))  AS [LAUFI]&#xA;INTO [M2C_PAFnowIM].[Object_ContractLocks]&#xA;FROM [DFKKLOCKS] AS [p]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[FDATE], ''), NULL)) AS [d]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[TDATE], ''), NULL)) AS [e]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATUM], ''), NULL)) AS [f]&#xA; CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([p].[AZEIT], ''), NULL)) AS [g]&#xA;  CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATUM], ''), NULL)) AS [h]&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-12 Items in Contract Account Document (DFKKOP)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{ce2de622-f5a0-4145-9ea3-56b0654b968f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-12 Items in Contract Account Document (DFKKOP)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA; EXEC PAFnowStatistic 'Objects Contract Account Document Items';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[AUGBD], ''), NULL) AS NVARCHAR(12))  AS [AUGBD],&#xA;                [d].[TryDate] AS [AUGDT],&#xA;                CAST(ISNULL(NULLIF([p].[AUGBL], ''), NULL) AS NVARCHAR(12))  AS [AUGBL],&#xA;                CAST(ISNULL(NULLIF([p].[AUGRD], ''), NULL) AS NVARCHAR(2))  AS [AUGRD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TFK001AT].[TXT50], ''), NULL) AS NVARCHAR(100))  AS [AUGRD_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AUGST], ''), NULL) AS NVARCHAR(1))  AS [AUGST],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[AUGBT] AS [AUGBT],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[BETRH] AS [BETRH],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BLART], ''), NULL) AS NVARCHAR(2))  AS [BLART],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [BUDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[f].[TryDate]  AS [FAEDN],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[GPART], ''), NULL) AS NVARCHAR(10))  AS [GPART],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPUPW], ''), NULL) AS NVARCHAR(3))  AS [OPUPW],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPUPK], ''), NULL) AS NVARCHAR(4))  AS [OPUPK],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPUPZ], ''), NULL) AS NVARCHAR(3))  AS [OPUPZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VKONT], ''), NULL) AS NVARCHAR(12))  AS [VKONT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STAKZ], ''), NULL) AS NVARCHAR(1))  AS [STAKZ],&#xA;&#x9;&#x9;&#x9;&#x9;[g].[TryDate]  AS [STUDT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[PYMET], ''), NULL) AS NVARCHAR(1))  AS [PYMET],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[TVORG], ''), NULL) AS NVARCHAR(5))  AS [TVORG],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[HVORG], ''), NULL) AS NVARCHAR(5))  AS [HVORG],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[KOFIZ], ''), NULL) AS NVARCHAR(5))  AS [KOFIZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([q].[BUREL], ''), NULL) AS NVARCHAR(5))  AS [BUREL]&#xA;INTO [M2C_PAFnowIM].[Object_ContractAccDocumentItems]&#xA;FROM [DFKKOP] AS [p]&#xA;&#x9;LEFT JOIN [DFKKTHI] AS [q]&#xA;&#x9;&#x9;ON [p].[MANDT] = [q].[MANDT]&#xA;&#x9;&#x9;AND [p].[OPBEL] = [q].[OPBEL]&#xA;&#x9;&#x9;AND [p].[OPUPW] = [q].[OPUPW]&#xA;&#x9;&#x9;AND [p].[OPUPK] = [q].[OPUPK]&#xA;&#x9;&#x9;AND [p].[OPUPZ] = [q].[OPUPZ]&#xA;&#x9;&#x9;AND [q].[THINR] = '01'&#xA;&#x9;LEFT JOIN [dbo].[TFK001AT]&#xA;&#x9;&#x9;ON [p].[AUGRD] = [TFK001AT].[AUGRD]&#xA;&#x9;&#x9;AND [TFK001AT].[SPRAS] = @lang&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AUGDT], ''), NULL)) AS [d]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BUDAT], ''), NULL)) AS [e]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[FAEDN], ''), NULL)) AS [f]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[STUDT], ''), NULL)) AS [g]&#xA;&#xA; EXEC PAFnowStatisticUpdate 'Contract Account Document Items';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-13 Header Data in Open Item Accounting Document (DFKKKO)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{c53369a0-2181-4ced-a142-61c6a655963c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-13 Header Data in Open Item Accounting Document (DFKKKO)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;--EXEC PAFnowStatistic 'Business Objects Header Data in Open Item Accounting';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[AWKEY], ''), NULL) AS NVARCHAR(20))  AS [AWKEY],&#xA;                CAST(ISNULL(NULLIF([p].[BLART], ''), NULL) AS NVARCHAR(2))  AS [BLART],&#xA;                [d].[TryDate]  AS [BUDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [CPUDT],&#xA;&#x9;&#x9;&#x9;&#x9;[f].[TryTime]  AS [CPUTM],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  + [f].[TryTime] AS [CPUDTTM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STBEL], ''), NULL) AS NVARCHAR(12))  AS [STBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STORB], ''), NULL) AS NVARCHAR(12))  AS [STORB],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[XBLNR], ''), NULL) AS NVARCHAR(16))  AS [XBLNR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ERNAM], ''), NULL) AS NVARCHAR(12))  AS [ERNAM]&#xA;INTO [M2C_PAFnowIM].[Object_ContractAccDocumentHead]&#xA;FROM [DFKKKO] AS [p]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BUDAT], ''), NULL)) AS [d]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[CPUDT], ''), NULL)) AS [e]&#xA;  CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([p].[CPUTM], ''), NULL)) AS [f]&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-14 Technichal Data for Installed Register data (ETDZ)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{085a560c-6448-42fd-8970-6d2832a5b0d0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-14 Technichal Data for Installed Register data (ETDZ)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Technical Data';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [AB],&#xA;                [d].[TryDate]  AS [AEDAT],&#xA;               [p].[ANZERG]  AS [ANZERG],&#xA;                [f].[TryDate] AS [BIS],&#xA;                CAST(ISNULL(NULLIF([p].[EQUNR], ''), NULL) AS NVARCHAR(18))  AS [EQUNR],&#xA;                [g].[TryDate] AS [ERDAT],&#xA;                CAST(ISNULL(NULLIF([p].[INTSIZEID], ''), NULL) AS NVARCHAR(4)) AS [INTSIZEID],&#xA;                CAST(ISNULL(NULLIF([p].[KENNZIFF], ''), NULL) AS NVARCHAR(12)) AS [KENNZIFF],&#xA;                CAST(ISNULL(NULLIF([p].[KZMESSW], ''), NULL) AS NVARCHAR(1)) AS [KZMESSW],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[LOGIKZW], ''), NULL) AS NVARCHAR(18)) AS [LOGIKZW],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[NABLESEN], ''), NULL) AS NVARCHAR(1)) AS [NABLESEN],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[PRUEFKL], ''), NULL) AS NVARCHAR(4)) AS [PRUEFKL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE408T].[TEXT30], ''), NULL) AS NVARCHAR(100)) AS [PRUEFKL_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SPARTYP], ''), NULL) AS NVARCHAR(2)) AS [SPARTYP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STEUERGRP], ''), NULL) AS NVARCHAR(4)) AS [STEUERGRP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[TOUPERIOD], ''), NULL) AS NVARCHAR(10)) AS [TOUPERIOD],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[UEBERVER] AS [UEBERVER],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[ZWFAKT] AS [ZWFAKT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ZWNUMMER], ''), NULL) AS NVARCHAR(3)) AS [ZWNUMMER]&#xA;INTO [M2C_PAFnowIM].[Object_TechnicalData]&#xA;FROM [ETDZ] AS [p]&#xA;&#x9;LEFT JOIN [TE408T]&#xA;&#x9;ON [TE408T].[MANDT] = [p].[MANDT]&#xA;&#x9;AND [TE408T].[PRUEFKL] = [p].[PRUEFKL]&#xA;&#x9;AND [TE408T].[SPRAS] = 'D'&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDAT], ''), NULL)) AS [d]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AB], ''), NULL)) AS [e]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BIS], ''), NULL)) AS [f]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [g]&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-15 Billing data Installation Structure at Reg Level data  (EASTS)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{2b9b0f08-d4f7-4438-9ece-bb2d7ecaaf7e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-15 Billing data Installation Structure at Reg Level data  (EASTS)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Time Slice Invoice Data';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [AB],&#xA;                CAST(ISNULL(NULLIF([p].[ANLAGE], ''), NULL) AS NVARCHAR(10))  AS [ANLAGE],&#xA;                [f].[TryDate] AS [BIS],&#xA;                CAST(ISNULL(NULLIF([p].[LOGIKZW], ''), NULL) AS NVARCHAR(18)) AS [LOGIKZW],&#xA;                CAST(ISNULL(NULLIF([p].[PREISKLA], ''), NULL) AS NVARCHAR(4)) AS [PREISKLA],&#xA;                CAST(ISNULL(NULLIF([p].[TARIFART], ''), NULL) AS NVARCHAR(12)) AS [TARIFART],&#xA;                CAST(ISNULL(NULLIF([p].[ZWNABR], ''), NULL) AS NVARCHAR(1)) AS [ZWNABR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ZWNSETTL], ''), NULL) AS NVARCHAR(1)) AS [ZWNSETTL]&#xA;INTO [M2C_PAFnowIM].[Object_TimeSliceData]&#xA;FROM [EASTS] AS [p]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AB], ''), NULL)) AS [e]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BIS], ''), NULL)) AS [f]&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-16 Installation Time Slice (EANLH)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{8c3c37d2-9148-462f-9299-54c55567c926}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-16 Installation Time Slice (EANLH)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Installation Time Slices';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [AB],&#xA;                CAST(ISNULL(NULLIF([p].[ANLAGE], ''), NULL) AS NVARCHAR(10))  AS [ANLAGE],&#xA;                [f].[TryDate] AS [BIS],&#xA;                CAST(ISNULL(NULLIF([p].[ABLEINH], ''), NULL) AS NVARCHAR(8)) AS [ABLEINH],&#xA;                CAST(ISNULL(NULLIF([p].[AKLASSE], ''), NULL) AS NVARCHAR(4)) AS [AKLASSE],&#xA;                CAST(ISNULL(NULLIF([p].[BRANCHE], ''), NULL) AS NVARCHAR(10)) AS [BRANCHE],&#xA;                CAST(ISNULL(NULLIF([p].[TARIFTYP], ''), NULL) AS NVARCHAR(10)) AS [TARIFTYP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[TEMP_AREA], ''), NULL) AS NVARCHAR(8)) AS [TEMP_AREA]&#xA;INTO [M2C_PAFnowIM].[Object_InstallationTimeSlices]&#xA;FROM [EANLH] AS [p]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AB], ''), NULL)) AS [e]&#xA; CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BIS], ''), NULL)) AS [f]&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-17 Installation (EANL)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{1740cdbb-214c-486e-9b84-cd3245f14959}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-17 Installation (EANL)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Installation Time Slices';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[ABLESARTST], ''), NULL) AS NVARCHAR(10))  AS [ABLESARTST],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE438T].[TEXT30], ''), NULL) AS NVARCHAR(100))  AS [ABLESARTST_T],&#xA;                CAST(ISNULL(NULLIF([p].[ABLSPERR], ''), NULL) AS NVARCHAR(8)) AS [ABLSPERR],&#xA;                CAST(ISNULL(NULLIF([p].[ANLAGE], ''), NULL) AS NVARCHAR(12)) AS [ANLAGE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE439T].[TEXT30], ''), NULL) AS NVARCHAR(100)) AS [ANLART_T],&#xA;                CAST(ISNULL(NULLIF([p].[ANLART], ''), NULL) AS NVARCHAR(10)) AS [ANLART],&#xA;                CAST(ISNULL(NULLIF([p].[BEZUG], ''), NULL) AS NVARCHAR(10)) AS [BEZUG],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SERVICE], ''), NULL) AS NVARCHAR(8)) AS [SERVICE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SPARTE], ''), NULL) AS NVARCHAR(4)) AS [SPARTE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VSTELLE], ''), NULL) AS NVARCHAR(12)) AS [VSTELLE]&#xA;INTO [M2C_PAFnowIM].[Object_Installation]&#xA;FROM [EANL] AS [p]&#xA;&#x9;LEFT JOIN [TE438T]&#xA;&#x9;&#x9;ON [TE438T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE438T].[ABLESARTST] = [p].[ABLESARTST]&#xA;&#x9;&#x9;AND [TE438T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE439T]&#xA;&#x9;&#x9;ON [TE439T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE439T].[ANLART] = [p].[ANLART]&#xA;&#x9;&#x9;AND [TE439T].[SPRAS] = @lang&#xA;WHERE [p].[SPARTE] = @division&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@division"
                SQLTask:DtsVariableName="$Package::Division"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-18 Contract Account Head (FKKVK)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{559fa827-6e8c-4450-8270-a26307f13d19}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-18 Contract Account Head (FKKVK)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Contract Account Header';&#xA;&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [l].[TryDate] AS [AEDAT],&#xA;                [m].[TryDate] AS [ERDAT],&#xA;                [p].[VKONT] AS [VKONT],&#xA;                CAST(ISNULL(NULLIF([p].[VKTYP], ''), NULL) AS NVARCHAR(10)) AS [VKTYP]&#xA;INTO [M2C_PAFnowIM].[Object_ContractAccountHeader]&#xA;FROM [FKKVK] AS [p]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDAT], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [m]&#xA;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-19 Contract Account Partner (FKKVKP)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{37d72c81-7458-4a77-80db-4bf99a7af1a9}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-19 Contract Account Partner (FKKVKP)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Contract Account Partner';&#xA;&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(6))  AS [Client],&#xA;                [m].[TryDate] AS [ERDAT],&#xA;                CAST(ISNULL(NULLIF([p].[ABVTY], ''), NULL) AS NVARCHAR(8)) AS [ABVTY],&#xA;&#x9;&#x9;&#x9;&#x9;[l].[TryDate] AS [AEDATP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AENAMP], ''), NULL) AS NVARCHAR(24)) AS [AENAMP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AUSGRUP_IN], ''), NULL) AS NVARCHAR(16)) AS [AUSGRUP_IN],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE192T].[TEXT30], ''), NULL) AS NVARCHAR(16)) AS [AUSGRUP_IN_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AZASP], ''), NULL) AS NVARCHAR(2)) AS [AZASP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AZAWE], ''), NULL) AS NVARCHAR(10)) AS [AZAWE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[EBVTY], ''), NULL) AS NVARCHAR(8)) AS [EBVTY],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ERNAM], ''), NULL) AS NVARCHAR(24)) AS [ERNAM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[EZASP], ''), NULL) AS NVARCHAR(2)) AS [EZASP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[EZAWE], ''), NULL) AS NVARCHAR(2)) AS [EZAWE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[GPART], ''), NULL) AS NVARCHAR(10)) AS [GPART],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[KOFIZ_SD], ''), NULL) AS NVARCHAR(4)) AS [KOFIZ_SD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[KTOKL], ''), NULL) AS NVARCHAR(8)) AS [KTOKL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[KZABSVER], ''), NULL) AS NVARCHAR(2)) AS [KZABSVER],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[MANSP], ''), NULL) AS NVARCHAR(2)) AS [MAHNSP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[MAHNV], ''), NULL) AS NVARCHAR(4)) AS [MAHNV],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[MGRUP], ''), NULL) AS NVARCHAR(4)) AS [MGRUP],&#xA;&#x9;&#x9;&#x9;&#x9;[n].[TryDate] AS [STOPD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VKONT], ''), NULL) AS NVARCHAR(10)) AS [VKONT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ZAHLKOND], ''), NULL) AS NVARCHAR(8)) AS [ZAHLKOND],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE052T].[TEXT], ''), NULL) AS NVARCHAR(40)) AS [ZAHLKOND_T]&#xA;INTO [M2C_PAFnowIM].[Object_ContractAccountPartner]&#xA;FROM [FKKVKP] AS [p]&#xA;&#x9;LEFT JOIN [TE052T]&#xA;&#x9;&#x9;ON [TE052T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE052T].[ZAHLKOND] = [p].[ZAHLKOND]&#xA;&#x9;&#x9;AND [TE052T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE192T]&#xA;&#x9;&#x9;ON [TE192T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE192T].[AUSGRUP_IN] = [p].[AUSGRUP_IN]&#xA;&#x9;&#x9;AND [TE192T].[SPRAS] = @lang&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDATP], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [m]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[STOPD], ''), NULL)) AS [n]&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-2 Meter Reading Reason (EABLG)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{6EE1841D-82DF-4EE6-94CF-D6BF24C90AF4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-2 Meter Reading Reason (EABLG)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Reading Reasons';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([h].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([h].[ABLBELNR], ''), NULL) AS NVARCHAR(20))  AS [ABLBELNR],&#xA;                CAST(ISNULL(NULLIF([h].[ANLAGE], ''), NULL) AS NVARCHAR(10))  AS [ANLAGE],&#xA;                CAST(ISNULL(NULLIF([h].[ABLESGR], ''), NULL) AS NVARCHAR(2)) AS [ABLESGR],&#xA;                [d].[TryDate]  AS [ADATSOLL],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [ABRDATS],&#xA;                CAST(ISNULL(NULLIF([h].[UNTERDR], ''), NULL) AS NVARCHAR(1))  AS [UNTERDR],&#xA;                CAST(ISNULL(NULLIF([h].[ABLEINH], ''), NULL) AS NVARCHAR(8)) AS [ABLEINH],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE609T].[TEXT40], ''), NULL) AS NVARCHAR(50)) AS [ABLESGR_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE422].[TERMTEXT], ''), NULL) AS NVARCHAR(100)) AS [ABLEINH_T]&#xA;INTO [M2C_PAFnowIM].[Object_ReadingReason]&#xA;FROM [EABLG] AS [h]&#xA;&#x9;LEFT JOIN [TE609T]&#xA;&#x9;&#x9;ON [TE609T].[ABLESGR] = [h].[ABLESGR]&#xA;&#x9;&#x9;AND [TE609T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [TE422]&#xA;&#x9;&#x9;ON [TE422].[MANDT] = [h].[MANDT]&#xA;&#x9;&#x9;AND [TE422].[TERMSCHL] = [h].[ABLEINH]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[ADATSOLL], ''), NULL)) AS [d]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[ABRDATS], ''), NULL)) AS [e]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-20 Partner (BUT000)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{eb8fa783-9daf-4506-a9e6-e5d709a9b94a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-20 Partner (BUT000)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Partner';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[CLIENT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [l].[TryTime] AS [CHTIM],&#xA;&#x9;&#x9;&#x9;&#x9;[m].[TryDate] AS [CHDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[VALID_FROM] AS [VALID_FROM],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[VALID_TO] AS [VALID_TO],&#xA;                CAST(ISNULL(NULLIF([p].[PARTNER], ''), NULL) AS NVARCHAR(10)) AS [PARTNER],&#xA;&#x9;&#x9;&#x9;&#x9; CAST(ISNULL(NULLIF([p].[BPKIND], ''), NULL) AS NVARCHAR(10)) AS [BPKIND],&#xA;&#x9;&#x9;&#x9;&#x9; CAST(ISNULL(NULLIF([TB004T].[TEXT40], ''), NULL) AS NVARCHAR(10)) AS [BPKIND_T],&#xA;&#x9;&#x9;&#x9;&#x9;  CAST(ISNULL(NULLIF([p].[TYPE], ''), NULL) AS NVARCHAR(10)) AS [TYPE]&#xA;INTO [M2C_PAFnowIM].[Object_BusinessPartner]&#xA;FROM [BUT000] AS [p]&#xA;&#x9;LEFT JOIN [TB004T]&#xA;&#x9;&#x9;ON [TB004T].[CLIENT] = [p].[CLIENT]&#xA;&#x9;&#x9;AND [TB004T].[BPKIND] = [p].[BPKIND]&#xA;&#x9;&#x9;AND [TB004T].[SPRAS] = @lang&#xA;&#x9;CROSS APPLY [dbo].TryConvertToTIME(ISNULL(NULLIF([p].[CHTIM], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[CHDAT], ''), NULL)) AS [m]&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-21 Tariftyp Kopfdaten (ETTA)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{c1276dbf-4db8-48ee-81e5-eb0a1d39d412}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-21 Tariftyp Kopfdaten (ETTA)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Tariftyp';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[AUSGRUP], ''), NULL) AS NVARCHAR(16)) AS [AUSGRUP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[AKLASSE], ''), NULL) AS NVARCHAR(8)) AS [AKLASSE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([EAKLASSET].[TEXT], ''), NULL) AS NVARCHAR(100)) AS [AKLASSE_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SCHEMANR], ''), NULL) AS NVARCHAR(20)) AS [SCHEMANR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SPARTE], ''), NULL) AS NVARCHAR(4)) AS [SPARTE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[TARIFTYP], ''), NULL) AS NVARCHAR(20)) AS [TARIFTYP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([ETTAT].[TTYPBEZ], ''), NULL) AS NVARCHAR(100)) AS [TARIFTYP_T]&#xA;INTO [M2C_PAFnowIM].[Object_RateTypeHead]&#xA;FROM [ETTA] AS [p]&#xA;&#x9;LEFT JOIN [EAKLASSET]&#xA;&#x9;&#x9;ON [EAKLASSET].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [EAKLASSET].[AKLASSE] = [p].[AKLASSE]&#xA;&#x9;&#x9;AND [EAKLASSET].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [ETTAT]&#xA;&#x9;&#x9;ON [ETTAT].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [ETTAT].[TARIFTYP] = [p].[TARIFTYP]&#xA;&#x9;&#x9;AND [ETTAT].[SPRAS] = @lang&#xA;WHERE [p].[SPARTE] = @division" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@division"
                SQLTask:DtsVariableName="$Package::Division"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-3 Invoice Outsorting Docs (ERDO)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{57191FBE-5FA4-43B3-A4EB-F4B7BBC38B6B}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-3 Invoice Outsorting Docs (ERDO)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Faktura Outsorting Docs';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([h].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [h].[DEVIATION]  AS [DEVIATION],&#xA;               [o].[TryDate]  AS [FREI_AM],&#xA;                CAST(ISNULL(NULLIF([h].[FREI_VON], ''), NULL) AS NVARCHAR(10)) AS [FREI_VON],&#xA;                CAST(ISNULL(NULLIF([h].[MANOUTS_IN], ''), NULL) AS NVARCHAR(3))  AS [MANOUTS_IN],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[OUTCNSO], ''), NULL) AS NVARCHAR(3))  AS [OUTCNSO],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[OUTCOUNT], ''), NULL) AS NVARCHAR(3))  AS [OUTCOUNT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[OUTSORT_IN], ''), NULL) AS NVARCHAR(3))  AS [OUTSORT_IN],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[OUTSORT_PR], ''), NULL) AS NVARCHAR(3))  AS [OUTSORT_PR],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[SIMULATION], ''), NULL) AS NVARCHAR(3))  AS [SIMULATION],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[VALIDAT_IN], ''), NULL) AS NVARCHAR(3))  AS [VALIDAT_IN]&#xA;&#xA;INTO [M2C_PAFnowIM].[Object_FaktOutDoc]&#xA;FROM [ERDO] AS [h]&#xA;&#x9;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[FREI_AM], ''), NULL)) AS [o]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-4 Invoice Docs Header (ERDK)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{EEF590C5-555B-4A47-A0D0-E2B3415EACFD}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-4 Invoice Docs Header (ERDK)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Faktura Docs';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [l].[TryDate]  AS [AEDAT],&#xA;                CAST(ISNULL(NULLIF([p].[ERNAM], ''), NULL) AS NVARCHAR(12))  AS [ERNAM],&#xA;                [m].[TryDate]  AS [DRUCKDAT],&#xA;                [n].[TryDate]  AS [ERDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[t].[TryTime] AS [CREATION_TIME],&#xA;&#x9;&#x9;&#x9;&#x9;[n].[TryDate] + [t].[TryTime] AS [ERDATTIME],&#xA;&#x9;&#x9;&#x9;&#x9;[o].[TryDate]  AS [FAEDN],&#xA;&#x9;&#x9;&#x9;&#x9;[q].[TryDate]  AS [FAEDS],&#xA;&#x9;&#x9;&#x9;&#x9;[p].[TOTAL_AMNT] AS [TOTAL_AMNT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[INTOPBEL], ''), NULL) AS NVARCHAR(12))  AS [INTOPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[PRINTLOCK], ''), NULL) AS NVARCHAR(1))  AS [PRINTLOCK],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[PYMET], ''), NULL) AS NVARCHAR(1))  AS [PYMET],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SIMULATED], ''), NULL) AS NVARCHAR(1))  AS [SIMULATED],&#xA;&#x9;&#x9;&#x9;&#x9;[r].[TryDate] AS [STO_BUDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STO_OPBEL], ''), NULL) AS NVARCHAR(12))  AS [STO_OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[STOKZ], ''), NULL) AS NVARCHAR(1))  AS [STOKZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[TOBRELEASD], ''), NULL) AS NVARCHAR(1))  AS [TOBRELEASD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VKONT], ''), NULL) AS NVARCHAR(12))  AS [VKONT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ERGRD], ''), NULL) AS NVARCHAR(2))  AS [ERGRD],&#xA;&#x9;&#x9;&#x9;&#x9;[s].[TryDate]  AS [EDISENDDATE]&#xA;INTO [M2C_PAFnowIM].[Object_FaktDocHeader]&#xA;FROM [ERDK] AS [p]&#xA;&#x9;LEFT JOIN [dbo].[DBERDL]&#xA;&#x9;&#x9;ON [DBERDL].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [DBERDL].PRINTDOC = [p].[OPBEL]&#xA;&#x9;&#x9;AND [DBERDL].[BELZART] = 'SUBT'&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDAT], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[DRUCKDAT], ''), NULL)) AS [m]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [n]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[FAEDN], ''), NULL)) AS [o]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[FAEDS], ''), NULL)) AS [q]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[STO_BUDAT], ''), NULL)) AS [r]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[EDISENDDATE], ''), NULL)) AS [s]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([p].[CREATION_TIME], ''), NULL)) AS [t]&#xA;WHERE (([p].[INTOPBEL] is NULL OR [p].[INTOPBEL] = '') AND ([p].[STOKZ] is NULL OR [p].[STOKZ] = '')) &#xA;&#x9;&#x9;OR (([p].[INTOPBEL] IS NOT NULL OR [p].[INTOPBEL] &lt;&gt; '') AND [p].[STOKZ] = 'X')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-5 Invoice Docs Data (ERDB)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{51D1C598-1617-4FCF-8723-0329F12D8423}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-5 Invoice Docs Data (ERDB)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Faktura Docs Data';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [OPBEL],&#xA;                --CAST(ISNULL(NULLIF([p].[LFDNR], ''), NULL) AS NVARCHAR(6))  AS [LFDNR],&#xA;                CAST(ISNULL(NULLIF([p].[INVOPBEL], ''), NULL) AS NVARCHAR(12)) AS [INVOPBEL],&#xA;                CAST(ISNULL(NULLIF([p].[INVOPUPW], ''), NULL) AS NVARCHAR(3))  AS [INVOPUPW],&#xA;                CAST(ISNULL(NULLIF([p].[INVOPUPK], ''), NULL) AS NVARCHAR(4))  AS [INVOPUPK],&#xA;                CAST(ISNULL(NULLIF([p].[DOC_ID], ''), NULL) AS NVARCHAR(1)) AS [DOC_ID]&#xA;INTO [M2C_PAFnowIM].[Object_FaktDocData]&#xA;FROM [ERDB] AS [p]&#xA;WHERE [p].[DOC_ID] IN ('A','F','T','V','Z')" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-6 Dunning Histroy (FKKMAZE)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{6b4123f7-0e8a-4af8-87ef-04aa1c3fa75f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-6 Dunning Histroy (FKKMAZE)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business Objects Reading Reasons';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([h].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [d].[TryDate]  AS [LAUFD],&#xA;                CAST(ISNULL(NULLIF([h].[LAUFI], ''), NULL) AS NVARCHAR(6))  AS [LAUFI],&#xA;                CAST(ISNULL(NULLIF([h].[GPART], ''), NULL) AS NVARCHAR(10)) AS [GPART],&#xA;                CAST(ISNULL(NULLIF([h].[VKONT], ''), NULL) AS NVARCHAR(12))  AS [VKONT],&#xA;                CAST(ISNULL(NULLIF([h].[MAZAE], ''), NULL) AS NVARCHAR(6))  AS [MAZAE],&#xA;                CAST(ISNULL(NULLIF([h].[OPBEL], ''), NULL) AS NVARCHAR(12)) AS [OPBEL],&#xA;                CAST(ISNULL(NULLIF([h].[OPUPW], ''), NULL) AS NVARCHAR(3)) AS [OPUPW],&#xA;                CAST(ISNULL(NULLIF([h].[OPUPK], ''), NULL) AS NVARCHAR(4)) AS [OPUPK],&#xA;                CAST(ISNULL(NULLIF([h].[OPUPZ], ''), NULL) AS NVARCHAR(3))          AS [OPUPZ],&#xA;                CAST(ISNULL(NULLIF([h].[MAHNS], ''), NULL) AS NVARCHAR(2))  AS [MAHNS],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[MSTYP], ''), NULL) AS NVARCHAR(2))  AS [MSTYP],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[XMSTO], ''), NULL) AS NVARCHAR(1))  AS [XMSTO],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[MAHNV], ''), NULL) AS NVARCHAR(2))  AS [MAHNV],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS  [MDRKD],&#xA;&#x9;&#x9;&#x9;&#x9;[f].[TryDate]   AS [AUSDT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([h].[MANSP], ''), NULL) AS NVARCHAR(1))  AS [MANSP],&#xA;&#x9;&#x9;&#x9;&#x9;[h].[MBETM]  AS [MBETM]&#xA;INTO [M2C_PAFnowIM].[Object_DunningHistory]&#xA;FROM [FKKMAZE] AS [h]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[LAUFD], ''), NULL)) AS [d]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[MDRKD], ''), NULL)) AS [e]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([h].[AUSDT], ''), NULL)) AS [f]" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-7 Cancellation Invoice (ERDK)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{9704e799-98a8-439e-8eae-119404119a8e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-7 Cancellation Invoice (ERDK)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Faktura Docs';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([StornoFacturaDocs].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                [l].[TryDate]  AS [AEDAT],&#xA;                CAST(ISNULL(NULLIF([StornoFacturaDocs].[ERNAM], ''), NULL) AS NVARCHAR(12))  AS [ERNAM],&#xA;                [m].[TryDate]  AS [DRUCKDAT],&#xA;                [n].[TryDate]  AS [ERDAT],&#xA;&#x9;&#x9;&#x9;&#x9;[o].[TryDate]  AS [FAEDN],&#xA;&#x9;&#x9;&#x9;&#x9;[q].[TryDate]  AS [FAEDS],&#xA;&#x9;&#x9;&#x9;&#x9;[n].[TryDate] + [t].[TryTime] AS [ERDATTIME],&#xA;&#x9;&#x9;&#x9;&#x9;[StornoFacturaDocs].[TOTAL_AMNT]  AS [TOTAL_AMNT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[INTOPBEL], ''), NULL) AS NVARCHAR(12))  AS [FactDocID],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[OPBEL], ''), NULL) AS NVARCHAR(12))  AS [StornoID],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[PRINTLOCK], ''), NULL) AS NVARCHAR(1))  AS [PRINTLOCK],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[PYMET], ''), NULL) AS NVARCHAR(1))  AS [PYMET],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[SIMULATED], ''), NULL) AS NVARCHAR(1))  AS [SIMULATED],&#xA;&#x9;&#x9;&#x9;&#x9;[r].[TryDate] AS [STO_BUDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[STO_OPBEL], ''), NULL) AS NVARCHAR(12))  AS [STO_OPBEL],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[STOKZ], ''), NULL) AS NVARCHAR(1))  AS [STOKZ],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[TOBRELEASD], ''), NULL) AS NVARCHAR(1))  AS [TOBRELEASD],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[VKONT], ''), NULL) AS NVARCHAR(12))  AS [VKONT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([StornoFacturaDocs].[ERGRD], ''), NULL) AS NVARCHAR(2))  AS [ERGRD],&#xA;&#x9;&#x9;&#x9;&#x9;[s].[TryDate]  AS [EDISENDDATE],&#xA;&#x9;&#x9;&#x9;&#x9;[t].[TryTime]  AS [CREATION_TIME]&#xA;INTO [M2C_PAFnowIM].[Object_StornoFaktDocHeader]&#xA;FROM [ERDK] AS [FacturaDocs]&#xA;&#x9;INNER JOIN [ERDK] AS [StornoFacturaDocs]&#xA;&#x9;&#x9;ON [FacturaDocs].[MANDT] = [StornoFacturaDocs].[MANDT]&#xA;&#x9;&#x9;AND [FacturaDocs].[INTOPBEL] = [StornoFacturaDocs].[OPBEL]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[AEDAT], ''), NULL)) AS [l]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[DRUCKDAT], ''), NULL)) AS [m]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[ERDAT], ''), NULL)) AS [n]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[FAEDN], ''), NULL)) AS [o]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[FAEDS], ''), NULL)) AS [q]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([StornoFacturaDocs].[CREATION_TIME], ''), NULL)) AS [t]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[STO_BUDAT], ''), NULL)) AS [r]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([StornoFacturaDocs].[EDISENDDATE], ''), NULL)) AS [s]&#xA;WHERE [FacturaDocs].[STOKZ] = 'X'&#xA;AND ([FacturaDocs].[SIMULATED] = '' OR [FacturaDocs].[SIMULATED] IS NULL)" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-8 Billing Docs (ERCH)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{fcc6726a-e22b-4177-895e-53fc3486bf36}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-8 Billing Docs (ERCH)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Billing Docs';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BUKRS], ''), NULL) AS NVARCHAR(3))  AS [CompanyCode],&#xA;                [d].[TryDate]  AS [ABRDATS],&#xA;                CAST(ISNULL(NULLIF([p].[KOFIZ], ''), NULL) AS NVARCHAR(2))  AS [KOFIZ],&#xA;                CAST(ISNULL(NULLIF([p].[KTOKLASSE], ''), NULL) AS NVARCHAR(4)) AS [KTOKLASSE],&#xA;                CAST(ISNULL(NULLIF([p].[BILLINGRUNNO], ''), NULL) AS NVARCHAR(12))  AS [BILLINGRUNNO],&#xA;                CAST(ISNULL(NULLIF([p].[TOBRELEASD], ''), NULL) AS NVARCHAR(1))  AS [TOBRELEASD],&#xA;                CAST(ISNULL(NULLIF([p].[BILLING_PERIOD], ''), NULL) AS NVARCHAR(10)) AS [BILLING_PERIOD],&#xA;                CAST(ISNULL(NULLIF([p].[ABPOPBEL], ''), NULL) AS NVARCHAR(12)) AS [ABPOPBEL],&#xA;                CAST(ISNULL(NULLIF([p].[ABRVORG], ''), NULL) AS NVARCHAR(2)) AS [ABRVORG],&#xA;&#x9;&#x9;&#x9;&#x9;[e].[TryDate]  AS [ADATSOLL],&#xA;&#x9;&#x9;&#x9;&#x9;[f].[TryDate]  AS [AEDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BCREASON], ''), NULL) AS NVARCHAR(2)) AS [BCREASON],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BEGABRPE], ''), NULL) AS NVARCHAR(2)) AS [BEGABRPE],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BELEGART], ''), NULL) AS NVARCHAR(2)) AS [BELEGART],&#xA;&#x9;&#x9;&#x9;&#x9;[g].[TryDate] AS [BELEGDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[BELNR], ''), NULL) AS NVARCHAR(12)) AS [BELNR],&#xA;&#x9;&#x9;&#x9;&#x9;[h].[TryDate] AS [ENDABRPE],&#xA;&#x9;&#x9;&#x9;&#x9;[i].[TryDate] AS [ERDAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[GPARTNER], ''), NULL) AS NVARCHAR(10)) AS [GPARTNER],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ERNAM], ''), NULL) AS NVARCHAR(10)) AS [ERNAM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SIMRUNID], ''), NULL) AS NVARCHAR(8)) AS [SIMRUNID],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SIMULATION], ''), NULL) AS NVARCHAR(2)) AS [SIMULATION],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SPARTE], ''), NULL) AS NVARCHAR(2)) AS [SPARTE],&#xA;&#x9;&#x9;&#x9;&#x9;[j].[TryDate] AS [STORNODAT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VERTRAG], ''), NULL) AS NVARCHAR(10)) AS [VERTRAG],&#xA;&#x9;&#x9;&#x9;&#x9;--CAST(ISNULL(NULLIF([p].[VKONTO], ''), NULL) AS NVARCHAR(12)) AS [VKONTO],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[LOEVM], ''), NULL) AS NVARCHAR(1)) AS [LOEVM],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE272T].[TEXT40], ''), NULL) AS NVARCHAR(100)) AS [BCREASON_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE093T].[TEXT30], ''), NULL) AS NVARCHAR(100)) AS [BELEGART_T],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([TE097T].[TEXT50], ''), NULL) AS NVARCHAR(100)) AS [KOFIZ_T],&#xA;&#x9;&#x9;&#x9;&#x9;[k].[TryTime] AS [EROETIM],&#xA;&#x9;&#x9;&#x9;&#x9;[i].[TryDate] + COALESCE([k].[TryTime], 0)                  AS [ERDATETIME],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[ABLEINH], ''), NULL) AS NVARCHAR(8)) AS [ABLEINH]&#xA;INTO [M2C_PAFnowIM].[Object_BillingDoc]&#xA;FROM [ERCH] AS [p]&#xA;&#x9;LEFT JOIN [dbo].[TE272T] AS [TE272T]&#xA;&#x9;&#x9;ON [TE272T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE272T].[BCREASON] = [p].[BCREASON]&#xA;&#x9;&#x9;AND [TE272T].[SPRAS] = @lang&#xA;&#x9;LEFT JOIN [dbo].[TE093T] AS [TE093T]&#xA;&#x9;&#x9;ON [TE093T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE093T].[BELEGART] = [p].[BELEGART]&#xA;&#x9;LEFT JOIN [dbo].[TE097T] &#xA;&#x9;&#x9;ON [TE097T].[MANDT] = [p].[MANDT]&#xA;&#x9;&#x9;AND [TE097T].[SPARTE] = [p].[SPARTE]&#xA;&#x9;&#x9;AND [TE097T].[KOFIZ] = [p].[KOFIZ]&#xA;&#x9;&#x9;AND [TE097T].[SPRAS] = @lang&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ABRDATS], ''), NULL)) AS [d]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ADATSOLL], ''), NULL)) AS [e]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[AEDAT], ''), NULL)) AS [f]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[BELEGDAT], ''), NULL)) AS [g]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ENDABRPE], ''), NULL)) AS [h]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[ERDAT], ''), NULL)) AS [i]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[STORNODAT], ''), NULL)) AS [j]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToTime(ISNULL(NULLIF([p].[EROETIM], ''), NULL)) AS [k]&#xA;WHERE [p].[BELEGART] NOT IN ('BA', 'SI')&#xA;AND [p].[SPARTE] = @division&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask">
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@lang"
                SQLTask:DtsVariableName="$Package::Language"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="1" />
              <SQLTask:ParameterBinding
                SQLTask:ParameterName="@division"
                SQLTask:DtsVariableName="$Package::Division"
                SQLTask:ParameterDirection="Input"
                SQLTask:DataType="16"
                SQLTask:ParameterSize="2" />
            </SQLTask:SqlTaskData>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Business Objects\1-9 Billing Docs Outsorting (ERCHO)"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{6edc60a4-5d9d-4925-a6d2-48aa7ef5c540}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="1-9 Billing Docs Outsorting (ERCHO)"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '1-2 Business Objects Billing Document Outsorting';&#xA;&#xA;SELECT DISTINCT CAST(ISNULL(NULLIF([p].[MANDT], ''), NULL) AS NVARCHAR(3))  AS [Client],&#xA;                CAST(ISNULL(NULLIF([p].[BELNR], ''), NULL) AS NVARCHAR(12))  AS [BELNR],&#xA;                [d].[TryDate]  AS [FREI_AM],&#xA;                CAST(ISNULL(NULLIF([p].[FREI_VON], ''), NULL) AS NVARCHAR(12)) AS [FREI_VON],&#xA;                CAST(ISNULL(NULLIF([p].[MANOUTSORT], ''), NULL) AS NVARCHAR(8))  AS [MANOUTSORT],&#xA;                CAST(ISNULL(NULLIF([p].[OUTCNSO], ''), NULL) AS NVARCHAR(4))  AS [OUTCNSO],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[OUTCOUNT], ''), NULL) AS NVARCHAR(2))  AS [OUTCOUNT],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[SIMULATION], ''), NULL) AS NVARCHAR(2))  AS [SIMULATION],&#xA;&#x9;&#x9;&#x9;&#x9;CAST(ISNULL(NULLIF([p].[VALIDATION], ''), NULL) AS NVARCHAR(10))  AS [VALIDATION]&#xA;INTO [M2C_PAFnowIM].[Object_BillingDocOutsorting]&#xA;FROM [ERCHO] AS [p]&#xA;&#x9;CROSS APPLY [dbo].TryConvertToDate(ISNULL(NULLIF([p].[FREI_AM], ''), NULL)) AS [d]&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{1CB624B1-2B46-4AD7-B03A-D131503B7944}"
          DTS:From="Package\Business Objects\1-1 Meter Reading Docs (EABL)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Business Objects\1-2 Meter Reading Reason (EABLG)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{6A4CA139-7A60-4DA3-81DA-B36888773138}"
          DTS:From="Package\Business Objects\1-2 Meter Reading Reason (EABLG)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Business Objects\1-3 Invoice Outsorting Docs (ERDO)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 11]"
          DTS:CreationName=""
          DTS:DTSID="{8F435F21-8E2B-428A-8354-056808CD5719}"
          DTS:From="Package\Business Objects\1-6 Dunning Histroy (FKKMAZE)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 11"
          DTS:To="Package\Business Objects\1-7 Cancellation Invoice (ERDK)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 12]"
          DTS:CreationName=""
          DTS:DTSID="{8282BCB4-3528-49FC-9B12-2D20A2CFFF29}"
          DTS:From="Package\Business Objects\1-11 Contract data (EVER)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 12"
          DTS:To="Package\Business Objects\1-12 Items in Contract Account Document (DFKKOP)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 13]"
          DTS:CreationName=""
          DTS:DTSID="{D1F51D4A-5BCF-4470-84CB-A2B57C0B5DAE}"
          DTS:From="Package\Business Objects\1-12 Items in Contract Account Document (DFKKOP)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 13"
          DTS:To="Package\Business Objects\1-13 Header Data in Open Item Accounting Document (DFKKKO)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 15]"
          DTS:CreationName=""
          DTS:DTSID="{A815E06E-1E14-45F1-9B36-336B9CAE2FA7}"
          DTS:From="Package\Business Objects\1-20 Partner (BUT000)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 15"
          DTS:To="Package\Business Objects\1-21 Tariftyp Kopfdaten (ETTA)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 16]"
          DTS:CreationName=""
          DTS:DTSID="{FA51E48D-5A69-4CE8-80CB-DCD59534A195}"
          DTS:From="Package\Business Objects\1-13 Header Data in Open Item Accounting Document (DFKKKO)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 16"
          DTS:To="Package\Business Objects\1-110 Sperren (DFKKLOCKS)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 17]"
          DTS:CreationName=""
          DTS:DTSID="{0FA17ECF-9F74-4467-B9CD-3F9BDB8E4A43}"
          DTS:From="Package\Business Objects\1-110 Sperren (DFKKLOCKS)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 17"
          DTS:To="Package\Business Objects\1-14 Technichal Data for Installed Register data (ETDZ)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 19]"
          DTS:CreationName=""
          DTS:DTSID="{D26DA53C-AC5D-4C67-A4DE-2EB4C08FA815}"
          DTS:From="Package\Business Objects\1-15 Billing data Installation Structure at Reg Level data  (EASTS)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 19"
          DTS:To="Package\Business Objects\1-16 Installation Time Slice (EANLH)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 2]"
          DTS:CreationName=""
          DTS:DTSID="{B0F707B9-B480-4EC5-B6C0-9F7DD14CDAE9}"
          DTS:From="Package\Business Objects\1-3 Invoice Outsorting Docs (ERDO)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 2"
          DTS:To="Package\Business Objects\1-4 Invoice Docs Header (ERDK)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 20]"
          DTS:CreationName=""
          DTS:DTSID="{D8150D3A-38B0-4F56-B1EA-C798F1100DEE}"
          DTS:From="Package\Business Objects\1-14 Technichal Data for Installed Register data (ETDZ)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 20"
          DTS:To="Package\Business Objects\1-15 Billing data Installation Structure at Reg Level data  (EASTS)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 21]"
          DTS:CreationName=""
          DTS:DTSID="{3CD24562-B0CB-4DFD-B89C-7FA28AC3966D}"
          DTS:From="Package\Business Objects\1-16 Installation Time Slice (EANLH)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 21"
          DTS:To="Package\Business Objects\1-17 Installation (EANL)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 22]"
          DTS:CreationName=""
          DTS:DTSID="{F6905556-969F-4875-9421-5307275D3526}"
          DTS:From="Package\Business Objects\1-18 Contract Account Head (FKKVK)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 22"
          DTS:To="Package\Business Objects\1-19 Contract Account Partner (FKKVKP)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 23]"
          DTS:CreationName=""
          DTS:DTSID="{F39AE0EA-5DCE-4D5D-8C33-A21FAAED0E37}"
          DTS:From="Package\Business Objects\1-17 Installation (EANL)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 23"
          DTS:To="Package\Business Objects\1-18 Contract Account Head (FKKVK)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 24]"
          DTS:CreationName=""
          DTS:DTSID="{D3F91389-B72F-4665-AF49-CE6AEBFA205F}"
          DTS:From="Package\Business Objects\1-19 Contract Account Partner (FKKVKP)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 24"
          DTS:To="Package\Business Objects\1-20 Partner (BUT000)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 3]"
          DTS:CreationName=""
          DTS:DTSID="{177F8956-20EF-4D3B-86CB-0A5BE8ED89C8}"
          DTS:From="Package\Business Objects\1-0 Drop Business Object Tables"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 3"
          DTS:To="Package\Business Objects\1-1 Meter Reading Docs (EABL)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 4]"
          DTS:CreationName=""
          DTS:DTSID="{C41C11E9-D94D-420F-95DF-5B679B3EC531}"
          DTS:From="Package\Business Objects\1-4 Invoice Docs Header (ERDK)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 4"
          DTS:To="Package\Business Objects\1-5 Invoice Docs Data (ERDB)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 5]"
          DTS:CreationName=""
          DTS:DTSID="{55EEE011-1174-40F0-9109-F152505CFDA3}"
          DTS:From="Package\Business Objects\1-9 Billing Docs Outsorting (ERCHO)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 5"
          DTS:To="Package\Business Objects\1-10 Invoicing-Reversal History (ERCHC)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 6]"
          DTS:CreationName=""
          DTS:DTSID="{F69447BE-C7A2-4720-BDF7-626CBEA4F72E}"
          DTS:From="Package\Business Objects\1-8 Billing Docs (ERCH)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 6"
          DTS:To="Package\Business Objects\1-9 Billing Docs Outsorting (ERCHO)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 7]"
          DTS:CreationName=""
          DTS:DTSID="{5FACB542-951F-4953-861A-C0BD3B01B097}"
          DTS:From="Package\Business Objects\1-5 Invoice Docs Data (ERDB)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 7"
          DTS:To="Package\Business Objects\1-6 Dunning Histroy (FKKMAZE)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 8]"
          DTS:CreationName=""
          DTS:DTSID="{1B272811-A826-449A-89BD-F24E65839C08}"
          DTS:From="Package\Business Objects\1-7 Cancellation Invoice (ERDK)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 8"
          DTS:To="Package\Business Objects\1-8 Billing Docs (ERCH)" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Business Objects.PrecedenceConstraints[Einschränkung 9]"
          DTS:CreationName=""
          DTS:DTSID="{8C33A5E6-D079-49BA-81A5-D124A3A885A2}"
          DTS:From="Package\Business Objects\1-10 Invoicing-Reversal History (ERCHC)"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 9"
          DTS:To="Package\Business Objects\1-11 Contract data (EVER)" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Changes"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{607cf3a5-c759-477c-8bd4-ef5af3074183}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Changes">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Changes\6-0 Pre Changes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{f7684d99-904d-4a38-93b4-f59703288851}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="6-0 Pre Changes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Pre Changes';&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Changes];&#xA;GO&#xA;&#xA;CREATE TABLE [M2C_PAFnow].[Changes]&#xA;(&#xA;    [CaseId]         [bigint]           NOT NULL,&#xA;&#x9;[ChangeNo]&#x9;&#x9; [bigint]&#x9;&#x9;NOT NULL,&#xA;    [ActivityName]   [nvarchar](64)  NULL,&#xA;&#x9;[ObjectId]&#x9;     [nvarchar](22) NOT NULL,&#xA;    [Resource]       [nvarchar](64)  NULL,&#xA;    [TimestampDate]  [date]          NOT NULL,&#xA;    [TimestampTime]  [time](0)       NOT NULL,&#xA;    [TableName]      [nvarchar](16)  NOT NULL,&#xA;    [FieldName]      [nvarchar](32)  NOT NULL,&#xA;    [ValueOld]       [nvarchar](128) NOT NULL,&#xA;    [ValueNew]       [nvarchar](128) NOT NULL,&#xA;    [UserType]       [NVARCHAR](1)   NULL,&#xA;    [Automatic]      TINYINT         NULL,&#xA;    [Cost]           DECIMAL(5, 2) NOT NULL DEFAULT 7.5&#xA;        CONSTRAINT [PK_Changes] PRIMARY KEY CLUSTERED ([CaseId], [ChangeNo],  [TimestampDate], [TimestampTime], [TableName],&#xA;                                                       [FieldName], [ValueOld], [ValueNew])&#xA;);&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Pre Changes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Changes\6-1 Change Meter Reading"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{934b1bf0-4517-4bd1-bf7a-a82afe890d6d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="6-1 Change Meter Reading"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="&#xA;/**********************************&#xA; * Copyright (C)                  *&#xA; * Process Analytics Factory GmbH *&#xA; * All Rights Reserved            *&#xA; **********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Changes';&#xA;&#xA;--Changed MR&#xA;BEGIN TRY&#xA;    PRINT 'Changed MR';&#xA;    BEGIN TRANSACTION;&#xA;    INSERT INTO [M2C_PAFnow].[Changes]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;[CNT_READ].[CHANGENR]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [ChangeNo],&#x9;&#xA;                    'Changed Meter Reading'                                            AS [ActivityName],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;[CNT_READ].[OBJECTID]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [ObjectID],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_READ].[UDATE]                                        AS [TimestampDate],&#xA;                    [CNT_READ].[UTIME]                                        AS [TimestampTime],&#xA;                    [CNT_READ].[TABNAME]                                      AS [TableName],&#xA;                    [CNT_READ].[FNAME]                                        AS [FieldName],&#xA;                    [CNT_READ].[VALUE_OLD]                                    AS [ValueOld],&#xA;                    [CNT_READ].[VALUE_NEW]                                    AS [ValueNew],&#xA;                    [USR02].[USTYP]                                         AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                AS [Automatic],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 3.5, 7.5)            AS [Cost]&#xA;    FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;                        ON CONCAT([CLT].[MRDocsClient], [CLT].[MRDocsABLBELNR]) =&#xA;                           [CNT_READ].[TABKEY] AND&#xA;                           [CNT_READ].[TABNAME] = 'EABL'&#xA;                            AND [CNT_READ].[CHNGIND] = 'U'&#xA;                            AND [CNT_READ].[FNAME] NOT IN ('AEDAT', 'KEY')&#xA;             LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA;    WHERE [CLT].[MRDocsABLBELNR] IS NOT NULL&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Changes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Changes\6-2 Change Contract"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{7a431c7c-b91b-478d-b883-786cbbce6317}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="6-2 Change Contract"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/**********************************&#xA; * Copyright (C)                  *&#xA; * Process Analytics Factory GmbH *&#xA; * All Rights Reserved            *&#xA; **********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Changes';&#xA;&#xA;--Changed Contract&#xA;BEGIN TRY&#xA;    PRINT 'Changed Contract';&#xA;    BEGIN TRANSACTION;&#xA;    INSERT INTO [M2C_PAFnow].[Changes]&#xA;    SELECT DISTINCT [Object_MeterReading2Billing].[CaseId],&#xA;     [CNT_CONTRACT].[CHANGENR]          AS [ChangeNo],  &#xA;                    'Changed Contract'                                            AS [ActivityName],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9; [CNT_CONTRACT].[OBJECTID]&#x9;&#x9;&#x9;AS [ObjectId],&#xA;                    [CNT_CONTRACT].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_CONTRACT].[UDATE]                                        AS [TimestampDate],&#xA;                    [CNT_CONTRACT].[UTIME]                                        AS [TimestampTime],&#xA;                    [CNT_CONTRACT].[TABNAME]                                      AS [TableName],&#xA;                    [CNT_CONTRACT].[FNAME]                                        AS [FieldName],&#xA;                    [CNT_CONTRACT].[VALUE_OLD]                                    AS [ValueOld],&#xA;                    [CNT_CONTRACT].[VALUE_NEW]                                    AS [ValueNew],&#xA;                    [USR02].[USTYP]                                         AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                AS [Automatic],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 3.5, 7.5)            AS [Cost]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Billing]&#xA;             INNER JOIN [M2C_PAFnowIM].[CNT_CONTRACT] AS [CNT_CONTRACT]&#xA;                        ON CONCAT([Object_MeterReading2Billing].[MRDocsClient], [Object_MeterReading2Billing].[VERTRAG]) =&#xA;                           [CNT_CONTRACT].[TABKEY] AND&#xA;                           [CNT_CONTRACT].[TABNAME] = 'EVER'&#xA;                            AND [CNT_CONTRACT].[CHNGIND] = 'U'&#xA;                            AND [CNT_CONTRACT].[FNAME] NOT IN ('AEDAT', 'KEY')&#xA;             LEFT JOIN [USR02]&#xA;                       ON [CNT_CONTRACT].[USERNAME] = [USR02].[BNAME]&#xA;    WHERE [Object_MeterReading2Billing].[VERTRAG] IS NOT NULL&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Changes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Changes.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{CFF0238F-F03A-411F-BB2C-64C77129F394}"
          DTS:From="Package\Changes\6-1 Change Meter Reading"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Changes\6-2 Change Contract" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Changes.PrecedenceConstraints[Einschränkung 6]"
          DTS:CreationName=""
          DTS:DTSID="{39ED185F-4B6B-44B0-A6A0-5EBFC87342F8}"
          DTS:From="Package\Changes\6-0 Pre Changes"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 6"
          DTS:To="Package\Changes\6-1 Change Meter Reading" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\CLT Aufbau"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{B002F7DE-61AA-4427-8853-71A0221113B3}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="CLT Aufbau">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\CLT Aufbau\2-0 Drop CLT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{62051e4a-2640-42e8-89dc-e7495c113afc}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="2-0 Drop CLT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;DROP TABLE IF EXISTS  [M2C_PAFnow].[CLT]&#xA;GO&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\CLT Aufbau\2-1 CLT"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{7AF22375-1EBC-4958-A5BD-DDAA08DFA96C}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="2-1 CLT"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;SELECT DISTINCT&#xA;&#x9;[MRDocs].[ABLBELNR] AS [MRDocsABLBELNR],&#xA;&#x9;[MRDocs].[Client] AS [MRDocsClient],&#xA;&#x9;[MRReason].[Client] AS [MRReasonClient],&#xA;&#x9;[MRReason].[ABLBELNR] AS [MRReasonABLBELNR]&#xA;INTO [M2C_PAFnow].[CLT]&#xA;FROM [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDocs]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ReadingReason] AS [MRReason]&#xA;&#x9;&#x9;ON [MRDocs].[Client] = [MRReason].[Client]&#xA;&#x9;&#x9;AND [MRDocs].[ABLBELNR] = [MRReason].[ABLBELNR]&#xA;--WHERE ([MRReason].[UNTERDR] IS NULL OR [MRReason].[UNTERDR] = '')&#xA;GO&#xA;&#xA; --Add CaseId and Unique fields&#xA;ALTER TABLE [M2C_PAFnow].[CLT]&#xA;&#x9;ADD&#xA;&#x9;&#x9;[CaseId] BIGINT IDENTITY (1, 1),&#xA;&#x9;CONSTRAINT [PK_CLT] PRIMARY KEY CLUSTERED ([CaseId]);&#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\CLT Aufbau.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{665FA0EB-8CC7-47CC-A310-0CA8864B6EBE}"
          DTS:From="Package\CLT Aufbau\2-0 Drop CLT"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\CLT Aufbau\2-1 CLT" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Connection Objects (Meter Reading)"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{cfe9d3c8-2d2d-4c43-a0ba-982563ecc532}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Connection Objects (Meter Reading)">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Connection Objects (Meter Reading)\3-0 Drop Connection Objects"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{8ab813e3-59e3-49d9-b42a-3266e113085e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3-0 Drop Connection Objects"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;DROP TABLE IF EXISTS  [M2C_PAFnowIM].[Object_MeterReading2Billing]&#xA;GO&#xA;&#xA;DROP TABLE IF EXISTS  [M2C_PAFnowIM].[Object_MeterReading2Invoicing]&#xA;GO&#xA;&#xA;DROP TABLE IF EXISTS  [M2C_PAFnowIM].[Object_MeterReading2Accounting]&#xA;GO&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Object_MeterReading2Installation]&#xA;GO&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Connection Objects (Meter Reading)\3-1 Ablesung -&gt; Abrechnung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{59d8b83c-49f8-418e-aa5e-e7856358d37c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3-1 Ablesung -&gt; Abrechnung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Meter2Billing';&#xA;&#xA;SELECT DISTINCT [CLT].[CaseId], &#xA;&#x9;&#x9;&#x9;&#x9;[CLT].[MRDocsABLBELNR], &#xA;&#x9;&#x9;&#x9;&#x9;[CLT].[MRDocsClient],&#xA;&#x9;&#x9;&#x9;&#x9;[ContractData].[Vertrag] AS [VERTRAG], &#xA;&#x9;&#x9;&#x9;&#x9;[BillingDoc].[BELNR] AS [BELNR]&#xA;INTO [M2C_PAFnowIM].[Object_MeterReading2Billing]&#xA;FROM [M2C_PAFnow].[CLT] AS [CLT] &#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_MeterReading2Installation] AS [M2I]&#xA;&#x9;&#x9;ON [CLT].[CaseId] = [M2I].[CaseId]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_ReadingReason] AS [ReadingReason]&#xA;&#x9;   ON [CLT].[MRDocsClient] = [ReadingReason].[Client]&#xA;&#x9;   AND [CLT].[MRDocsABLBELNR] = [ReadingReason].[ABLBELNR]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [ReadingDoc]&#xA;&#x9;   ON [ReadingReason].[ABLBELNR] = [ReadingDoc].[ABLBELNR]&#xA;&#x9;   AND [ReadingReason].[Client] = [ReadingDoc].[Client]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_ContractData] AS [ContractData]&#xA;&#x9;   ON [ContractData].[ANLAGE] = [M2I].[ANLAGE]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;   ON [BillingDoc].[VERTRAG] = [ContractData].[VERTRAG] &#xA;&#x9;   AND [BillingDoc].[ABRDATS] = [ReadingReason].[ABRDATS]&#xA;&#x9;  AND [BillingDoc].[ABLEINH] = [ReadingReason].[ABLEINH]&#xA;&#x9;   AND [BillingDoc].[Client] = [ContractData].[Client] &#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Installation Attributes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Connection Objects (Meter Reading)\3-2 Ablesung -&gt; Faktura"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0dedc341-3a7a-4739-9c6f-48d0175f82fa}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3-2 Ablesung -&gt; Faktura"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Business ';&#xA;&#xA;-- Vom Ablesebeleg zum Fakturabeleg&#xA;&#xA;SELECT DISTINCT &#xA;&#x9;&#x9;&#x9;&#x9;[MeterReading2Billing].[CaseId], &#xA;&#x9;&#x9;&#x9;&#x9;[MeterReading2Billing].[MRDocsABLBELNR],&#xA;&#x9;&#x9;&#x9;&#x9;[MeterReading2Billing].[MRDocsClient], &#xA;&#x9;&#x9;&#x9;&#x9;[BillingDoc].[BELNR], &#xA;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[OPBEL]&#xA;INTO [M2C_PAFnowIM].[Object_MeterReading2Invoicing]&#xA; FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] =  [MeterReading2Billing].[BELNR]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_IRHistory] AS [IRHistory]&#xA;&#x9;&#x9;&#x9;ON [IRHistory].[Client] = [BillingDoc].[Client]&#xA;&#x9;&#x9;&#x9;AND [IRHistory].[BELNR] = [BillingDoc].[BELNR]&#xA;&#x9;&#x9;LEFT JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[Client] = [IRHistory].[Client]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[OPBEL] = [IRHistory].[OPBEL]&#xA;&#xA;EXEC PAFnowStatistic 'Business ';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Anlage"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{74096e85-102f-4f47-bed0-de8e0441e80b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3-3 Ablesung -&gt; Anlage"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Installation Attributes ';&#xA;&#xA;&#xA;SELECT Distinct&#xA;    CAST([CLT].[CaseId] AS BIGINT)                                  AS [CaseId],&#xA;&#x9;[CLT].[MRDocsABLBELNR],&#xA;&#x9;[CLT].[MRDocsClient],&#xA;&#x9;[InstallationTimeSlices].[ANLAGE]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Anlage],&#xA;&#x9;[InstallationTimeSlices].[TARIFTYP] &#xA;&#x9;--[InstallationTimeSlices].[AKLASSE]&#xA;INTO [M2C_PAFnowIM].[Object_MeterReading2Installation]&#xA;FROM [M2C_PAFnow].[CLT] AS [CLT] &#xA;&#x9; INNER JOIN [M2C_PAFnowIM].[Object_ReadingReason] AS [ReadingReason]&#xA;&#x9;  ON [CLT].[MRDocsClient] = [ReadingReason].[Client]&#xA;&#x9;  AND [CLT].[MRDocsABLBELNR] = [ReadingReason].[ABLBELNR]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [ReadingDoc]&#xA;&#x9;   ON [ReadingReason].[ABLBELNR] = [ReadingDoc].[ABLBELNR]&#xA;&#x9;   AND [ReadingReason].[Client] = [ReadingDoc].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_TechnicalData] AS [TechnicalData]&#xA;&#x9;   ON [TechnicalData].[EQUNR] = [ReadingDoc].[EQUNR]&#xA;&#x9;   AND [TechnicalData].[ZWNUMMER] = [ReadingDoc].[ZWNUMMER]&#xA;&#x9;   AND [TechnicalData].[Client] = [ReadingDoc].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_TimeSliceData] AS [TimeSliceData]&#xA;&#x9;   ON [TimeSliceData].[LOGIKZW] = [TechnicalData].[LOGIKZW]&#xA;&#x9;   AND [TimeSliceData].[Client] = [TechnicalData].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_InstallationTimeSlices] AS [InstallationTimeSlices]&#xA;&#x9;   ON [InstallationTimeSlices].ANLAGE = [TimeSliceData].ANLAGE&#xA;&#x9;   AND [InstallationTimeSlices].[Client] = [TimeSliceData].[Client]&#xA; --WHERE ([ReadingReason].[UNTERDR] = '' OR [ReadingReason].[UNTERDR] IS NULL)&#xA;&#x9;WHERE ([ReadingReason].[ADATSOLL] &lt;&gt; '' OR [ReadingReason].[ADATSOLL] IS NOT NULL)&#xA;&#x9;--AND ([TechnicalData].[AB] &lt;= [ReadingReason].[ADATSOLL] AND  [ReadingReason].[ADATSOLL] &lt;= [TechnicalData].[BIS])&#xA;&#x9;--AND ([TimeSliceData].[AB] &lt;= [ReadingReason].[ADATSOLL] AND  [ReadingReason].[ADATSOLL] &lt;= [TimeSliceData].[BIS])&#xA;&#x9;AND ([InstallationTimeSlices].[AB] &lt;= [ReadingReason].[ADATSOLL]  AND  [ReadingReason].[ADATSOLL] &lt;= [InstallationTimeSlices].[BIS])&#xA;&#x9;AND ([TimeSliceData].[ZWNABR] = '' OR [TimeSliceData].[ZWNABR] IS NULL)&#xA;&#xA;&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Installation Attributes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Zahlung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{5a2a5625-7964-42e9-83a3-916e94f6f073}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="3-3 Ablesung -&gt; Zahlung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Connection Objects - MeterReading2Accounting';&#xA;&#xA;-- Vom Ablesebeleg zum Kontokorrentbeleg&#xA;&#xA;SELECT DISTINCT &#xA;[MeterReading2Invoicing].[CaseId], &#xA;[MeterReading2Invoicing].[MRDocsABLBELNR] AS [ABLBELNR], &#xA;[MeterReading2Invoicing].[MRDocsClient], &#xA;[MeterReading2Invoicing].[BELNR] AS [BillDocumentNumber], &#xA;[MeterReading2Invoicing].[OPBEL] AS [InvoiceDocumentNumber],&#xA;[AccDocItems].[OPBEL] AS [AccountDocumentNumber]&#xA;INTO [M2C_PAFnowIM].[Object_MeterReading2Accounting]&#xA; FROM  [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocData] AS [PrintDocData]&#xA;&#x9;&#x9;&#x9;&#x9;ON [PrintDocData].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;&#x9;&#x9;ON [PrintDocData].[INVOPBEL] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;EXEC PAFnowStatistic 'Connection Objects - MeterReading2Accounting';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{6A68AE70-6F65-4BDF-AEB0-DA8EF089BE81}"
          DTS:From="Package\Connection Objects (Meter Reading)\3-1 Ablesung -&gt; Abrechnung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Connection Objects (Meter Reading)\3-2 Ablesung -&gt; Faktura" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{358B4DD2-AECF-41CE-A36A-DEF7D18005A5}"
          DTS:From="Package\Connection Objects (Meter Reading)\3-2 Ablesung -&gt; Faktura"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Zahlung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 3]"
          DTS:CreationName=""
          DTS:DTSID="{C4620AEF-B265-4BED-BC01-F5D34C82C81F}"
          DTS:From="Package\Connection Objects (Meter Reading)\3-0 Drop Connection Objects"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 3"
          DTS:To="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Anlage" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 4]"
          DTS:CreationName=""
          DTS:DTSID="{911C451D-F020-4ED4-B358-8EDDCEFE90C7}"
          DTS:From="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Anlage"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 4"
          DTS:To="Package\Connection Objects (Meter Reading)\3-1 Ablesung -&gt; Abrechnung" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Eventlog"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{f927793d-f61c-43b2-96dd-5e86d57c81bc}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Eventlog">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-0 Pre Eventlog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{6f7bc8d7-8aa1-4b4a-af81-55c057911651}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-0 Pre Eventlog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;EXEC PAFnowStatistic 'Pre Eventlog';&#xA;&#xA;--Creates a temp Eventlog Table whit Primary keys on CaseId, ActivityName, Timestamp so there are no duplicates&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[EventLog];&#xA;GO&#xA;&#xA;CREATE TABLE [M2C_PAFnowIM].[EventLog]&#xA;(&#xA;    [CaseId]       [bigint]           NOT NULL,&#xA;    [ActivityName] [nvarchar](128) NOT NULL,&#xA;    [Resource]     [nvarchar](64)  NULL,&#xA;    [Timestamp]    [datetime]      NOT NULL,&#xA;    [SortKey]      [int]           NOT NULL,&#xA;    [UserType]     [NVARCHAR](1)   NULL,&#xA;    [Automatic]    TINYINT         NULL&#xA;   CONSTRAINT [PK_EventLogTemp] PRIMARY KEY ([CaseId], [ActivityName], [Timestamp])&#xA;);&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate 'Pre Eventlog';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-1 Event - Lege Ablesebeleg an"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{ce99a0d5-acf4-41e7-8eb2-7ccc35eda2ce}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-1 Event - Lege Ablesebeleg an"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;EXEC PAFnowStatistic 'Event Lege Ablesebeleg an';&#xA;&#xA;--Event &quot;Lege Ablesebeleg an&quot;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Lege Ablesebeleg an'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Lege Ablesebeleg an'                     AS [ActivityName],&#xA;                    [MRDoc].[ERNAM]                                      AS [Resource],&#xA;                    [MRDoc].[ERDAT] + '00:00:00.00' AS [Timestamp],&#xA;                    10                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;             LEFT JOIN [USR02]&#xA;                       ON [MRDoc].[ERNAM] = [USR02].[BNAME]&#xA;&#x9;WHERE ([MRDoc].[ERDAT] IS NOT NULL OR [MRDoc].[ERDAT] &lt;&gt; '')&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;EXEC PAFnowStatistic 'Event Lege Ablesebeleg an';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-10 Event - Lege Abrechnungsbeleg an"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{89f07fe8-10be-4651-a020-3438da32046f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-10 Event - Lege Abrechnungsbeleg an"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '2-1 Event Lege Abrechnungsbeleg an';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Lege Abrechnungsbeleg an'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Lege Abrechnungsbeleg an'                     AS [ActivityName],&#xA;                    [BillingDoc].[ERNAM]                                     AS [Resource],&#xA;                    [BillingDoc].[ERDATETIME]  AS [Timestamp],&#xA;                   100                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] =  [MeterReading2Billing].[BELNR]&#xA;&#x9;&#x9;&#x9;AND [BillingDoc].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;   LEFT JOIN [USR02]&#xA;           ON [BillingDoc].[ERNAM] = [USR02].[BNAME]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-11 Event - Storniere Abrechnungsbeleg"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{4a41814e-b74d-4d1a-a4c1-109eff911d0a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-11 Event - Storniere Abrechnungsbeleg"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA;&#xA; ********************************/&#xA;EXEC PAFnowStatistic '2-1 Event storniere Abrechungsbeleg';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Storniere Abrechnungsbeleg'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Storniere Abrechnungsbeleg'                     AS [ActivityName],&#xA;                    Null                                     AS [Resource],&#xA;                    [BillingDoc].[STORNODAT] + [BillingDoc].[EROETIM]  AS [Timestamp],&#xA;                    110                                                AS [SortKey],&#xA;                    Null                                  AS [UserType],&#xA;                    Null          AS [Automatic]&#xA;    FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] =  [MeterReading2Billing].[BELNR]&#xA;&#x9;&#x9;&#x9;AND [BillingDoc].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;&#x9;LEFT JOIN [USR02]&#xA;           ON [BillingDoc].[ERNAM] = [USR02].[BNAME]&#xA; WHERE [BillingDoc].[STORNODAT] IS NOT NULL OR [BillingDoc].[STORNODAT] &lt;&gt; ''&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-12 Event - Ändere abgerechneten Zählerstand"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{d9dfa6c4-2c4b-40b0-bbff-4d61b6373364}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-12 Event - Ändere abgerechneten Zählerstand"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event Ändere abgerechneten Zählerstand';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Ändere abgerechnete Zählerstand'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Ändere abgerechneten Zählerstand'                    AS [ActivityName],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_READ].[UDATETIME] AS [Timestamp],&#xA;                    130                                                AS [SortKey],&#xA;     [USR02].[USTYP]                                   AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;   INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;    ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;            LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA; WHERE ([CNT_READ].[FNAME] = 'V_ZWSTNDAB' OR [CNT_READ].[FNAME] = 'N_ZWSTNDAB')&#xA; --AND [CNT_READ].[VALUE_NEW] &lt;&gt; '0'&#xA; AND ([CNT_READ].[VALUE_OLD] IS NOT NULL  OR [CNT_READ].[VALUE_OLD] &lt;&gt; '0')&#xA; AND [CNT_READ].[VALUE_NEW] &lt;&gt; [CNT_READ].[VALUE_OLD]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-13 Event - Gebe Abrechnungsbeleg frei"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0115536c-eb56-49f8-ba22-e74559398683}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-13 Event - Gebe Abrechnungsbeleg frei"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event gebe Abrechnung frei';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Gebe Abrechnung frei'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Gebe Abrechnungsbeleg frei'                     AS [ActivityName],&#xA;                    [BillingDocOutsorting].[FREI_VON]                                     AS [Resource],&#xA;                    [BillingDocOutsorting].[FREI_AM] + '23:59:59' AS [Timestamp],&#xA;                   150                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] =  [MeterReading2Billing].[BELNR]&#xA;&#x9;&#x9;&#x9;AND [BillingDoc].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_BillingDocOutsorting] AS [BillingDocOutsorting]&#xA;   ON [BillingDoc].[Client] = [BillingDocOutsorting].[Client]&#xA;   AND [BillingDoc].[BELNR] = [BillingDocOutsorting].[BELNR] &#xA;   LEFT JOIN [USR02]&#xA;           ON [BillingDocOutsorting].[FREI_VON] = [USR02].[BNAME]&#xA;&#x9;WHERE [BillingDocOutsorting].[FREI_AM] &lt;&gt; '1900-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-14 Event - Abrechnungsaussteuerung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Abrechnungsaussteuerung"
          DTS:DTSID="{9df55b0e-8f71-4a9f-a751-290c73d2dc0b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-14 Event - Abrechnungsaussteuerung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '2-1 Event Abrechnungaussteuerung';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Abrechnungaussteuerung'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Abrechnungaussteuerung'                     AS [ActivityName],&#xA;                    [BillingDoc].[ERNAM]                                     AS [Resource],&#xA;                    [BillingDoc].[ERDATETIME]  AS [Timestamp],&#xA;                   140                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9;&#x9;&#x9;ON [BillingDoc].[BELNR] =  [MeterReading2Billing].[BELNR]&#xA;&#x9;&#x9;&#x9;&#x9;AND [BillingDoc].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;&#x9;  INNER JOIN [M2C_PAFnowIM].[Object_BillingDocOutsorting] AS [BillingDocOutsorting]&#xA;&#x9;&#x9;&#x9;   ON [BillingDoc].[Client] = [BillingDocOutsorting].[Client]&#xA;&#x9;&#x9;&#x9;   AND [BillingDoc].[BELNR] = [BillingDocOutsorting].[BELNR] &#xA;   LEFT JOIN [USR02]&#xA;           ON [BillingDoc].[ERNAM] = [USR02].[BNAME]&#xA;&#x9;WHERE [BillingDocOutsorting].[FREI_AM] &lt;&gt; '1900-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-14 Event - Abrechnungssperre"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="4-14 Event - Abrechnungssperre"
          DTS:DTSID="{6196f5c4-b8e7-45b6-897a-cce04e26dc46}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-14 Event - Abrechnungssperre"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Setze Abrechnungssperre';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Setze Abrechnungssperre' &#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Setze Abrechnungssperre'                     AS [ActivityName],&#xA;                    [CNT_CONTRACT].[USERNAME]                                  AS [Resource],&#xA;                    [CNT_CONTRACT].[UDATETIME]  AS [Timestamp],&#xA;                   155                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM  [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;    INNER JOIN [M2C_PAFnowIM].[CNT_CONTRACT] AS [CNT_CONTRACT]&#xA;&#x9;&#x9;ON [CNT_CONTRACT].[MANDANT] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;&#x9;AND [CNT_CONTRACT].[OBJECTID] = [MeterReading2Billing].[VERTRAG]&#xA;   LEFT JOIN [USR02]&#xA;           ON [CNT_CONTRACT].[USERNAME] = [USR02].[BNAME]&#xA;&#x9;WHERE [CNT_CONTRACT].[FNAME] = 'ABRSPERR'&#xA;&#x9;AND [CNT_CONTRACT].[VALUE_OLD] = ''&#xA;&#x9;AND [CNT_CONTRACT].[VALUE_NEW] &lt;&gt; ''&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-15 Event - Lege Fakturableg an"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{3b6a07b4-0cd1-4310-958b-eaf1dc1d4a72}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-15 Event - Lege Fakturableg an"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Lege Fakturabeleg an';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Lege Fakturableg an'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Lege Fakturabeleg an'                     AS [ActivityName],&#xA;                    [FaktDocHeader].[ERNAM]                                     AS [Resource],&#xA;                    --COALESCE([FaktDocHeader].[ERDAT], '00:00:00') AS [Timestamp],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;[FaktDocHeader].[ERDATTIME] AS [Timestamp],&#xA;                    160                                                AS [SortKey],&#xA;                     [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;       FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA;&#x9;&#x9;LEFT JOIN [USR02]&#xA;           ON [FaktDocHeader].[ERNAM] = [USR02].[BNAME]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-16 Event - Forderungsbuchung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{d8fe3eb1-a7d3-4d2b-8f60-4a524d96599a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-16 Event - Forderungsbuchung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Forderungsbuchung';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Forderungsbuchung'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Accounting].[CaseId],&#xA;                    'Forderungsbuchung'                     AS [ActivityName],&#xA;                    [ContractAccDocHead].[ERNAM]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Resource],&#xA;                         [ContractAccDocHead].[CPUDTTM]&#x9;&#x9;&#x9;AS [Timestamp],&#xA;                    200&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [SortKey],&#xA;                                         [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [MeterReading2Accounting].[MRDocsClient] = [AccDocItems].[Client]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentHead] AS [ContractAccDocHead]&#xA;&#x9;&#x9;&#x9;ON [ContractAccDocHead].[Client] = [AccDocItems].[Client]&#xA;&#x9;&#x9;&#x9;AND [ContractAccDocHead].[OPBEL] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;LEFT JOIN [USR02]&#xA;           ON [ContractAccDocHead].[ERNAM] = [USR02].[BNAME]&#xA;&#x9;ORDER BY [MeterReading2Accounting].CaseId&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-17 Event - Gebe Fakturabeleg frei"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{ac01cfcf-93c0-426f-b06f-9817bb3b8b1f}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-17 Event - Gebe Fakturabeleg frei"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Gebe Fakturabeleg frei';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Gebe Fakturabeleg frei'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Gebe Fakturabeleg frei'                     AS [ActivityName],&#xA;                    [FaktOutDoc].[FREI_VON]                                     AS [Resource],&#xA;                   [FaktOutDoc].[FREI_AM] + '23:59:59' AS [Timestamp],&#xA;                    220                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;     FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_FaktOutDoc] AS [FaktOutDoc]&#xA;&#x9;   ON [FaktOutDoc].[Client] = [FaktDocHeader].[Client]&#xA;&#x9;   AND [FaktOutDoc].[OPBEL] = [FaktDocHeader].[OPBEL]&#xA;&#x9;LEFT JOIN [USR02]&#xA;           ON [FaktOutDoc].[FREI_VON] = [USR02].[BNAME]&#xA;WHERE [FaktOutDoc].[FREI_AM] &lt;&gt; '1900-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-18 Event - Storniere Fakturabeleg"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{232c3312-f896-4b31-8a7b-dd78d0e2455a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-18 Event - Storniere Fakturabeleg"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event storniere Fakturablelg';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Storniere Fakturabeleg'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Storniere Fakturabeleg'                     AS [ActivityName],&#xA;                    [StornoFaktDoc].[ERNAM]                                     AS [Resource],&#xA;                   [StornoFaktDoc].[ERDATTIME] AS [Timestamp],&#xA;                    200                                                AS [SortKey],&#xA;                     [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA; INNER JOIN [M2C_PAFnowIM].[Object_StornoFaktDocHeader] AS [StornoFaktDoc]&#xA;   ON [StornoFaktDoc].[Client] = [FaktDocHeader].[Client]&#xA;   AND [StornoFaktDoc].[StornoID] = [FaktDocHeader].[INTOPBEL]&#xA;&#x9;LEFT JOIN [USR02]&#xA;&#x9;&#x9;ON [StornoFaktDoc].[ERNAM] = [USR02].[BNAME]&#xA;&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-19 Event - Drucke Fakturabeleg"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{9d829f3c-bda9-4b5d-a0cc-fcf0cdd383e0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-19 Event - Drucke Fakturabeleg"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Drucke Fakturabeleg';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Drucke Fakturableg'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Drucke Fakturabeleg'                     AS [ActivityName],&#xA;                    Null                                     AS [Resource],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ([FaktDocHeader].[EDISENDDATE] IS NOT NULL OR [FaktDocHeader].[EDISENDDATE] &lt;&gt; '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN [FaktDocHeader].[EDISENDDATE] + '23:00:00' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ([FaktDocHeader].[DRUCKDAT] IS NOT NULL OR [FaktDocHeader].[DRUCKDAT] &lt;&gt; '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN [FaktDocHeader].[DRUCKDAT] + '23:00:00' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE [FaktDocHeader].[ERDATTIME]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS [Timestamp],&#xA;                    230                                                AS [SortKey],&#xA;                    Null                                   AS [UserType],&#xA;                   Null          AS [Automatic]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-2 Event - Geplantes Ablesedatum"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0463aa83-79eb-4ca1-9864-49df094cc671}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-2 Event - Geplantes Ablesedatum"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::EventGeplantesAblesedatum_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;EXEC PAFnowStatistic 'Geplantes Ablesedatum';&#xA;&#xA;--Event &quot;Geplantes Ablesedatum&quot;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Geplantes Ablesedatum'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Geplantes Ablesedatum'                     AS [ActivityName],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Null                                      AS [Resource],&#xA;                    [MRDoc].[ADATSOLL] + '23:59:59.00' AS [Timestamp],&#xA;                    20                                                AS [SortKey],&#xA;                    NULL                                           AS [UserType],&#xA;                    NULL                 AS [Automatic]&#xA;    FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;&#x9;WHERE ([MRDoc].[ADATSOLL] IS NOT NULL OR [MRDoc].[ADATSOLL] &lt;&gt; '')&#xA;&#x9;AND [MRDoc].[ADATSOLL] &lt;= '2050-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-20 Event - Storno Druckbeleg"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{e5157b85-12a0-4248-9f04-d2c3aec70339}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-20 Event - Storno Druckbeleg"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::EventStornoDruckbeleg_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Drucke Stornobeleg';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Drucke Stornobeleg'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Drucke Stornobeleg'                     AS [ActivityName],&#xA;                    Null                                     AS [Resource],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ([StornoFaktDoc].[EDISENDDATE] IS NOT NULL OR [FaktDocHeader].[EDISENDDATE] &lt;&gt; '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN [StornoFaktDoc].[EDISENDDATE] + [StornoFaktDoc].[Creation_Time] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN ([StornoFaktDoc].[DRUCKDAT] IS NOT NULL OR [FaktDocHeader].[DRUCKDAT] &lt;&gt; '')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN [StornoFaktDoc].[DRUCKDAT] + [StornoFaktDoc].[Creation_Time] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE [StornoFaktDoc].[ERDATTIME]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END AS [Timestamp],&#xA;                    240                                                AS [SortKey],&#xA;                    Null                                   AS [UserType],&#xA;                   Null          AS [Automatic]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA; INNER JOIN [M2C_PAFnowIM].[Object_StornoFaktDocHeader] AS [StornoFaktDoc]&#xA;   ON [StornoFaktDoc].[Client] = [FaktDocHeader].[Client]&#xA;   AND [StornoFaktDoc].[StornoID] = [FaktDocHeader].[INTOPBEL]&#xA;&#x9;LEFT JOIN [USR02]&#xA;&#x9;&#x9;ON [StornoFaktDoc].[ERNAM] = [USR02].[BNAME]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-22 Event - Fakturaaussteuerung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{309d593c-cabf-4651-a232-9adaf368328e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-22 Event - Fakturaaussteuerung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Fakturaaussteuerung';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Fakturaaussteuerung'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Fakturaaussteuerung'                     AS [ActivityName],&#xA;                    [FaktDocHeader].[ERNAM]                                     AS [Resource],&#xA;                    [FaktDocHeader].[ERDATTIME] AS [Timestamp],&#xA;                    210                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;     FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient]&#xA;  INNER JOIN [M2C_PAFnowIM].[Object_FaktOutDoc] AS [FaktOutDoc]&#xA;&#x9;   ON [FaktOutDoc].[Client] = [FaktDocHeader].[Client]&#xA;&#x9;   AND [FaktOutDoc].[OPBEL] = [FaktDocHeader].[OPBEL]&#xA;&#x9;LEFT JOIN [USR02]&#xA;           ON [FaktOutDoc].[FREI_VON] = [USR02].[BNAME]&#xA;WHERE [FaktOutDoc].[FREI_AM] &lt;&gt; '1900-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-22 Event - Fakturasperre"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{b03fb57c-ea1c-467e-945b-1e0afc0a71e1}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-22 Event - Fakturasperre"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Setze Fakturasperre';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Setze Fakturasperre' &#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Setze Fakturasperre'                     AS [ActivityName],&#xA;                    [Locks].[UNAME]                                   AS [Resource],&#xA;                    [Locks].[ADATUM] + [Locks].[AZEIT] AS [Timestamp],&#xA;                    245                                               AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;     FROM [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9; INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9; ON [MeterReading2Billing].[MRDocsClient] = [BillingDoc].[Client]&#xA;&#x9;&#x9; AND [MeterReading2Billing].[BELNR] = [BillingDoc].[BELNR]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_IRHistory] AS [IRHistory]&#xA;&#x9;&#x9;&#x9;ON [IRHistory].[Client] = [BillingDoc].[Client]&#xA;&#x9;&#x9;&#x9;AND [IRHistory].[BELNR] = [BillingDoc].[BELNR]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[Client] = [IRHistory].[Client]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[OPBEL] = [IRHistory].[OPBEL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractData] AS [ContractData]&#xA;&#x9;&#x9;ON [ContractData].[VERTRAG] = [MeterReading2Billing].[VERTRAG]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccountHeader] AS [ContractAccountHeader]&#xA;&#x9;&#x9;ON [ContractData].[VKONTO] = [ContractAccountHeader].[VKONT]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [ContractAccountHeader].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractLocks] AS [Locks]&#xA;&#x9;&#x9;ON [Locks].[Client] = [ContractAccountHeader].[Client]&#xA;&#x9;&#x9;AND [Locks].[VKONT] = [ContractAccountHeader].[VKONT]&#xA; LEFT JOIN [USR02]&#xA;           ON [Locks].[UNAME] = [USR02].[BNAME]&#xA;&#x9;WHERE PROID = '05'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-23 Event - Fälligkeitsdatum Zahlung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Fälligkeitsdatum Zahlung"
          DTS:DTSID="{ead224f7-bc96-43cb-bb47-8ad31f632ba6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-23 Event - Fälligkeitsdatum Zahlung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::EventFaelligkeitsdatumZahlung_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Erreiche Zahlfrist';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Erreiche Zahlfrist'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Invoicing].[CaseId],&#xA;                    'Erreiche Zahlfrist'                     AS [ActivityName],&#xA;                    Null                                     AS [Resource],&#xA;                    [FaktDocHeader].[FAEDN] + '23:59:59' AS [Timestamp],&#xA;                    250                                                AS [SortKey],&#xA;                    Null                                   AS [UserType],&#xA;                   Null          AS [Automatic]&#xA;    FROM [M2C_PAFnowIM].[Object_MeterReading2Invoicing] AS [MeterReading2Invoicing]&#xA;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[OPBEL] = [MeterReading2Invoicing].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[Client] = [MeterReading2Invoicing].[MRDocsClient] &#xA;&#x9;WHERE ([FaktDocHeader].[FAEDN] IS NOT NULL OR [FaktDocHeader].[FAEDN] &lt;&gt; '')&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-24 Event - Ausgleich"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{f4d97c52-93ff-4cba-a414-b1ab0348925c}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-24 Event - Ausgleich"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA; EXEC PAFnowStatistic 'Event Ausgleich';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Ausgleich durch ...'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Accounting].[CaseId],&#xA;                    'Ausgleich durch ' +&#x9;[AccDocItems].[AUGRD_T]&#x9;&#x9;&#x9;&#x9;&#x9;AS [ActivityName],&#xA;                    [ContractAccDocHead].[ERNAM]&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [Resource],&#xA;                    [ContractAccDocHead].[CPUDTTM]&#x9;&#x9;&#x9;&#x9;AS [Timestamp],&#xA;                    270&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;AS [SortKey],&#xA;                                         [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;     FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [MeterReading2Accounting].[MRDocsClient] = [AccDocItems].[Client]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentHead] AS [ContractAccDocHead]&#xA;&#x9;&#x9;&#x9;ON [ContractAccDocHead].[Client] = [AccDocItems].[Client]&#xA;&#x9;&#x9;&#x9;AND [ContractAccDocHead].[OPBEL] = [AccDocItems].[AUGBL]&#xA;&#x9;&#x9;LEFT JOIN [USR02]&#xA;           ON [ContractAccDocHead].[ERNAM] = [USR02].[BNAME]&#xA;&#x9; WHERE [AccDocItems].[AUGRD_T] IS NOT NULL &#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-25 Event - Erreiche Mahnstufe"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{cd74be51-5c9c-496e-a2df-7cc787b6d535}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-25 Event - Erreiche Mahnstufe"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Erreiche Mahnstufe';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Erreiche Mahnstufe'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Accounting].[CaseId],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [DunningHistory].[MAHNS] = '01'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Erreiche erste Mahnstufe'  &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [DunningHistory].[MAHNS] = '02'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Erreiche zweite Mahnstufe' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [DunningHistory].[MAHNS] = '03'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Erreiche dritte Mahnstufe'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [DunningHistory].[MAHNS] = '04'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Erreiche vierte Mahnstufe'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END  AS [ActivityName],&#xA;                    NULL                                     AS [Resource],&#xA;                    [DunningHistory].[MDRKD] + '23:59:59' AS [Timestamp],&#xA;                    290                                                AS [SortKey],&#xA;                     NULL                                           AS [UserType],&#xA;                    NULL                  AS [Automatic]&#xA;&#x9;&#x9;FROM [M2C_PAFnowIM].[Object_MeterReading2Accounting] AS [MeterReading2Accounting]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccDocumentItems] AS [AccDocItems]&#xA;&#x9;&#x9;&#x9;ON [MeterReading2Accounting].[AccountDocumentNumber] = [AccDocItems].[OPBEL]&#xA;&#x9;&#x9;&#x9;AND [MeterReading2Accounting].[MRDocsClient] = [AccDocItems].[Client]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_DunningHistory] AS [DunningHistory]&#xA;&#x9;&#x9;&#x9;ON [AccDocItems].[Client] = [DunningHistory].[Client]&#xA;&#x9;&#x9;&#x9;AND [AccDocItems].[OPBEL] = [DunningHistory].[OPBEL]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-26 Post Eventlog"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Adjust the sorting keys"
          DTS:DTSID="{11d617ef-cc1b-4282-9278-af9e5fae8fbc}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-26 Post Eventlog"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;-- Removal of blocking activites if they are performed at the beginning or end of a process&#xA;&#xA;WITH &#xA;CTE AS (&#xA;&#x9;&#x9;SELECT&#x9;[e].*, &#xA;&#x9;&#x9;&#x9;&#x9;CASE &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN [e].[ActivityName] LIKE ('%sperre') &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN 'Sperre' &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE  [e].[ActivityName] &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;END AS [ActivityNameTemp],&#xA;&#x9;&#x9;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY [e].[CaseId] ORDER BY [e].[CaseId], [e].[Timestamp], [e].[SortKey], [e].[ActivityName]) AS [EventNumber]&#xA;&#x9;&#x9;FROM [M2C_PAFnowIM].[EventLog] [e] &#xA;),&#xA;CTE2 AS (&#xA;&#x9;&#x9;SELECT [CaseId], MAX([EventNumber]) AS [MaxEventNumber]&#xA;        FROM CTE&#xA;&#x9;&#x9;GROUP BY [CaseId]&#xA;),  &#xA;CTE3 AS (&#x9;&#xA;&#x9;&#x9;SELECT&#x9;*, &#xA;&#x9;&#x9;&#x9;&#x9;[Temp].[EventNumber] - [Temp].[seqnum] AS [Cons]&#xA;&#x9;&#x9;FROM (&#x9;SELECT *,&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ROW_NUMBER() OVER (PARTITION BY CTE.[ActivityNameTemp], CTE.[CaseId] ORDER BY CTE.[EventNumber]) AS [seqnum]&#xA;&#x9;&#x9;&#x9;&#x9;FROM CTE&#xA;     ) [Temp]&#xA;),&#xA;CTE4 AS (&#xA;&#x9;&#x9;SELECT CTE3.[CaseId], CTE3.[ActivityNameTemp], CTE3.[Cons], MAX(CTE3.[EventNumber]) as [MaxNum]&#xA;&#x9;&#x9;FROM CTE3&#xA;&#x9;&#x9;GROUP BY CTE3.[CaseId], CTE3.[ActivityNameTemp], CTE3.[Cons]&#xA;  ) ,&#xA; CTE5 AS (&#xA;&#x9;&#x9;SELECT CTE3.*, CTE4.[MaxNum]&#xA;&#x9;&#x9;FROM CTE4&#xA;&#x9;&#x9;INNER JOIN CTE3&#xA;&#x9;&#x9;&#x9;ON CTE3.[CaseId] = CTE4.[CaseId]&#xA;&#x9;&#x9;&#x9;AND CTE3.[Cons] = CTE4.[Cons]&#xA;&#x9;&#x9;INNER JOIN CTE2&#xA;&#x9;&#x9;&#x9;ON CTE2.[CaseId] = CTE4.[CaseId]&#xA;&#x9;&#x9;WHERE  (( CTE3.[Cons] = 0 AND CTE3.[ActivityNameTemp] = 'Sperre')&#xA;&#x9;&#x9;OR ( CTE2.[MaxEventNumber] = CTE4.[MaxNum]  AND CTE3.[ActivityNameTemp] = 'Sperre'))&#xA;)&#xA;DELETE [M2C_PAFnowIM].[EventLog]&#xA;FROM [M2C_PAFnowIM].[EventLog]&#xA;         INNER JOIN CTE5&#xA;                    ON CTE5.[CaseId] = [M2C_PAFnowIM].[EventLog].[CaseId]&#xA;                        AND CTE5.[ActivityName] = [M2C_PAFnowIM].[EventLog].[ActivityName]&#xA;                        AND CTE5.[Timestamp] = [M2C_PAFnowIM].[EventLog].[Timestamp];&#xA;&#xA; &#xA;GO" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-3 Event - Abrechnungsrelevantes Ablesedatum"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0ecf8410-3795-44b9-a5e3-88cb1d31b93e}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-3 Event - Abrechnungsrelevantes Ablesedatum"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;EXEC PAFnowStatistic 'Event Abrechnungsrelevantes Ablesedatum';&#xA;&#xA;-- ADAT (tatsächliches Ablesedatum)&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Abrechnungsrelevantes Ablesedatum'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Abrechnungsrelevantes Ablesedatum'                     AS [ActivityName],&#xA;                    NULL                                     AS [Resource],&#xA;                    [MRDoc].[ADATTIM] AS [Timestamp],&#xA;                    30                                                AS [SortKey],&#xA;                    NULL                                   AS [UserType],&#xA;                    NULL          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;&#x9;WHERE [MRDoc].[ADAT] &lt;&gt; '1900-01-01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-4 Event - Eingang Zählerstand"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{09ca4a30-50ca-4e64-9b11-0449418d7b11}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-4 Event - Eingang Zählerstand"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;EXEC PAFnowStatistic 'Event Eingang Zählerstand';&#xA;&#xA;--Event &quot;Eingang Zählerstand&quot;&#xA;BEGIN TRY&#xA; PRINT 'Änderungsdatum Ablesebeleg'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Eingang Zählerstand'                     AS [ActivityName],&#xA;                    [MRDoc].[AENAM]                                    AS [Resource],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;[MRDoc].[AEDAT] AS [TimeStamp],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;WHEN [MRDoc].[ADATTATS] &lt;&gt; '1900-01-01'&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;&#x9;THEN COALESCE([MRDoc].[ADATTATS], '23:59:59')&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--&#x9;ELSE [MRDoc].[ADATTIM]&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;--END AS [TimeStamp],&#xA;                    40                                                AS [SortKey],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9; [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;&#x9;&#x9;&#x9;LEFT JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;&#x9;&#x9;&#x9;&#x9;ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;&#x9;&#x9;&#x9;LEFT JOIN [USR02]&#xA;&#x9;&#x9;&#x9;&#x9;ON [MRDoc].[AENAM] = [USR02].[BNAME]&#xA;&#x9;WHERE [MRDoc].[AEDAT] &lt;&gt; '1900-01-01'&#xA;&#x9;AND [CNT_READ].[OBJECTID] IS NULL&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-5 Event - Ändere Kennzahl der Plausibilitätsprüfung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{34527fa9-4763-40a7-9d44-1ded1e72ca05}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-5 Event - Ändere Kennzahl der Plausibilitätsprüfung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event Ändere Kennzahl der Plausibilitätsprüfung';&#xA;&#xA;--Event &quot;Eingang Zählerstand&quot;&#xA;BEGIN TRY&#xA; PRINT 'Ändere Kennzahl der Plausibilitätsprüfung'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Ändere Kennzahl der Plausibilitätsprüfung'                     AS [ActivityName],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_READ].[UDATETIME] AS [Timestamp],&#xA;                    50 AS [SortKey],&#xA;     [USR02].[USTYP]                                   AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;   INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;    ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;            LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA; WHERE [CNT_READ].[FNAME] = 'PRUEFPKT'&#xA; AND [CNT_READ].[VALUE_NEW] &lt;&gt; ''&#xA; AND ([CNT_READ].[VALUE_OLD] IS NULL  OR [CNT_READ].[VALUE_OLD] = '')&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-6 Event - Sperre Ablesebelg"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{6170e18f-42c7-4007-91ed-ddf0b21044f5}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-6 Event - Sperre Ablesebelg"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event Sperre Ablesebeleg';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Sperre Ablesebeleg'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Sperre Ablesebeleg'                     AS [ActivityName],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    COALESCE([CNT_READ].[UDATETIME], [CNT_READ].[UTIME]) AS [Timestamp],&#xA;                    60                                                AS [SortKey],&#xA;     [USR02].[USTYP]                                   AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;   INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;    ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;            LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA; WHERE [CNT_READ].[FNAME] = 'ABLSTAT'&#xA; AND ([CNT_READ].[VALUE_NEW] = '2'&#xA; OR [CNT_READ].[VALUE_NEW] = '3')&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-7 Event - Ändere abgelesenen Zählerstand"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{ebd5362b-dcd6-462f-81ef-21913122239b}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-7 Event - Ändere abgelesenen Zählerstand"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event Ändere abgelesenen Zählerstand';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Ändere abgelesenen Zählerstand'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Ändere abgelesenen Zählerstand'                    AS [ActivityName],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_READ].[UDATETIME] AS [Timestamp],&#xA;                    70                                                AS [SortKey],&#xA;     [USR02].[USTYP]                                   AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;   INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;    ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;            LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA; WHERE ([CNT_READ].[FNAME] = 'V_ZWSTAND' OR [CNT_READ].[FNAME] = 'N_ZWSTAND')&#xA; --AND [CNT_READ].[VALUE_NEW] &lt;&gt; '0'&#xA; AND ([CNT_READ].[VALUE_OLD] IS NOT NULL  OR [CNT_READ].[VALUE_OLD] &lt;&gt; '0')&#xA; AND [CNT_READ].[VALUE_NEW] &lt;&gt; [CNT_READ].[VALUE_OLD]&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-8 Event - Gebe Ablesebeleg frei"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{22cce777-4a1b-4d50-be2c-16721ea25bc0}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-8 Event - Gebe Ablesebeleg frei"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Event gebe Ablesebeleg frei';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Gebe Ablesebeleg frei'&#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Gebe Ablesebeleg frei'                   AS [ActivityName],&#xA;                    [CNT_READ].[USERNAME]                                     AS [Resource],&#xA;                    [CNT_READ].[UDATETIME] AS [Timestamp],&#xA;                    80                                                AS [SortKey],&#xA;     [USR02].[USTYP]                                   AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)          AS [Automatic]&#xA;    FROM  [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingDoc] AS [MRDoc]&#xA;                        ON [MRDoc].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRDoc].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;   INNER JOIN [M2C_PAFnowIM].[CNT_READ] AS [CNT_READ]&#xA;    ON [CNT_READ].[OBJECTID] = [MRDoc].[ABLBELNR]&#xA;            LEFT JOIN [USR02]&#xA;                       ON [CNT_READ].[USERNAME] = [USR02].[BNAME]&#xA; WHERE [CNT_READ].[FNAME] = 'ABLSTAT'&#xA; AND [CNT_READ].[VALUE_NEW] = '4'                                             &#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\4-9 Event - Geplantes Abrechnungsdatum"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{0893bc00-60e5-40e5-b3f6-3113e4e8423a}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="4-9 Event - Geplantes Abrechnungsdatum"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:PropertyExpression
            DTS:Name="Disable">@[$Package::EventGeplantesAbrechnungsdatum_Disable]</DTS:PropertyExpression>
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Geplantes Abrechnungsdatum';&#xA;&#xA;BEGIN TRY&#xA;&#x9;PRINT 'Geplantes Abrechnungsdatum'&#xA;&#x9;BEGIN TRANSACTION;&#xA;&#x9;INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [CLT].[CaseId],&#xA;                    'Geplantes Abrechnungsdatum'                     AS [ActivityName],&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Null                                      AS [Resource],&#xA;                    [MRReason].[ABRDATS] + ' 23:59:59.00' AS [Timestamp],&#xA;                    90                                                AS [SortKey],&#xA;                    NULL                                           AS [UserType],&#xA;                    NULL                 AS [Automatic]&#xA;    FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;             INNER JOIN [M2C_PAFnowIM].[Object_ReadingReason] AS [MRReason]&#xA;                        ON [MRReason].[Client] = [CLT].[MRDocsClient]&#xA;                            AND [MRReason].[ABLBELNR] = [CLT].[MRDocsABLBELNR]&#xA;&#x9;WHERE ([MRReason].[ABRDATS] IS NOT NULL OR [MRReason].[ABRDATS] &lt;&gt; '')&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;&#xA;&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Eventlog\Event - Sperre Mahnung"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Sperre Mahnung"
          DTS:DTSID="{7cf11abc-48bb-4226-b913-fee446c5cee6}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Event - Sperre Mahnung"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019; © 2019 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic 'Setze Mahnsperre';&#xA;&#xA;BEGIN TRY&#xA; PRINT 'Setze Mahnsperre' &#xA; BEGIN TRANSACTION;&#xA; INSERT INTO [M2C_PAFnowIM].[EventLog]&#xA;    SELECT DISTINCT [MeterReading2Billing].[CaseId],&#xA;                    'Setze Mahnsperre'                     AS [ActivityName],&#xA;                    [Locks].[UNAME]                                   AS [Resource],&#xA;                    [Locks].[ADATUM] + [Locks].[AZEIT] AS [Timestamp],&#xA;                    330                                                AS [SortKey],&#xA;                    [USR02].[USTYP]                                           AS [UserType],&#xA;                    IIF([USR02].[USTYP] IN ('B', 'C'), 1, 0)                  AS [Automatic]&#xA;     FROM [M2C_PAFnowIM].[Object_MeterReading2Billing] AS [MeterReading2Billing]&#xA;&#x9; INNER JOIN [M2C_PAFnowIM].[Object_BillingDoc] AS [BillingDoc]&#xA;&#x9;&#x9; ON [MeterReading2Billing].[MRDocsClient] = [BillingDoc].[Client]&#xA;&#x9;&#x9; AND [MeterReading2Billing].[BELNR] = [BillingDoc].[BELNR]&#xA;&#x9;&#x9;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_IRHistory] AS [IRHistory]&#xA;&#x9;&#x9;&#x9;ON [IRHistory].[Client] = [BillingDoc].[Client]&#xA;&#x9;&#x9;&#x9;AND [IRHistory].[BELNR] = [BillingDoc].[BELNR]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_FaktDocHeader] AS [FaktDocHeader]&#xA;&#x9;&#x9;&#x9;ON [FaktDocHeader].[Client] = [IRHistory].[Client]&#xA;&#x9;&#x9;&#x9;AND [FaktDocHeader].[OPBEL] = [IRHistory].[OPBEL]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractData] AS [ContractData]&#xA;&#x9;&#x9;ON [ContractData].[VERTRAG] = [MeterReading2Billing].[VERTRAG]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [MeterReading2Billing].[MRDocsClient]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractAccountHeader] AS [ContractAccountHeader]&#xA;&#x9;&#x9;ON [ContractData].[VKONTO] = [ContractAccountHeader].[VKONT]&#xA;&#x9;&#x9;AND [ContractData].[Client] = [ContractAccountHeader].[Client]&#xA;&#x9;INNER JOIN [M2C_PAFnowIM].[Object_ContractLocks] AS [Locks]&#xA;&#x9;&#x9;ON [Locks].[Client] = [ContractAccountHeader].[Client]&#xA;&#x9;&#x9;AND [Locks].[VKONT] = [ContractAccountHeader].[VKONT]&#xA; LEFT JOIN [USR02]&#xA;           ON [Locks].[UNAME] = [USR02].[BNAME]&#xA;&#x9;WHERE PROID = '01'&#xA;    COMMIT TRANSACTION;&#xA;END TRY&#xA;BEGIN CATCH&#xA;    EXECUTE usp_MyErrorLog;&#xA;    ROLLBACK TRANSACTION;&#xA;END CATCH;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{5e2091df-44d9-4ea6-8b6c-fddcd2ad6e3f}"
          DTS:From="Package\Eventlog\4-0 Pre Eventlog"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Eventlog\4-1 Event - Lege Ablesebeleg an" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{D485AA45-BA1F-4AE9-B7E6-1CBBB75DFE30}"
          DTS:From="Package\Eventlog\4-1 Event - Lege Ablesebeleg an"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Eventlog\4-2 Event - Geplantes Ablesedatum" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 10]"
          DTS:CreationName=""
          DTS:DTSID="{DB8BD2F7-EBDB-4EFE-9886-7DAF496F21AD}"
          DTS:From="Package\Eventlog\4-25 Event - Erreiche Mahnstufe"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 10"
          DTS:To="Package\Eventlog\Event - Sperre Mahnung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 11]"
          DTS:CreationName=""
          DTS:DTSID="{9F823330-3EC6-444C-B49A-1E2FADC128DA}"
          DTS:From="Package\Eventlog\4-10 Event - Lege Abrechnungsbeleg an"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 11"
          DTS:To="Package\Eventlog\4-11 Event - Storniere Abrechnungsbeleg" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 12]"
          DTS:CreationName=""
          DTS:DTSID="{5EB35218-1D32-4BBB-AB87-52C140632FBB}"
          DTS:From="Package\Eventlog\4-20 Event - Storno Druckbeleg"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 12"
          DTS:To="Package\Eventlog\4-22 Event - Fakturaaussteuerung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 13]"
          DTS:CreationName=""
          DTS:DTSID="{7281304A-7639-4FB8-8D6D-12C817F3636B}"
          DTS:From="Package\Eventlog\4-19 Event - Drucke Fakturabeleg"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 13"
          DTS:To="Package\Eventlog\4-20 Event - Storno Druckbeleg" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 16]"
          DTS:CreationName=""
          DTS:DTSID="{72F1768B-6097-4388-87FE-5725076C1DF3}"
          DTS:From="Package\Eventlog\4-4 Event - Eingang Zählerstand"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 16"
          DTS:To="Package\Eventlog\4-5 Event - Ändere Kennzahl der Plausibilitätsprüfung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 17]"
          DTS:CreationName=""
          DTS:DTSID="{0E54A03B-5483-41CA-A5D8-FD1D36B71B7B}"
          DTS:From="Package\Eventlog\4-2 Event - Geplantes Ablesedatum"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 17"
          DTS:To="Package\Eventlog\4-3 Event - Abrechnungsrelevantes Ablesedatum" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 18]"
          DTS:CreationName=""
          DTS:DTSID="{842502AF-C0C4-4688-89F6-7D2F7847EE7F}"
          DTS:From="Package\Eventlog\4-3 Event - Abrechnungsrelevantes Ablesedatum"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 18"
          DTS:To="Package\Eventlog\4-4 Event - Eingang Zählerstand" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 19]"
          DTS:CreationName=""
          DTS:DTSID="{97F22B37-483A-4E5C-9A31-FA656472B677}"
          DTS:From="Package\Eventlog\4-5 Event - Ändere Kennzahl der Plausibilitätsprüfung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 19"
          DTS:To="Package\Eventlog\4-6 Event - Sperre Ablesebelg" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 2]"
          DTS:CreationName=""
          DTS:DTSID="{5701F2F6-CCA6-4B79-8848-300C131B9798}"
          DTS:From="Package\Eventlog\4-11 Event - Storniere Abrechnungsbeleg"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 2"
          DTS:To="Package\Eventlog\4-12 Event - Ändere abgerechneten Zählerstand" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 20]"
          DTS:CreationName=""
          DTS:DTSID="{D53B7022-6A9C-479D-B7E8-E7A5EF11FAB1}"
          DTS:From="Package\Eventlog\4-8 Event - Gebe Ablesebeleg frei"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 20"
          DTS:To="Package\Eventlog\4-9 Event - Geplantes Abrechnungsdatum" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 21]"
          DTS:CreationName=""
          DTS:DTSID="{4FF01FA0-FB8E-459A-8F73-C54C48B00266}"
          DTS:From="Package\Eventlog\4-6 Event - Sperre Ablesebelg"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 21"
          DTS:To="Package\Eventlog\4-7 Event - Ändere abgelesenen Zählerstand" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 22]"
          DTS:CreationName=""
          DTS:DTSID="{DB11AA80-C571-4AC3-86B4-9C70B9B3670D}"
          DTS:From="Package\Eventlog\4-7 Event - Ändere abgelesenen Zählerstand"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 22"
          DTS:To="Package\Eventlog\4-8 Event - Gebe Ablesebeleg frei" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 23]"
          DTS:CreationName=""
          DTS:DTSID="{E4744BC6-64FC-4B6B-92AF-252EB48E873A}"
          DTS:From="Package\Eventlog\4-22 Event - Fakturaaussteuerung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 23"
          DTS:To="Package\Eventlog\4-22 Event - Fakturasperre" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 25]"
          DTS:CreationName=""
          DTS:DTSID="{EFB4A9BF-1B65-4729-BB78-4D92268B5E65}"
          DTS:From="Package\Eventlog\Event - Sperre Mahnung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 25"
          DTS:To="Package\Eventlog\4-26 Post Eventlog" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 27]"
          DTS:CreationName=""
          DTS:DTSID="{6C8632C2-D226-4D4F-ADD7-611541535950}"
          DTS:From="Package\Eventlog\4-13 Event - Gebe Abrechnungsbeleg frei"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 27"
          DTS:To="Package\Eventlog\4-14 Event - Abrechnungsaussteuerung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 28]"
          DTS:CreationName=""
          DTS:DTSID="{F2B9D512-57DD-4A7D-A496-7EACF195CA35}"
          DTS:From="Package\Eventlog\4-12 Event - Ändere abgerechneten Zählerstand"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 28"
          DTS:To="Package\Eventlog\4-13 Event - Gebe Abrechnungsbeleg frei" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 29]"
          DTS:CreationName=""
          DTS:DTSID="{2153B57B-DE92-491E-9AAA-619A2C080391}"
          DTS:From="Package\Eventlog\4-16 Event - Forderungsbuchung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 29"
          DTS:To="Package\Eventlog\4-17 Event - Gebe Fakturabeleg frei" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 3]"
          DTS:CreationName=""
          DTS:DTSID="{80E50CEF-2465-4DC9-8679-7411B76831EE}"
          DTS:From="Package\Eventlog\4-9 Event - Geplantes Abrechnungsdatum"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 3"
          DTS:To="Package\Eventlog\4-10 Event - Lege Abrechnungsbeleg an" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 32]"
          DTS:CreationName=""
          DTS:DTSID="{07A5997A-C8A7-4961-9B43-183BCE0C1BE3}"
          DTS:From="Package\Eventlog\4-14 Event - Abrechnungsaussteuerung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 32"
          DTS:To="Package\Eventlog\4-14 Event - Abrechnungssperre" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 33]"
          DTS:CreationName=""
          DTS:DTSID="{0D2F366A-3310-4BA3-8980-64153310A26C}"
          DTS:From="Package\Eventlog\4-14 Event - Abrechnungssperre"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 33"
          DTS:To="Package\Eventlog\4-15 Event - Lege Fakturableg an" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 4]"
          DTS:CreationName=""
          DTS:DTSID="{11316FA4-59CC-41A0-8667-721FDC5B4B64}"
          DTS:From="Package\Eventlog\4-15 Event - Lege Fakturableg an"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 4"
          DTS:To="Package\Eventlog\4-16 Event - Forderungsbuchung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 5]"
          DTS:CreationName=""
          DTS:DTSID="{A34E9AF4-DCCA-481B-AF1A-D2CE38162DF7}"
          DTS:From="Package\Eventlog\4-22 Event - Fakturasperre"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 5"
          DTS:To="Package\Eventlog\4-23 Event - Fälligkeitsdatum Zahlung" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 6]"
          DTS:CreationName=""
          DTS:DTSID="{0F26EBB5-4202-46C9-80AC-4EE7B3812ACA}"
          DTS:From="Package\Eventlog\4-23 Event - Fälligkeitsdatum Zahlung"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 6"
          DTS:To="Package\Eventlog\4-24 Event - Ausgleich" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 7]"
          DTS:CreationName=""
          DTS:DTSID="{91E5604C-172C-420E-B985-AD8E92E8C1EC}"
          DTS:From="Package\Eventlog\4-24 Event - Ausgleich"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 7"
          DTS:To="Package\Eventlog\4-25 Event - Erreiche Mahnstufe" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 8]"
          DTS:CreationName=""
          DTS:DTSID="{07D6DCA5-1205-4C9F-B0D7-0CD060023DCF}"
          DTS:From="Package\Eventlog\4-18 Event - Storniere Fakturabeleg"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 8"
          DTS:To="Package\Eventlog\4-19 Event - Drucke Fakturabeleg" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Eventlog.PrecedenceConstraints[Einschränkung 9]"
          DTS:CreationName=""
          DTS:DTSID="{0EB3C9E0-B391-4867-BBB9-D677F692C63A}"
          DTS:From="Package\Eventlog\4-17 Event - Gebe Fakturabeleg frei"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 9"
          DTS:To="Package\Eventlog\4-18 Event - Storniere Fakturabeleg" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Initialization"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{52920217-820D-4E17-B63B-6FFED324A17F}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Initialization">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Initialization\0-0 Instantiation"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{2DDE8588-983B-4159-AE3A-DFF7B16D4789}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="0-0 Instantiation"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;--Create schemas&#xA;PRINT 'Setup'&#xA;GO&#xA;&#xA;IF (SCHEMA_ID('M2C_PAFnow') IS NULL)&#xA;    BEGIN&#xA;        EXEC ('CREATE SCHEMA [M2C_PAFnow]')&#xA;    END&#xA;GO&#xA;&#xA;IF (SCHEMA_ID('M2C_PAFnowIM') IS NULL)&#xA;    BEGIN&#xA;        EXEC ('CREATE SCHEMA [M2C_PAFnowIM]')&#xA;    END&#xA;GO&#xA;&#xA;IF (SCHEMA_ID('PAFnowStatistic') IS NULL)&#xA;    BEGIN&#xA;        EXEC ('CREATE SCHEMA [PAFnowStatistic]')&#xA;    END&#xA;GO&#xA;&#xA;&#xA;-- Verify that the stored procedure for error printing&#xA;-- does not exist.&#xA;IF OBJECT_ID(N'usp_MyErrorLog', N'P') IS NOT NULL&#xA;    DROP PROCEDURE [usp_MyErrorLog];&#xA;GO&#xA;&#xA;-- Create a stored procedure for printing error information.&#xA;CREATE PROCEDURE [usp_MyErrorLog]&#xA;AS&#xA;    PRINT&#xA;            'Error ' + CONVERT(VARCHAR(50), ERROR_NUMBER()) +&#xA;            ', Severity ' + CONVERT(VARCHAR(5), ERROR_SEVERITY()) +&#xA;            ', State ' + CONVERT(VARCHAR(5), ERROR_STATE()) +&#xA;            ', Line ' + CONVERT(VARCHAR(5), ERROR_LINE());&#xA;    PRINT&#xA;        ERROR_MESSAGE();&#xA;GO&#xA;&#xA;--Convert to Date&#xA;DROP FUNCTION IF EXISTS [dbo].[TryConvertToDate];&#xA;GO&#xA;&#xA;CREATE FUNCTION [dbo].[TryConvertToDate](@InputString VARCHAR(50))&#xA;    RETURNS TABLE&#xA;        AS&#xA;        RETURN&#xA;            (&#xA;                SELECT [TryDate] =&#xA;                           CASE&#xA;                               WHEN TRY_CONVERT(DATETIME, @InputString) &lt;= '01.01.1970'&#xA;                                   THEN NULL&#xA;                               WHEN LEN(@InputString) = 14&#xA;                                   THEN TRY_CONVERT(DATETIME,&#xA;                                       stuff(stuff(stuff(@InputString, 9, 0, ' '), 12, 0, ':'), 15, 0, ':'))&#xA;                               ELSE TRY_CONVERT(DATETIME, @InputString)&#xA;                               END&#xA;            )&#xA;GO&#xA;&#xA;--Convert to Time&#xA;DROP FUNCTION IF EXISTS [dbo].[TryConvertToTime];&#xA;GO&#xA;&#xA;CREATE FUNCTION [dbo].[TryConvertToTime](@InputString VARCHAR(50))&#xA;    RETURNS TABLE&#xA;        AS&#xA;        RETURN&#xA;            (&#xA;                SELECT [TryTime] =&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;CASE&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(@InputString) = 4&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN TRY_CONVERT(DATETIME, REPLACE(@InputString, @InputString, CONCAT(LEFT(@InputString, 2), ':', RIGHT(@InputString, 2))))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHEN LEN(@InputString) = 6&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;THEN TRY_CONVERT(DATETIME, STUFF(STUFF(@InputString, 3, 0, ':'), 6, 0, ':'))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ELSE @InputString&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;END&#xA;            )&#xA;GO&#xA;&#xA;IF object_id(N'CountDays') IS NOT NULL&#xA;    DROP FUNCTION CountDays&#xA;GO&#xA;&#xA;CREATE FUNCTION [dbo].[CountDays](@startDate DATETIME, @endDate DATETIME)&#xA;    RETURNS BIGINT&#xA;BEGIN&#xA;    DECLARE&#xA;        @totaldays INT;&#xA;    DECLARE&#xA;        @weekenddays INT;&#xA;    SET @totaldays = DATEDIFF(DAY, @startDate, @endDate)&#xA;    SET @weekenddays = ((DATEDIFF(WEEK, @startDate, @endDate) * 2) +&#xA;                        CASE WHEN DATEPART(WEEKDAY, @startDate) = 1 THEN 1 ELSE 0 END +&#xA;                        CASE WHEN DATEPART(WEEKDAY, @endDate) = 7 THEN 1 ELSE 0 END)&#xA;    RETURN (@totaldays - @weekenddays)&#xA;END&#xA;GO&#xA;&#xA;--Set a Procedure for updating the statistic&#xA;IF object_id(N'PAFnowStatistic') IS NOT NULL&#xA;    DROP PROCEDURE [PAFnowStatistic]&#xA;GO&#xA;&#xA;CREATE PROCEDURE [PAFnowStatistic](&#xA;    @tableName NVARCHAR(100)&#xA;)&#xA;AS&#xA;BEGIN&#xA;    INSERT INTO [PAFnowStatistic].[_Times]&#xA;    VALUES ((SELECT TOP (1) [ID] FROM [PAFnowStatistic].[_TimesId] ORDER BY [Timestamp] DESC), @tableName, NULL, NULL);&#xA;    UPDATE [PAFnowStatistic].[_Times]&#xA;    SET [Starttime] = GETDATE()&#xA;    WHERE [Activity] = @tableName&#xA;      AND [ID] = (SELECT TOP (1) [ID] FROM [PAFnowStatistic].[_TimesId] ORDER BY [Timestamp] DESC)&#xA;    PRINT @tableName&#xA;END&#xA;GO&#xA;&#xA;IF object_id(N'PAFnowStatisticUpdate') IS NOT NULL&#xA;    DROP PROCEDURE [PAFnowStatisticUpdate]&#xA;GO&#xA;&#xA;CREATE OR ALTER PROCEDURE [PAFnowStatisticUpdate](&#xA;    @tableName NVARCHAR(100)&#xA;)&#xA;AS&#xA;BEGIN&#xA;    UPDATE [PAFnowStatistic].[_Times]&#xA;    SET [Endtime] = GETDATE()&#xA;    WHERE [Activity] = @tableName&#xA;      AND [ID] = (SELECT TOP (1) [ID] FROM [PAFnowStatistic].[_TimesId] ORDER BY [Timestamp] DESC)&#xA;END&#xA;GO&#xA;&#xA;--Set some settings&#xA;IF NOT (EXISTS(SELECT *&#xA;               FROM [INFORMATION_SCHEMA].[TABLES]&#xA;               WHERE [TABLE_SCHEMA] = 'PAFnowStatistic'&#xA;                 AND [TABLE_NAME] = '_TimesId'))&#xA;    BEGIN&#xA;        CREATE TABLE [PAFnowStatistic].[_TimesId]&#xA;        (&#xA;            [ID]        NVARCHAR(255) NOT NULL,&#xA;            [Timestamp] DATETIME&#xA;        );&#xA;    END&#xA;IF NOT (EXISTS(SELECT *&#xA;               FROM [INFORMATION_SCHEMA].[TABLES]&#xA;               WHERE [TABLE_SCHEMA] = 'PAFnowStatistic'&#xA;                 AND [TABLE_NAME] = '_Times'))&#xA;    BEGIN&#xA;        CREATE TABLE [PAFnowStatistic].[_Times]&#xA;        (&#xA;            [ID]        NVARCHAR(255) NOT NULL,&#xA;            [Activity]  NVARCHAR(50)  NOT NULL,&#xA;            [Starttime] DATETIME,&#xA;            [Endtime]   DATETIME&#xA;        );&#xA;    END&#xA;DROP TABLE IF EXISTS [PAFnowStatistic].[_Config];&#xA;CREATE TABLE [PAFnowStatistic].[_Config]&#xA;(&#xA;    [ActivityName]           NVARCHAR(50),&#xA;    [CostPerStep]            NUMERIC(13, 2) NOT NULL,&#xA;    [CostPerAutomaticStep]   NUMERIC(13, 2) NOT NULL,&#xA;    [CostPerChange]          NUMERIC(13, 2) NOT NULL,&#xA;    [CostPerAutomaticChange] NUMERIC(13, 2) NOT NULL&#xA;);&#xA;GO&#xA;&#xA;--This sets a ID and the time for the first run&#xA;INSERT INTO [PAFnowStatistic].[_TimesId]&#xA;VALUES (NEWID(), GETDATE());&#xA;&#xA;INSERT INTO [PAFnowStatistic].[_Config]&#xA;VALUES ('Default', 8, 2, 10, 1);" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Initialization\0-1 Connection Objects"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{047CC643-A9BD-483C-A53F-04CB7E703308}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="0-1 Connection Objects"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;&#xA;EXEC PAFnowStatistic '0-1 connection-objects';&#xA;&#xA;--Here the views are getting build. Only use the fields which you are using!&#xA;&#xA;--Index for orginal tables&#xA;&#xA;--READ&#xA;IF NOT EXISTS(SELECT *&#xA;              FROM [sys].[indexes]&#xA;              WHERE [NAME] = 'INDEX_CDHDR_READ'&#xA;                AND [object_id] = OBJECT_ID('[dbo].[CDHDR_READ]'))&#xA;    BEGIN&#xA;        CREATE NONCLUSTERED INDEX [INDEX_CDHDR_READ]&#xA;            ON [dbo].[CDHDR_READ] ([MANDANT], [CHANGENR])&#xA;            INCLUDE ([USERNAME], [UDATE], [UTIME])&#xA;    END&#xA;GO&#xA;&#xA;IF NOT EXISTS(SELECT *&#xA;              FROM [sys].[indexes]&#xA;              WHERE [NAME] = 'INDEX_CDPOS_READ'&#xA;                AND [object_id] = OBJECT_ID('[dbo].[CDPOS_READ]'))&#xA;    BEGIN&#xA;        CREATE NONCLUSTERED INDEX [INDEX_CDPOS_READ]&#xA;            ON [dbo].[CDPOS_READ] ([MANDANT], [CHANGENR], [TABNAME], [TABKEY])&#xA;            INCLUDE ([VALUE_NEW])&#xA;    END&#xA;GO&#xA;&#xA;-- CNT READ&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[CNT_READ];&#xA;GO&#xA;&#xA;SELECT CAST([h].[MANDANT] AS NVARCHAR(3))                                                     AS [MANDANT],&#xA;       CAST([h].[OBJECTCLAS] AS NVARCHAR(15))                                                 AS [OBJECTCLAS],&#xA;       CAST([h].[OBJECTID] AS NVARCHAR(90))                                                   AS [OBJECTID],&#xA;       CAST([h].[CHANGENR] AS NVARCHAR(10))                                                   AS [CHANGENR],&#xA;       CAST([p].[TABNAME] AS NVARCHAR(30))                                                    AS [TABNAME],&#xA;       CAST([p].[TABKEY] AS NVARCHAR(70))                                                     AS [TABKEY],&#xA;       CAST([p].[FNAME] AS NVARCHAR(30))                                                      AS [FNAME],&#xA;       CAST([p].[CHNGIND] AS NVARCHAR(1))                                                     AS [CHNGIND],&#xA;       IIF([p].[VALUE_NEW] IS NULL, '', CAST(LTRIM(RTRIM([p].[VALUE_NEW])) AS NVARCHAR(255))) AS [VALUE_NEW],&#xA;       IIF([p].[VALUE_OLD] IS NULL, '', CAST(LTRIM(RTRIM([p].[VALUE_OLD])) AS NVARCHAR(255))) AS [VALUE_OLD],&#xA;       [d].[TryDate]                                                                          AS [UDATE],&#xA;       COALESCE([k].[TryTime], 0)                                                             AS [UTIME],&#xA;       [d].[TryDate] + COALESCE([k].[TryTime], 0)                                             AS [UDATETIME],&#xA;       CAST([h].[USERNAME] AS NVARCHAR(250))                                                  AS [USERNAME]&#xA;INTO [M2C_PAFnowIM].[CNT_READ]&#xA;FROM [CDHDR_READ] [h]&#xA;         INNER JOIN [CDPOS_READ] [p]&#xA;                    ON [p].[MANDANT] = [h].[MANDANT]&#xA;                        AND [p].[CHANGENR] = [h].[CHANGENR]&#xA;                        AND [p].[OBJECTCLAS] = [h].[OBJECTCLAS]&#xA;                        AND [p].[OBJECTID] = [h].[OBJECTID]&#xA;         CROSS APPLY [dbo].TryConvertToDate([h].[UDATE]) AS [d]&#xA;         CROSS APPLY [dbo].TryConvertToTime([h].[UTIME]) AS [k]&#xA;WHERE [p].[TABNAME] IN ('EABL', 'EABLG')&#xA;AND [p].[CHNGIND] = 'U';&#xA;GO&#xA;&#xA;&#xA;-- Contract&#xA;IF NOT EXISTS(SELECT *&#xA;              FROM [sys].[indexes]&#xA;              WHERE [NAME] = 'INDEX_CDHDR_CONTRACT'&#xA;                AND [object_id] = OBJECT_ID('[dbo].[CDHDR_CONTRACT]'))&#xA;    BEGIN&#xA;        CREATE NONCLUSTERED INDEX [INDEX_CDHDR_CONTRACT]&#xA;            ON [dbo].[CDHDR_CONTRACT] ([MANDANT], [CHANGENR])&#xA;            INCLUDE ([USERNAME], [UDATE], [UTIME])&#xA;    END&#xA;GO&#xA;&#xA;IF NOT EXISTS(SELECT *&#xA;              FROM [sys].[indexes]&#xA;              WHERE [NAME] = 'INDEX_CDPOS_CONTRACT'&#xA;                AND [object_id] = OBJECT_ID('[dbo].[CDPOS_CONTRACT]'))&#xA;    BEGIN&#xA;        CREATE NONCLUSTERED INDEX [INDEX_CDPOS_CONTRACT]&#xA;            ON [dbo].[CDPOS_CONTRACT] ([MANDANT], [CHANGENR], [TABNAME], [TABKEY])&#xA;            INCLUDE ([VALUE_NEW])&#xA;    END&#xA;GO&#xA;&#xA;-- CNT CONTRACT&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[CNT_CONTRACT];&#xA;GO&#xA;&#xA;SELECT CAST([h].[MANDANT] AS NVARCHAR(3))                                                     AS [MANDANT],&#xA;       CAST([h].[OBJECTCLAS] AS NVARCHAR(15))                                                 AS [OBJECTCLAS],&#xA;       CAST([h].[OBJECTID] AS NVARCHAR(90))                                                   AS [OBJECTID],&#xA;       CAST([h].[CHANGENR] AS NVARCHAR(10))                                                   AS [CHANGENR],&#xA;       CAST([p].[TABNAME] AS NVARCHAR(30))                                                    AS [TABNAME],&#xA;       CAST([p].[TABKEY] AS NVARCHAR(70))                                                     AS [TABKEY],&#xA;       CAST([p].[FNAME] AS NVARCHAR(30))                                                      AS [FNAME],&#xA;       CAST([p].[CHNGIND] AS NVARCHAR(1))                                                     AS [CHNGIND],&#xA;       IIF([p].[VALUE_NEW] IS NULL, '', CAST(LTRIM(RTRIM([p].[VALUE_NEW])) AS NVARCHAR(255))) AS [VALUE_NEW],&#xA;       IIF([p].[VALUE_OLD] IS NULL, '', CAST(LTRIM(RTRIM([p].[VALUE_OLD])) AS NVARCHAR(255))) AS [VALUE_OLD],&#xA;       [d].[TryDate]                                                                          AS [UDATE],&#xA;       COALESCE([k].[TryTime], 0)                                                             AS [UTIME],&#xA;       [d].[TryDate] + COALESCE([k].[TryTime], 0)                                             AS [UDATETIME],&#xA;       CAST([h].[USERNAME] AS NVARCHAR(250))                                                  AS [USERNAME]&#xA;INTO [M2C_PAFnowIM].[CNT_CONTRACT]&#xA;FROM [CDHDR_CONTRACT] [h]&#xA;         INNER JOIN [CDPOS_CONTRACT] [p]&#xA;                    ON [p].[MANDANT] = [h].[MANDANT]&#xA;                        AND [p].[CHANGENR] = [h].[CHANGENR]&#xA;                        AND [p].[OBJECTCLAS] = [h].[OBJECTCLAS]&#xA;                        AND [p].[OBJECTID] = [h].[OBJECTID]&#xA;         CROSS APPLY [dbo].TryConvertToDate([h].[UDATE]) AS [d]&#xA;         CROSS APPLY [dbo].TryConvertToTime([h].[UTIME]) AS [k]&#xA;WHERE [p].[TABNAME] IN ('EVER')&#xA;AND [p].[CHNGIND] = 'U';&#xA;GO&#xA;&#xA;EXEC PAFnowStatisticUpdate '0-1 connection-objects';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Initialization.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{8F65A0F1-0F9B-40DE-B230-067F1C675CFD}"
          DTS:From="Package\Initialization\0-0 Instantiation"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Initialization\0-1 Connection Objects" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Proc Mining Trans"
      DTS:CreationName="STOCK:SEQUENCE"
      DTS:Description="Sequenzcontainer"
      DTS:DTSID="{574F9428-F82C-4D28-8DE4-E7A85C3592B2}"
      DTS:ExecutableType="STOCK:SEQUENCE"
      DTS:LocaleID="-1"
      DTS:ObjectName="Proc Mining Trans">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Proc Mining Trans\7-0 Process Mining"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{A28ADBC8-0716-475E-9412-EC69C9999BA4}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="7-0 Process Mining"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '5-0 PAFnow';&#xA;&#xA;-- Create schemas&#xA;IF SCHEMA_ID('M2C_PAFnow') IS NULL EXEC ('CREATE SCHEMA [M2C_PAFnow] AUTHORIZATION [dbo]');&#xA;IF SCHEMA_ID('M2C_PAFnowIM') IS NULL EXEC ('CREATE SCHEMA [M2C_PAFnowIM] AUTHORIZATION [dbo]');&#xA;&#xA;-- Check for optional columns&#xA;IF COL_LENGTH('M2C_PAFnowIM.EventLog', 'SortKey') IS NULL ALTER TABLE [M2C_PAFnowIM].[EventLog]&#xA;    ADD [SortKey] INT;&#xA;IF COL_LENGTH('M2C_PAFnowIM.EventLog', 'Resource') IS NULL ALTER TABLE [M2C_PAFnowIM].[EventLog]&#xA;    ADD [Resource] VARCHAR(32);&#xA;IF COL_LENGTH('M2C_PAFnowIM.EventLog', 'Cost') IS NULL ALTER TABLE [M2C_PAFnowIM].[EventLog]&#xA;    ADD [Cost] FLOAT NOT NULL DEFAULT 0;&#xA;IF COL_LENGTH('M2C_PAFnowIM.EventLog', 'Automatic') IS NULL ALTER TABLE [M2C_PAFnowIM].[EventLog]&#xA;    ADD [Automatic] INT NOT NULL DEFAULT 0;&#xA;IF COL_LENGTH('M2C_PAFnowIM.EventLog', 'TimestampEnd') IS NULL ALTER TABLE [M2C_PAFnowIM].[EventLog]&#xA;    ADD [TimestampEnd] DATETIME;&#xA;GO&#xA;&#xA;-- Create EventAttributes table&#xA;DECLARE @event_attributes VARCHAR(MAX) = (&#xA;    SELECT ',' + STRING_AGG(CONCAT('SourceEvent.', QUOTENAME([COLUMN_NAME])), ',')&#xA;    FROM [INFORMATION_SCHEMA].[COLUMNS]&#xA;    WHERE [COLUMN_NAME] NOT LIKE 'c[_]%'&#xA;      AND [COLUMN_NAME] != 'CaseId'&#xA;      AND [COLUMN_NAME] != 'ActivityName'&#xA;      AND [COLUMN_NAME] != 'Timestamp'&#xA;      AND [COLUMN_NAME] != 'TimestampEnd'&#xA;      AND [COLUMN_NAME] != 'SortKey'&#xA;      AND [COLUMN_NAME] != 'Automatic'&#xA;      AND [COLUMN_NAME] != 'Resource'&#xA;      AND [COLUMN_NAME] != 'Cost'&#xA;      AND [TABLE_SCHEMA] = 'M2C_PAFnowIM'&#xA;      AND [TABLE_NAME] = 'EventLog'&#xA;);&#xA;&#xA;-- Create EventLog table (formerly Graph table)&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[EventLog];&#xA;EXEC ('&#xA;WITH Activities AS (SELECT ROW_NUMBER() OVER (ORDER BY ActivityName) + 2 AS ActivityId,&#xA;                           ActivityName                                  AS ActivityName&#xA;                    FROM M2C_PAFnowIM.EventLog&#xA;                    GROUP BY ActivityName),&#xA;     EventLog   AS (SELECT e.*,&#xA;                           ROW_NUMBER() OVER (PARTITION BY e.CaseId&#xA;                               ORDER BY e.CaseId, e.Timestamp, e.TimestampEnd, e.SortKey, e.ActivityName) AS EventNumber,&#xA;                           ROW_NUMBER() OVER (PARTITION BY e.CaseId, e.ActivityName&#xA;                               ORDER BY e.CaseId, e.Timestamp, e.TimestampEnd, e.SortKey, e.ActivityName) AS ActivityCount,&#xA;                           a.ActivityId                                                                   AS ActivityId&#xA;                    FROM M2C_PAFnowIM.EventLog e&#xA;                             INNER JOIN Activities a ON e.ActivityName = a.ActivityName)&#xA;SELECT COALESCE(SourceEvent.CaseId, TargetEvent.CaseId)                                                   AS CaseId,&#xA;       COALESCE(SourceEvent.EventNumber, TargetEvent.EventNumber - 1)                                     AS EventNumber,&#xA;       CONCAT('':'', COALESCE(SourceEvent.ActivityId, 1), ''::'', COALESCE(TargetEvent.ActivityId, 2), '':'')   AS _Edge,&#xA;       CONCAT('':'', COALESCE(SourceEvent.ActivityId, 1), '':'')                                              AS _Source,&#xA;       COALESCE(SourceEvent.ActivityName, ''&lt;Start&gt;'')                                                      AS ActivityName,&#xA;       COALESCE(TargetEvent.ActivityName, ''&lt;End&gt;'')                                                        AS ActivityNameTarget,&#xA;       CONVERT(DATE, SourceEvent.Timestamp)                                                               AS TimestampDate,&#xA;       CONVERT(TIME, SourceEvent.Timestamp)                                                               AS TimestampTime,&#xA;       CONVERT(DATE, SourceEvent.TimestampEnd)                                                            AS TimestampDateEnd,&#xA;       CONVERT(TIME, SourceEvent.TimestampEnd)                                                            AS TimestampTimeEnd,&#xA;       CONVERT(DATE, TargetEvent.Timestamp)                                                               AS TimestampTargetDate,&#xA;       CONVERT(TIME, TargetEvent.Timestamp)                                                               AS TimestampTargetTime,&#xA;       CONVERT(DATE, TargetEvent.TimestampEnd)                                                            AS TimestampTargetDateEnd,&#xA;       CONVERT(TIME, TargetEvent.TimestampEnd)                                                            AS TimestampTargetTimeEnd,&#xA;       SourceEvent.Resource                                                                               AS Resource,&#xA;       SourceEvent.Automatic                                                                              AS Automatic,&#xA;       SourceEvent.Cost                                                                                   AS Cost,&#xA;       DATEDIFF(SECOND, SourceEvent.Timestamp, SourceEvent.TimestampEnd)                                  AS DurationActivity,&#xA;       DATEDIFF(SECOND, COALESCE(SourceEvent.TimestampEnd, SourceEvent.Timestamp), TargetEvent.Timestamp) AS DurationIdle,&#xA;       DATEDIFF(SECOND, SourceEvent.Timestamp, TargetEvent.Timestamp)                                     AS Duration,&#xA;       IIF(SourceEvent.ActivityName = TargetEvent.ActivityName, 1, 0)                                     AS SelfLoop,&#xA;       IIF(TargetEvent.ActivityCount &gt; 1 AND SourceEvent.ActivityName &lt;&gt; TargetEvent.ActivityName, 1, 0)  AS Loop,&#xA;       IIF(SourceEvent.ActivityCount &gt; 1, 1, 0)                                                           AS IsRework&#xA;       ' + @event_attributes + '&#xA;INTO M2C_PAFnow.EventLog&#xA;FROM EventLog SourceEvent&#xA;         FULL OUTER JOIN EventLog TargetEvent&#xA;                         ON SourceEvent.CaseId = TargetEvent.CaseId&#xA;                             AND SourceEvent.EventNumber = TargetEvent.EventNumber - 1;&#xA;');&#xA;&#xA;-- Create CaseAttributes table&#xA;DECLARE @case_attributes_sql VARCHAR(MAX) = '';&#xA;DECLARE @case_attributes_join VARCHAR(MAX) = ';';&#xA;DECLARE @case_attributes_sql_where VARCHAR(MAX) = '';&#xA;DECLARE @case_attributes VARCHAR(MAX) = (&#xA;    SELECT STRING_AGG(QUOTENAME([COLUMN_NAME]), ',')&#xA;    FROM [INFORMATION_SCHEMA].[COLUMNS]&#xA;    WHERE [COLUMN_NAME] LIKE 'c[_]%'&#xA;      AND [TABLE_SCHEMA] = 'M2C_PAFnowIM'&#xA;      AND [TABLE_NAME] = 'EventLog'&#xA;);&#xA;DECLARE @case_attributes_with_alias VARCHAR(MAX) = (&#xA;    SELECT ',' + STRING_AGG(&#xA;            CONCAT('ca.', QUOTENAME([COLUMN_NAME]), ' AS ', QUOTENAME(RIGHT([COLUMN_NAME], LEN([COLUMN_NAME]) - 2))),&#xA;            ',')&#xA;    FROM [INFORMATION_SCHEMA].[COLUMNS]&#xA;    WHERE [COLUMN_NAME] LIKE 'c[_]%'&#xA;      AND [TABLE_SCHEMA] = 'M2C_PAFnowIM'&#xA;      AND [TABLE_NAME] = 'EventLog'&#xA;);&#xA;IF LEN(@case_attributes) &gt; 0&#xA;    BEGIN&#xA;        SET @case_attributes_join = 'LEFT JOIN CaseAttributes ca ON c.CaseId = ca.CaseId;';&#xA;        SET @case_attributes_sql_where = 'WHERE ' + REPLACE(@case_attributes, ',', ' IS NOT NULL OR ') + ' IS NOT NULL';&#xA;        SET @case_attributes_sql =&#xA;                    'CaseAttributes AS (SELECT DISTINCT CaseId,' + @case_attributes + ' FROM M2C_PAFnowIM.EventLog ' +&#xA;                    @case_attributes_sql_where + '),';&#xA;    END&#xA;&#xA;-- Create Cases table&#xA;DROP TABLE IF EXISTS [M2C_PAFnow].[Cases];&#xA;EXEC ('&#xA;WITH ' + @case_attributes_sql + '&#xA;     VariantStrings  AS (SELECT e.CaseId,&#xA;                                STRING_AGG(e._Source, '','') WITHIN GROUP (ORDER BY e.CaseId, e.EventNumber) AS Variant&#xA;                         FROM M2C_PAFnow.EventLog e&#xA;                         GROUP BY e.CaseId),&#xA;     PathStrings     AS (SELECT e.CaseId,&#xA;                                STRING_AGG(e._Edge, '','') WITHIN GROUP (ORDER BY e._Edge) AS Path&#xA;                         FROM (SELECT DISTINCT CaseId, _Edge FROM M2C_PAFnow.EventLog) e&#xA;                         GROUP BY e.CaseId),&#xA;     Variants        AS (SELECT VariantStrings.CaseId, VariantStrings.Variant, VariantIds.VariantId&#xA;                         FROM VariantStrings&#xA;                                  INNER JOIN (SELECT Variant,&#xA;                                                     ROW_NUMBER() OVER (ORDER BY COUNT(Variant) DESC) AS VariantId&#xA;                                              FROM VariantStrings&#xA;                                              GROUP BY Variant) VariantIds&#xA;                                             ON VariantStrings.Variant = VariantIds.Variant),&#xA;     VariantCounts   AS (SELECT VariantId, COUNT(VariantId) AS Count FROM Variants GROUP BY VariantId),&#xA;     Paths           AS (SELECT PathStrings.CaseId, PathStrings.Path, PathIds.PathId&#xA;                         FROM PathStrings&#xA;                                  INNER JOIN (SELECT Path, ROW_NUMBER() OVER (ORDER BY COUNT(Path) DESC) AS PathId&#xA;                                              FROM PathStrings p&#xA;                                              GROUP BY Path) PathIds&#xA;                                             ON PathStrings.Path = PathIds.Path),&#xA;     StartEvents     AS (SELECT e.CaseId, e.ActivityName, e.TimestampDate AS Date, e.TimestampTime AS Time&#xA;                         FROM M2C_PAFnow.EventLog e&#xA;                         WHERE e.EventNumber = 1),&#xA;     EndEvents       AS (SELECT e.CaseId,&#xA;                                e.ActivityName,&#xA;                                COALESCE(e.TimestampDateEnd, e.TimestampDate) AS Date,&#xA;                                COALESCE(e.TimestampTimeEnd, e.TimestampTime) AS Time&#xA;                         FROM M2C_PAFnow.EventLog e&#xA;                         WHERE e.ActivityNameTarget = ''&lt;End&gt;''),&#xA;&#x9; CountStartEvents AS (SELECT TOP (9999) ActivityName, COUNT(ActivityName) AS CountActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM StartEvents&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY ActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY COUNT(ActivityName) DESC),&#xA;&#x9; MaxStartEvent AS (SELECT MAX(CountActivityName) AS MaxCountActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM CountStartEvents),&#xA;&#x9; CountEndEvents AS (SELECT TOP (9999) ActivityName, COUNT(ActivityName) AS CountActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM EndEvents&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;GROUP BY ActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;ORDER BY COUNT(ActivityName) DESC),&#xA;&#x9; MaxEndEvent AS (SELECT MAX(CountActivityName) AS MaxCountActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM CountEndEvents),&#xA;     HappyStartEvents AS (SELECT ActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM CountStartEvents cse, MaxStartEvent mse&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE cse.CountActivityName = mse.MaxCountActivityName),&#xA;     HappyEndEvents   AS (SELECT ActivityName&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;FROM CountEndEvents cse, MaxEndEvent mse&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;WHERE cse.CountActivityName = mse.MaxCountActivityName),&#xA;     Cases           AS (SELECT CaseId,&#xA;                                COUNT(DISTINCT Resource)                                       AS NumResources,&#xA;                                COUNT(ActivityName) - 1                                        AS NumEvents,&#xA;                                COUNT(DISTINCT ActivityName) - 1                               AS NumActivities,&#xA;                                SUM(Loop)                                                      AS NumLoops,&#xA;                                SUM(SelfLoop)                                                  AS NumSelfLoops,&#xA;                                SUM(Duration)                                                  AS Duration,&#xA;                                CAST(ROUND(AVG(CAST(Automatic AS FLOAT)), 4) AS DECIMAL(5, 4)) AS AutomationRate,&#xA;                                SUM(Cost)                                                      AS TotalCost&#xA;                         FROM M2C_PAFnow.EventLog&#xA;                         GROUP BY CaseId)&#xA;SELECT c.*,&#xA;       v.VariantId,&#xA;       p.PathId,&#xA;       se.Date                                                      AS StartDate,&#xA;       se.Time                                                      AS StartTime,&#xA;       ee.Date                                                      AS EndDate,&#xA;       ee.Time                                                      AS EndTime,&#xA;       se.ActivityName                                              AS StartActivity,&#xA;       ee.ActivityName                                              AS EndActivity,&#xA;       CAST(ROUND(Duration / (60 * 60 * 24.0), 2) AS DECIMAL(8, 2)) AS DurationDays,&#xA;       CASE&#xA;           WHEN hse.ActivityName IS NOT NULL AND hee.ActivityName IS NOT NULL&#xA;               THEN ''Happy''&#xA;           WHEN hse.ActivityName IS NOT NULL AND hee.ActivityName IS NULL&#xA;               THEN ''Happy Start''&#xA;           WHEN hse.ActivityName IS NULL AND hee.ActivityName IS NOT NULL&#xA;               THEN ''Happy End''&#xA;           ELSE ''Not Happy'' END                                     AS HappyPath,&#xA;       IIF(vc.Count &gt; 1, 0, 1)                                      AS VariantIsUnique&#xA;       ' + @case_attributes_with_alias + '&#xA;INTO M2C_PAFnow.Cases&#xA;FROM Cases c&#xA;         INNER JOIN Paths p ON c.CaseId = p.CaseId&#xA;         INNER JOIN Variants v ON c.CaseId = v.CaseId&#xA;         INNER JOIN VariantCounts vc ON v.VariantId = vc.VariantId&#xA;         INNER JOIN StartEvents se ON c.CaseId = se.CaseId&#xA;         INNER JOIN EndEvents ee ON c.CaseId = ee.CaseId&#xA;         LEFT JOIN HappyStartEvents hse ON se.ActivityName = hse.ActivityName&#xA;         LEFT JOIN HappyEndEvents hee ON ee.ActivityName = hee.ActivityName&#xA;         ' + @case_attributes_join + '&#xA;');&#xA;&#xA;-- Clean up&#xA;ALTER TABLE [M2C_PAFnow].[EventLog]&#xA;    DROP COLUMN [_Source], [_Edge];&#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate '5-0 PAFnow';&#xA;" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Proc Mining Trans\7-1 Merge"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{9ea699f2-dc2a-4327-86e6-33e1a21cda26}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="7-1 Merge"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '6-0 Merge - Add Columns';&#xA;&#xA;--Merge CLT &amp; M2C_PAFnow.Cases in P2P_PAFnowIM.Cases&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Cases];&#xA;GO&#xA;&#xA;IF OBJECT_ID(N'M2C_PAFnow.Cases', N'U') IS NOT NULL&#xA;   BEGIN&#xA;        ALTER SCHEMA [M2C_PAFnowIM]&#xA;            TRANSFER [M2C_PAFnow].[Cases]&#xA;   END&#xA;GO&#xA;&#xA;SELECT Distinct&#xA;-- Combine CLT Part&#xA;    CAST([CLT].[CaseId] AS BIGINT)                                 AS [CaseId]&#xA;     , [CLT].[MRDocsABLBELNR]                                             AS [Ablesebelegnummer]&#xA;     , CAST([Cases].[NumResources] AS SMALLINT)                 AS [NumResources]&#xA;     , CAST([Cases].[NumEvents] AS SMALLINT)                    AS [NumEvents]&#xA;     , CAST([Cases].[NumActivities] AS SMALLINT)                AS [NumActivities]&#xA;     , CAST([Cases].[NumLoops] AS SMALLINT)                     AS [NumLoops]&#xA;     , CAST([Cases].[NumSelfLoops] AS SMALLINT)                 AS [NumSelfLoops]&#xA;     , CAST([Cases].[Duration] AS INT)                          AS [Duration]&#xA;     , ROUND(CAST([Cases].[AutomationRate] AS FLOAT), 3)        AS [AutomationRate]&#xA;     , ROUND(CAST([Cases].[TotalCost] AS FLOAT), 3)             AS [TotalCost]&#xA;     , CAST([Cases].[VariantId] AS INT)                         AS [VariantId]&#xA;     , CAST([Cases].[PathId] AS BIGINT)                         AS [PathId]&#xA;     , CAST([Cases].[StartDate] AS DATE)                        AS [StartDate]&#xA;     , CAST([Cases].[StartTime] AS TIME(0))                     AS [StartTime]&#xA;     , CAST([Cases].[EndDate] AS DATE)                          AS [EndDate]&#xA;     , CAST([Cases].[EndTime] AS TIME(0))                       AS [EndTime]&#xA;     , CAST([Cases].[StartActivity] AS NVARCHAR(128))           AS [StartActivity]&#xA;     , CAST([Cases].[EndActivity] AS NVARCHAR(128))             AS [EndActivity]&#xA;     , ROUND(CAST([Cases].[DurationDays] AS FLOAT), 3)          AS [DurationDays]&#xA;     , CAST([Cases].[HappyPath] AS NVARCHAR(25))                AS [HappyPath]&#xA;     , CAST([Cases].[VariantIsUnique] AS TINYINT)               AS [VariantIsUnique]&#xA;INTO [M2C_PAFnow].[Cases]&#xA;FROM [M2C_PAFnow].[CLT] AS [CLT]&#xA;         LEFT JOIN [M2C_PAFnowIM].[Cases] AS [Cases]&#xA;                   ON [CLT].[CaseId] = [Cases].[CaseId]&#xA;GO&#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate '6-0 Merge - Add Columns';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Proc Mining Trans\7-2 Case Attributes"
          DTS:CreationName="Microsoft.ExecuteSQLTask"
          DTS:Description="Task &quot;SQL ausführen&quot;"
          DTS:DTSID="{f2f7dc09-f53d-444e-9b05-7d5cacaaf12d}"
          DTS:ExecutableType="Microsoft.ExecuteSQLTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="7-2 Case Attributes"
          DTS:TaskContact="Execute SQL Task; Microsoft Corporation; SQL Server 2019 CTP2.1; © 2018 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <SQLTask:SqlTaskData
              SQLTask:Connection="{C6211F97-50CD-4EFC-9240-953DAC96AD5F}"
              SQLTask:SqlStatementSource="/*******************************&#xA; * Copyright (C)                   *&#xA; * bc-competence gmbh     *&#xA; * All Rights Reserved        *&#xA; ********************************/&#xA;&#xA;EXEC PAFnowStatistic '7-0 Case Attributes';&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Temp]&#xA;GO&#xA;&#xA;-- Add additional attributes to case table&#xA;&#xA;ALTER TABLE [M2C_PAFnow].[Cases]&#xA;    ADD [AnzahlAbrechnungstornierungen] INT,&#xA;        [AnzahlAbrechnungaussteuerungen] INT,&#xA;&#x9;&#x9;[AnzahlFakturastornierungen] INT,&#xA;        [AnzahlFakturaaussteuerungen] INT,&#xA;&#x9;&#x9;[AnzahlAbleseaussteuerungen] INT,&#xA;&#x9;&#x9;[AnzahlAblesesperren] INT,&#xA;&#x9;&#x9;[FakturabelegVorhanden] INT, &#xA;&#x9;&#x9;[Datentransformationsdatum] DATETIME&#xA;GO&#xA;&#xA;-- Datentransformationsdatum&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;&#x9;SET [Datentransformationsdatum] = CAST(CURRENT_TIMESTAMP AS DATETIME)&#x9;&#xA;GO&#xA;&#xA;&#xA;-- Stornierungen Abrechnungsbeleg&#xA;&#xA;WITH CTE AS (&#xA;&#x9;SELECT CaseID,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN [EventLog].[ActivityName] IN ('Storniere Abrechnungsbeleg')&#xA;&#x9;&#x9;THEN 'Storno' &#xA;&#x9;END AS AnzahlAbrechnungstornierungen&#xA;&#x9;FROM [M2C_PAFnow].[EventLog]&#xA;&#x9;WHERE [EventLog].[ActivityName] IN ('Storniere Abrechnungsbeleg')&#xA;) &#xA;&#xA;SELECT [CaseID], count(*) AS [Count]&#xA;INTO [M2C_PAFnowIM].[Temp]&#xA;FROM [CTE]&#xA;GROUP BY [CaseId], AnzahlAbrechnungstornierungen &#xA;ORDER BY [CaseId]&#xA;&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlAbrechnungstornierungen] = [Temp].[Count]&#xA;&#x9;FROM  [M2C_PAFnow].[Cases] AS [Cases]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Temp] AS [Temp]&#xA;&#x9;&#x9;ON [Cases].[CaseId] = [Temp].[CaseId]&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Temp]&#xA;GO&#xA;&#xA;-- Aussteuerungen Abrechnungsbeleg&#xA;&#xA;WITH CTE AS (&#xA;&#x9;SELECT CaseID,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN [EventLog].[ActivityName] IN ('Gebe Abrechnungsbeleg frei')&#xA;&#x9;&#x9;THEN 'Aussteuerung' &#xA;&#x9;END AS [AnzahlAbrechnungaussteuerungen]&#xA;&#x9;FROM [M2C_PAFnow].[EventLog]&#xA;&#x9;WHERE [EventLog].[ActivityName] IN ('Gebe Abrechnungsbeleg frei')&#xA;) &#xA;&#xA;SELECT [CaseID], count(*) AS [Count]&#xA;INTO [M2C_PAFnowIM].[Temp]&#xA;FROM [CTE]&#xA;GROUP BY [CaseId], [AnzahlAbrechnungaussteuerungen] &#xA;ORDER BY [CaseId]&#xA;&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlAbrechnungaussteuerungen] = [Temp].[Count]&#xA;&#x9;FROM  [M2C_PAFnow].[Cases] AS [Cases]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Temp] AS [Temp]&#xA;&#x9;&#x9;ON [Cases].[CaseId] = [Temp].[CaseId]&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Temp]&#xA;GO&#xA;&#xA;&#xA;&#xA;-- Stornierungen Faktura&#xA;&#xA;WITH CTE AS (&#xA;&#x9;SELECT CaseID,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN [EventLog].[ActivityName] IN ('Storniere Fakturabeleg')&#xA;&#x9;&#x9;THEN 'Storno' &#xA;&#x9;END AS [AnzahlFakturastornierungen]&#xA;&#x9;FROM [M2C_PAFnow].[EventLog]&#xA;&#x9;WHERE [EventLog].[ActivityName] IN ('Storniere Fakturabeleg')&#xA;) &#xA;&#xA;SELECT [CaseID], count(*) AS [Count]&#xA;INTO [M2C_PAFnowIM].[Temp]&#xA;FROM [CTE]&#xA;GROUP BY [CaseId], [AnzahlFakturastornierungen] &#xA;ORDER BY [CaseId]&#xA;&#xA;&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlFakturastornierungen] = [Temp].[Count]&#xA;&#x9;FROM  [M2C_PAFnow].[Cases] AS [Cases]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Temp] AS [Temp]&#xA;&#x9;&#x9;ON [Cases].[CaseId] = [Temp].[CaseId]&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Temp]&#xA;GO&#xA;&#xA;&#xA;-- Aussterungen Faktura&#xA;&#xA;WITH CTE AS (&#xA;&#x9;SELECT CaseID,&#xA;&#x9;CASE &#xA;&#x9;&#x9;WHEN [EventLog].[ActivityName] IN ('Gebe Fakturabeleg frei')&#xA;&#x9;&#x9;THEN 'Aussteuerung' &#xA;&#x9;END AS [AnzahlFakturaaussteuerungen]&#xA;&#x9;FROM [M2C_PAFnow].[EventLog]&#xA;&#x9;WHERE [EventLog].[ActivityName] IN ('Gebe Fakturabeleg frei')&#xA;) &#xA;&#xA;SELECT [CaseID], count(*) AS [Count]&#xA;INTO [M2C_PAFnowIM].[Temp]&#xA;FROM [CTE]&#xA;GROUP BY [CaseId], [AnzahlFakturaaussteuerungen] &#xA;ORDER BY [CaseId]&#xA;&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlFakturaaussteuerungen] = [Temp].[Count]&#xA;&#x9;FROM  [M2C_PAFnow].[Cases] AS [Cases]&#xA;&#x9;&#x9;INNER JOIN [M2C_PAFnowIM].[Temp] AS [Temp]&#xA;&#x9;&#x9;ON [Cases].[CaseId] = [Temp].[CaseId]&#xA;&#xA;DROP TABLE IF EXISTS [M2C_PAFnowIM].[Temp]&#xA;GO&#xA;&#xA;-- Aussterungen Ablesebelege&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlAbleseaussteuerungen] = 1&#xA;FROM [M2C_PAFnow].[Case_Attributes_MeterReading]&#xA;INNER JOIN [M2C_PAFnow].[Cases]&#xA;&#x9;ON [Cases].[CaseId] = [Case_Attributes_MeterReading].[CaseId]&#xA;WHERE [Aussteuerungsgrund] IS NOT NULL&#xA;&#xA;&#xA;&#xA;-- Sperre Ablesebelege&#xA;&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [AnzahlAblesesperren] = 1&#xA;FROM [M2C_PAFnow].[Case_Attributes_MeterReading]&#xA;INNER JOIN [M2C_PAFnow].[Cases]&#xA;&#x9;ON [Cases].[CaseId] = [Case_Attributes_MeterReading].[CaseId]&#xA;WHERE ([Ablesestatus] = 2 or [Ablesestatus] = 3)&#xA;&#xA;-- Ablesebelg zu Fakturabeleg&#xA;UPDATE  [M2C_PAFnow].[Cases]&#xA;SET [FakturabelegVorhanden] = 1&#xA;FROM [M2C_PAFnow].[Cases]&#xA;LEFT JOIN [M2C_PAFnow].[Case_Attributes_Invoice]&#xA;&#x9;ON [Cases].[CaseId] = [Case_Attributes_Invoice].[CaseId]&#xA;WHERE [Case_Attributes_Invoice].[CaseId] IS NOT NULL&#xA;AND  [Case_Attributes_Invoice].[Stornokenzeichen] IS NULL&#xA;&#xA;&#xA;EXEC PAFnowStatisticUpdate '7-0 Case Attributes';" xmlns:SQLTask="www.microsoft.com/sqlserver/dts/tasks/sqltask" />
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Proc Mining Trans.PrecedenceConstraints[Einschränkung]"
          DTS:CreationName=""
          DTS:DTSID="{3C038463-9ADE-46E0-A3DB-9C5940A8E068}"
          DTS:From="Package\Proc Mining Trans\7-1 Merge"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung"
          DTS:To="Package\Proc Mining Trans\7-2 Case Attributes" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Proc Mining Trans.PrecedenceConstraints[Einschränkung 1]"
          DTS:CreationName=""
          DTS:DTSID="{C3B6F631-1848-45D7-AB10-3821C5A233EC}"
          DTS:From="Package\Proc Mining Trans\7-0 Process Mining"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Einschränkung 1"
          DTS:To="Package\Proc Mining Trans\7-1 Merge" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung]"
      DTS:CreationName=""
      DTS:DTSID="{5CEC3D78-2837-484C-A359-E6AE9E341904}"
      DTS:From="Package\Initialization"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung"
      DTS:To="Package\Business Objects" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 1]"
      DTS:CreationName=""
      DTS:DTSID="{197D858F-C6CE-40B9-B6BA-7548D4DBFEBE}"
      DTS:From="Package\Business Objects"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 1"
      DTS:To="Package\CLT Aufbau" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 2]"
      DTS:CreationName=""
      DTS:DTSID="{1F0511DB-EA6A-486F-90DE-37CE4B886835}"
      DTS:From="Package\CLT Aufbau"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 2"
      DTS:To="Package\Connection Objects (Meter Reading)" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 3]"
      DTS:CreationName=""
      DTS:DTSID="{B6721CFB-F2CB-4851-B353-00DAB4C849D0}"
      DTS:From="Package\Eventlog"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 3"
      DTS:To="Package\Attributes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 4]"
      DTS:CreationName=""
      DTS:DTSID="{64D7F062-0D4F-49BD-9E26-5423F2D693AE}"
      DTS:From="Package\Attributes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 4"
      DTS:To="Package\Changes" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 5]"
      DTS:CreationName=""
      DTS:DTSID="{2E799ADF-5193-4D2E-88E5-2489C85C9F04}"
      DTS:From="Package\Connection Objects (Meter Reading)"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 5"
      DTS:To="Package\Eventlog" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 6]"
      DTS:CreationName=""
      DTS:DTSID="{FD6CB598-A9A1-4241-A37F-493E62968DE1}"
      DTS:From="Package\Changes"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 6"
      DTS:To="Package\Proc Mining Trans" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Einschränkung 7]"
      DTS:CreationName=""
      DTS:DTSID="{126A2DB5-01AB-448E-AD29-875603882BEB}"
      DTS:From="Package\Anonymsierung"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Einschränkung 7"
      DTS:To="Package\Initialization" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--Dieser CDATA-Abschnitt enthält die Layoutinformationen des Pakets, z.B. Informationen wie X-/Y-Koordinaten, Breite und Höhe.-->
<!--Wenn Sie diesen Abschnitt manuell ändern und Ihnen ein Fehler unterläuft, können Sie ihn löschen. -->
<!--Das Paket kann zwar weiterhin normal geladen werden, aber frühere Layoutinformationen gehen verloren, und die Elemente auf der Entwurfsoberfläche werden vom Designer automatisch neu angeordnet.-->
<Objects
  Version="8">
  <!--Jeder darunter liegende Knoten enthält Eigenschaften, die sich nicht auf das Laufzeitverhalten auswirken.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="256" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="154,42"
          Id="Package\Anonymsierung\Anonymisierung"
          TopLeft="376,30" />
        <NodeLayout
          Size="163,42"
          Id="Package\Anonymsierung\Anonymisierung 1"
          TopLeft="590,33" />
        <NodeLayout
          Size="163,42"
          Id="Package\Anonymsierung\Create User Table"
          TopLeft="155,30" />
        <EdgeLayout
          Id="Package\Anonymsierung.PrecedenceConstraints[Einschränkung]"
          TopLeft="318,51">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58,0"
              Start="0,0"
              End="50.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Anonymsierung.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="530,52.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="60,0"
              Start="0,0"
              End="52.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="974,115"
          Size="974,158"
          Id="Package\Anonymsierung"
          TopLeft="1141,343" />
        <NodeLayout
          Size="183,42"
          Id="Package\Attributes\5-0 Drop Attribute Tables"
          TopLeft="128.5,7.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Attributes\5-1 Reading Attributes"
          TopLeft="118,106" />
        <NodeLayout
          Size="210,42"
          Id="Package\Attributes\5-2 Utility Installation Attributes"
          TopLeft="372.75,58.727272727273" />
        <NodeLayout
          Size="168,42"
          Id="Package\Attributes\5-3 Contract Attributes"
          TopLeft="390,167" />
        <NodeLayout
          Size="168,42"
          Id="Package\Attributes\5-4 Billing Attributes"
          TopLeft="121,206" />
        <NodeLayout
          Size="181,42"
          Id="Package\Attributes\5-5 Invoice Attributes"
          TopLeft="397.159090909091,260.727272727273" />
        <NodeLayout
          Size="184,42"
          Id="Package\Attributes\5-6 Account Attributes"
          TopLeft="137.25,323.5" />
        <NodeLayout
          Size="185,42"
          Id="Package\Attributes\5-6 Clearing Attributes"
          TopLeft="398,370.5" />
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung]"
          TopLeft="475.875,100.727272727273">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,66.272727272727"
              Start="0,0"
              End="0,58.772727272727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,58.772727272727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="220,49.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-9.5,56.5"
              Start="0,0"
              End="-9.5,49">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,24.25" />
                  <mssgle:CubicBezierSegment
                    Point1="0,24.25"
                    Point2="0,28.25"
                    Point3="-4,28.25" />
                  <mssgle:LineSegment
                    End="-5.5,28.25" />
                  <mssgle:CubicBezierSegment
                    Point1="-5.5,28.25"
                    Point2="-9.5,28.25"
                    Point3="-9.5,32.25" />
                  <mssgle:LineSegment
                    End="-9.5,49" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 2]"
          TopLeft="390,188">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-101,33.3333333333333"
              Start="0,0"
              End="-93.5,33.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-54.3761467889908,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-54.3761467889908,0"
                    Point2="-58.3761467889908,0"
                    Point3="-58.3761467889908,4" />
                  <mssgle:LineSegment
                    End="-58.3761467889908,29.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="-58.3761467889908,29.3333333333333"
                    Point2="-58.3761467889908,33.3333333333333"
                    Point3="-62.3761467889908,33.3333333333333" />
                  <mssgle:LineSegment
                    End="-93.5,33.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 3]"
          TopLeft="289,232.666666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="108.159090909091,43.3939393939396"
              Start="0,0"
              End="100.659090909091,43.3939393939396">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="50.0795454545455,0" />
                  <mssgle:CubicBezierSegment
                    Point1="50.0795454545455,0"
                    Point2="54.0795454545455,0"
                    Point3="54.0795454545455,4" />
                  <mssgle:LineSegment
                    End="54.0795454545455,39.3939393939396" />
                  <mssgle:CubicBezierSegment
                    Point1="54.0795454545455,39.3939393939396"
                    Point2="54.0795454545455,43.3939393939396"
                    Point3="58.0795454545455,43.3939393939396" />
                  <mssgle:LineSegment
                    End="100.659090909091,43.3939393939396" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 4]"
          TopLeft="303,127">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="69.75,-47.272727272727"
              Start="0,0"
              End="62.25,-47.272727272727">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="30.875,0" />
                  <mssgle:CubicBezierSegment
                    Point1="30.875,0"
                    Point2="34.875,0"
                    Point3="34.875,-4" />
                  <mssgle:LineSegment
                    End="34.875,-43.272727272727" />
                  <mssgle:CubicBezierSegment
                    Point1="34.875,-43.272727272727"
                    Point2="34.875,-47.272727272727"
                    Point3="38.875,-47.272727272727" />
                  <mssgle:LineSegment
                    End="62.25,-47.272727272727" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 5]"
          TopLeft="397.159090909091,287.39393939394">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-75.909090909091,51.4393939393937"
              Start="0,0"
              End="-68.409090909091,51.4393939393937">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-33.9545454545455,0" />
                  <mssgle:CubicBezierSegment
                    Point1="-33.9545454545455,0"
                    Point2="-37.9545454545455,0"
                    Point3="-37.9545454545455,4" />
                  <mssgle:LineSegment
                    End="-37.9545454545455,47.4393939393937" />
                  <mssgle:CubicBezierSegment
                    Point1="-37.9545454545455,47.4393939393937"
                    Point2="-37.9545454545455,51.4393939393937"
                    Point3="-41.9545454545455,51.4393939393937" />
                  <mssgle:LineSegment
                    End="-68.409090909091,51.4393939393937" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Attributes.PrecedenceConstraints[Einschränkung 6]"
          TopLeft="321.25,350.166666666667">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="76.75,41.3333333333333"
              Start="0,0"
              End="69.25,41.3333333333333">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="28.3899082568807,0" />
                  <mssgle:CubicBezierSegment
                    Point1="28.3899082568807,0"
                    Point2="32.3899082568807,0"
                    Point3="32.3899082568807,4" />
                  <mssgle:LineSegment
                    End="32.3899082568807,37.3333333333333" />
                  <mssgle:CubicBezierSegment
                    Point1="32.3899082568807,37.3333333333333"
                    Point2="32.3899082568807,41.3333333333333"
                    Point3="36.3899082568807,41.3333333333333" />
                  <mssgle:LineSegment
                    End="69.25,41.3333333333333" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="700,468"
          Size="700,511"
          Id="Package\Attributes"
          TopLeft="2742.7233044733,2023.88888888888" />
        <NodeLayout
          Size="183,42"
          Id="Package\Business Objects\1-0 Drop Business Object Tables"
          TopLeft="65.1196581196584,18.2307692307695" />
        <NodeLayout
          Size="228,42"
          Id="Package\Business Objects\1-1 Meter Reading Docs (EABL)"
          TopLeft="66.083333333333,110.63888888889" />
        <NodeLayout
          Size="246,42"
          Id="Package\Business Objects\1-10 Invoicing-Reversal History (ERCHC)"
          TopLeft="804.452991452991,299.892857142857" />
        <NodeLayout
          Size="204,42"
          Id="Package\Business Objects\1-11 Contract data (EVER)"
          TopLeft="56.4529914529915,409.5" />
        <NodeLayout
          Size="215,42"
          Id="Package\Business Objects\1-110 Sperren (DFKKLOCKS)"
          TopLeft="1150.55555555556,405.111111111111" />
        <NodeLayout
          Size="303,42"
          Id="Package\Business Objects\1-12 Items in Contract Account Document (DFKKOP)"
          TopLeft="332,409" />
        <NodeLayout
          Size="361,42"
          Id="Package\Business Objects\1-13 Header Data in Open Item Accounting Document (DFKKKO)"
          TopLeft="710.452991452991,411.75" />
        <NodeLayout
          Size="345,42"
          Id="Package\Business Objects\1-14 Technichal Data for Installed Register data (ETDZ)"
          TopLeft="60,520" />
        <NodeLayout
          Size="364,42"
          Id="Package\Business Objects\1-15 Billing data Installation Structure at Reg Level data  (EASTS)"
          TopLeft="456,522" />
        <NodeLayout
          Size="199,42"
          Id="Package\Business Objects\1-16 Installation Time Slice (EANLH)"
          TopLeft="844.45299145299,519.892857142857" />
        <NodeLayout
          Size="167,42"
          Id="Package\Business Objects\1-17 Installation (EANL)"
          TopLeft="1104.45299145299,522.892857142857" />
        <NodeLayout
          Size="229,42"
          Id="Package\Business Objects\1-18 Contract Account Head (FKKVK)"
          TopLeft="52.4529914529915,636.892857142857" />
        <NodeLayout
          Size="245,42"
          Id="Package\Business Objects\1-19 Contract Account Partner (FKKVKP)"
          TopLeft="359.452991452991,633.892857142857" />
        <NodeLayout
          Size="246,42"
          Id="Package\Business Objects\1-2 Meter Reading Reason (EABLG)"
          TopLeft="322.888888888888,114.638888888889" />
        <NodeLayout
          Size="162,42"
          Id="Package\Business Objects\1-20 Partner (BUT000)"
          TopLeft="671.452991452991,637.892857142857" />
        <NodeLayout
          Size="205,42"
          Id="Package\Business Objects\1-21 Tariftyp Kopfdaten (ETTA)"
          TopLeft="926.75,638.25" />
        <NodeLayout
          Size="218,42"
          Id="Package\Business Objects\1-3 Invoice Outsorting Docs (ERDO)"
          TopLeft="59.5277777777783,198.638888888888" />
        <NodeLayout
          Size="209,42"
          Id="Package\Business Objects\1-4 Invoice Docs Header (ERDK)"
          TopLeft="300.111111111112,206.194444444444" />
        <NodeLayout
          Size="199,42"
          Id="Package\Business Objects\1-5 Invoice Docs Data (ERDB)"
          TopLeft="534.059829059829,210.237179487179" />
        <NodeLayout
          Size="239,42"
          Id="Package\Business Objects\1-6 Dunning Histroy (FKKMAZE)"
          TopLeft="781.527777777778,208.34829059829" />
        <NodeLayout
          Size="236,42"
          Id="Package\Business Objects\1-7 Cancellation Invoice (ERDK)"
          TopLeft="1064.78632478632,204.527777777778" />
        <NodeLayout
          Size="199,42"
          Id="Package\Business Objects\1-8 Billing Docs (ERCH)"
          TopLeft="52.4529914529915,294.34829059829" />
        <NodeLayout
          Size="219,42"
          Id="Package\Business Objects\1-9 Billing Docs Outsorting (ERCHO)"
          TopLeft="281.527777777778,298.34829059829" />
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung]"
          TopLeft="294.083333333333,133.638888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="28.805555555555,0"
              Start="0,0"
              End="21.305555555555,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="21.305555555555,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="445.888888888888,156.638888888889">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-277.36111111111,41.999999999999"
              Start="0,0"
              End="-277.36111111111,34.499999999999">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.9999999999995"
                    Point2="0,20.9999999999995"
                    Point3="-4,20.9999999999995" />
                  <mssgle:LineSegment
                    End="-273.36111111111,20.9999999999995" />
                  <mssgle:CubicBezierSegment
                    Point1="-273.36111111111,20.9999999999995"
                    Point2="-277.36111111111,20.9999999999995"
                    Point3="-277.36111111111,24.9999999999995" />
                  <mssgle:LineSegment
                    End="-277.36111111111,34.499999999999" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 11]"
          TopLeft="1020.52777777778,227.438034188034">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.2585470085419,0"
              Start="0,0"
              End="36.7585470085419,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.7585470085419,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 12]"
          TopLeft="260.452991452992,430.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="71.5470085470085,0"
              Start="0,0"
              End="64.0470085470085,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="64.0470085470085,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 13]"
          TopLeft="635,431.375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="75.452991452991,0"
              Start="0,0"
              End="67.952991452991,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="67.952991452991,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 15]"
          TopLeft="833.452991452991,659.071428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="93.297008547009,0"
              Start="0,0"
              End="85.797008547009,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="85.797008547009,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 16]"
          TopLeft="1071.45299145299,429.430555555556">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="79.1025641025649,0"
              Start="0,0"
              End="71.6025641025649,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="71.6025641025649,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 17]"
          TopLeft="1258.05555555556,447.111111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1025.55555555556,72.8888888888888"
              Start="0,0"
              End="-1025.55555555556,65.3888888888888">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32.4444444444444" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32.4444444444444"
                    Point2="0,36.4444444444444"
                    Point3="-4,36.4444444444444" />
                  <mssgle:LineSegment
                    End="-1021.55555555556,36.4444444444444" />
                  <mssgle:CubicBezierSegment
                    Point1="-1021.55555555556,36.4444444444444"
                    Point2="-1025.55555555556,36.4444444444444"
                    Point3="-1025.55555555556,40.4444444444444" />
                  <mssgle:LineSegment
                    End="-1025.55555555556,65.3888888888888" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 19]"
          TopLeft="820,541.946428571428">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.45299145299,0"
              Start="0,0"
              End="16.95299145299,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="16.95299145299,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 2]"
          TopLeft="277.527777777778,223.416666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="22.5833333333337,0"
              Start="0,0"
              End="15.0833333333337,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.0833333333337,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 20]"
          TopLeft="405,542">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="51,0"
              Start="0,0"
              End="43.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="43.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 21]"
          TopLeft="1043.45299145299,542.392857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.0000000000002,0"
              Start="0,0"
              End="53.5000000000002,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="53.5000000000002,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 22]"
          TopLeft="281.452991452991,656.392857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="78,0"
              Start="0,0"
              End="70.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="70.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 23]"
          TopLeft="1187.95299145299,564.892857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1021,72"
              Start="0,0"
              End="-1021,64.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,32" />
                  <mssgle:CubicBezierSegment
                    Point1="0,32"
                    Point2="0,36"
                    Point3="-4,36" />
                  <mssgle:LineSegment
                    End="-1017,36" />
                  <mssgle:CubicBezierSegment
                    Point1="-1017,36"
                    Point2="-1021,36"
                    Point3="-1021,40" />
                  <mssgle:LineSegment
                    End="-1021,64.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 24]"
          TopLeft="604.452991452991,656.892857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67,0"
              Start="0,0"
              End="59.5,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59.5,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 3]"
          TopLeft="156.619658119658,60.2307692307695">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="23.4636752136746,50.4081196581205"
              Start="0,0"
              End="23.4636752136746,42.9081196581205">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,21.2040598290602" />
                  <mssgle:CubicBezierSegment
                    Point1="0,21.2040598290602"
                    Point2="0,25.2040598290602"
                    Point3="4,25.2040598290602" />
                  <mssgle:LineSegment
                    End="19.4636752136746,25.2040598290602" />
                  <mssgle:CubicBezierSegment
                    Point1="19.4636752136746,25.2040598290602"
                    Point2="23.4636752136746,25.2040598290602"
                    Point3="23.4636752136746,29.2040598290602" />
                  <mssgle:LineSegment
                    End="23.4636752136746,42.9081196581205" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 4]"
          TopLeft="509.111111111112,229.215811965811">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="24.9487179487171,0"
              Start="0,0"
              End="17.4487179487171,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="17.4487179487171,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 5]"
          TopLeft="500.527777777778,320.120573870573">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="303.925213675213,0"
              Start="0,0"
              End="296.425213675213,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="296.425213675213,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 6]"
          TopLeft="251.452991452992,317.34829059829">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="30.0747863247865,0"
              Start="0,0"
              End="22.5747863247865,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="22.5747863247865,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 7]"
          TopLeft="733.059829059829,230.292735042734">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="48.4679487179491,0"
              Start="0,0"
              End="40.9679487179491,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="40.9679487179491,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 8]"
          TopLeft="1182.78632478632,246.527777777778">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1030.83333333333,47.820512820512"
              Start="0,0"
              End="-1030.83333333333,40.320512820512">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.910256410256" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.910256410256"
                    Point2="0,23.910256410256"
                    Point3="-4,23.910256410256" />
                  <mssgle:LineSegment
                    End="-1026.83333333333,23.910256410256" />
                  <mssgle:CubicBezierSegment
                    Point1="-1026.83333333333,23.910256410256"
                    Point2="-1030.83333333333,23.910256410256"
                    Point3="-1030.83333333333,27.910256410256" />
                  <mssgle:LineSegment
                    End="-1030.83333333333,40.320512820512" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Business Objects.PrecedenceConstraints[Einschränkung 9]"
          TopLeft="927.452991452991,341.892857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-769,67.607142857143"
              Start="0,0"
              End="-769,60.107142857143">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,29.8035714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="0,29.8035714285715"
                    Point2="0,33.8035714285715"
                    Point3="-4,33.8035714285715" />
                  <mssgle:LineSegment
                    End="-765,33.8035714285715" />
                  <mssgle:CubicBezierSegment
                    Point1="-765,33.8035714285715"
                    Point2="-769,33.8035714285715"
                    Point3="-769,37.8035714285715" />
                  <mssgle:LineSegment
                    End="-769,60.107142857143" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="1567,754"
          Size="1567,797"
          Id="Package\Business Objects"
          TopLeft="847.723304473305,738.522366522366" />
        <NodeLayout
          Size="138,42"
          Id="Package\Changes\6-0 Pre Changes"
          TopLeft="59.5000000000002,36.5000000000009" />
        <NodeLayout
          Size="205,42"
          Id="Package\Changes\6-1 Change Meter Reading"
          TopLeft="230.5,35.4999999999936" />
        <NodeLayout
          Size="205,42"
          Id="Package\Changes\6-2 Change Contract"
          TopLeft="472,41.6666666666601" />
        <EdgeLayout
          Id="Package\Changes.PrecedenceConstraints[Einschränkung]"
          TopLeft="435.5,59.5833333333269">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="36.5,0"
              Start="0,0"
              End="29,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Changes.PrecedenceConstraints[Einschränkung 6]"
          TopLeft="197.5,56.9999999999973">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.9999999999998,0"
              Start="0,0"
              End="25.4999999999998,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="25.4999999999998,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="700,116"
          Size="700,159"
          Id="Package\Changes"
          TopLeft="2727.33333333333,2581.66666666666" />
        <NodeLayout
          Size="128,42"
          Id="Package\CLT Aufbau\2-0 Drop CLT"
          TopLeft="35.4444444444441,31.2222222222222" />
        <NodeLayout
          Size="125,42"
          Id="Package\CLT Aufbau\2-1 CLT"
          TopLeft="34.1111111111111,126.555555555555" />
        <EdgeLayout
          Id="Package\CLT Aufbau.PrecedenceConstraints[Einschränkung]"
          TopLeft="98.0277777777776,73.2222222222222">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,53.3333333333328"
              Start="0,0"
              End="0,45.8333333333328">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,45.8333333333328" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="205,222"
          Size="205,265"
          Id="Package\CLT Aufbau"
          TopLeft="1623.80555555555,1647.48701298702" />
        <NodeLayout
          Size="215,42"
          Id="Package\Connection Objects (Meter Reading)\3-0 Drop Connection Objects"
          TopLeft="67.9444444444441,39.4166666666601" />
        <NodeLayout
          Size="215,42"
          Id="Package\Connection Objects (Meter Reading)\3-1 Ablesung -&gt; Abrechnung"
          TopLeft="367.444444444444,38.055555555555" />
        <NodeLayout
          Size="209,42"
          Id="Package\Connection Objects (Meter Reading)\3-2 Ablesung -&gt; Faktura"
          TopLeft="365.75,121.499999999993" />
        <NodeLayout
          Size="191,42"
          Id="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Anlage"
          TopLeft="94,110" />
        <NodeLayout
          Size="210,42"
          Id="Package\Connection Objects (Meter Reading)\3-3 Ablesung -&gt; Zahlung"
          TopLeft="364.444444444444,209.16666666666" />
        <EdgeLayout
          Id="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung]"
          TopLeft="509.444444444444,80.055555555555">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-39.1944444444439,41.444444444438"
              Start="0,0"
              End="-39.1944444444439,33.944444444438">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.7614650661716" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.7614650661716"
                    Point2="0,16.7614650661716"
                    Point3="-4,16.7614650661716" />
                  <mssgle:LineSegment
                    End="-35.1944444444439,16.7614650661716" />
                  <mssgle:CubicBezierSegment
                    Point1="-35.1944444444439,16.7614650661716"
                    Point2="-39.1944444444439,16.7614650661716"
                    Point3="-39.1944444444439,20.7614650661716" />
                  <mssgle:LineSegment
                    End="-39.1944444444439,33.944444444438" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 1]"
          TopLeft="469.847222222222,163.499999999993">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,45.6666666666669"
              Start="0,0"
              End="0,38.1666666666669">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,38.1666666666669" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 3]"
          TopLeft="175.444444444444,81.4166666666601">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-16.4444444444441,28.5833333333399"
              Start="0,0"
              End="-16.4444444444441,21.0833333333399">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,13.0075285565979" />
                  <mssgle:CubicBezierSegment
                    Point1="0,13.0075285565979"
                    Point2="0,17.0075285565979"
                    Point3="-4,17.0075285565979" />
                  <mssgle:LineSegment
                    End="-12.4444444444441,17.0075285565979" />
                  <mssgle:CubicBezierSegment
                    Point1="-12.4444444444441,17.0075285565979"
                    Point2="-16.4444444444441,17.0075285565979"
                    Point3="-16.4444444444441,21.0075285565979" />
                  <mssgle:LineSegment
                    End="-16.4444444444441,21.0833333333399" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Connection Objects (Meter Reading).PrecedenceConstraints[Einschränkung 4]"
          TopLeft="220,110">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="220.444444444444,-29.944444444445"
              Start="0,0"
              End="220.444444444444,-22.444444444445">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,-10.9893835916297" />
                  <mssgle:CubicBezierSegment
                    Point1="0,-10.9893835916297"
                    Point2="0,-14.9893835916297"
                    Point3="4,-14.9893835916297" />
                  <mssgle:LineSegment
                    End="216.444444444444,-14.9893835916297" />
                  <mssgle:CubicBezierSegment
                    Point1="216.444444444444,-14.9893835916297"
                    Point2="220.444444444444,-14.9893835916297"
                    Point3="220.444444444444,-18.9893835916297" />
                  <mssgle:LineSegment
                    End="220.444444444444,-22.444444444445" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="736,283"
          Size="736,326"
          Id="Package\Connection Objects (Meter Reading)"
          TopLeft="753.723304473303,1623.23989898991" />
        <NodeLayout
          Size="138,42"
          Id="Package\Eventlog\4-0 Pre Eventlog"
          TopLeft="38.3928571428571,40" />
        <NodeLayout
          Size="232,42"
          Id="Package\Eventlog\4-1 Event - Lege Ablesebeleg an"
          TopLeft="5.5,125.531385281386" />
        <NodeLayout
          Size="248,42"
          Id="Package\Eventlog\4-10 Event - Lege Abrechnungsbeleg an"
          TopLeft="76.3571428571429,293.428571428572" />
        <NodeLayout
          Size="248,42"
          Id="Package\Eventlog\4-11 Event - Storniere Abrechnungsbeleg"
          TopLeft="383.984126984127,297.178571428572" />
        <NodeLayout
          Size="216,42"
          Id="Package\Eventlog\4-12 Event - Ändere abgerechneten Zählerstand"
          TopLeft="676.574675324676,294.785714285714" />
        <NodeLayout
          Size="273,42"
          Id="Package\Eventlog\4-13 Event - Gebe Abrechnungsbeleg frei"
          TopLeft="929.75,296.5" />
        <NodeLayout
          Size="265,42"
          Id="Package\Eventlog\4-14 Event - Abrechnungsaussteuerung"
          TopLeft="1270,293" />
        <NodeLayout
          Size="224,42"
          Id="Package\Eventlog\4-14 Event - Abrechnungssperre"
          TopLeft="1593.5,288.730158730158" />
        <NodeLayout
          Size="166,42"
          Id="Package\Eventlog\4-15 Event - Lege Fakturableg an"
          TopLeft="38.0595238095237,367.928571428572" />
        <NodeLayout
          Size="174,42"
          Id="Package\Eventlog\4-16 Event - Forderungsbuchung"
          TopLeft="235.75,368.25" />
        <NodeLayout
          Size="169,42"
          Id="Package\Eventlog\4-17 Event - Gebe Fakturabeleg frei"
          TopLeft="440.75,378.5" />
        <NodeLayout
          Size="223,42"
          Id="Package\Eventlog\4-18 Event - Storniere Fakturabeleg"
          TopLeft="653.5,381" />
        <NodeLayout
          Size="213,42"
          Id="Package\Eventlog\4-19 Event - Drucke Fakturabeleg"
          TopLeft="942.392857142858,380.75" />
        <NodeLayout
          Size="227,42"
          Id="Package\Eventlog\4-2 Event - Geplantes Ablesedatum"
          TopLeft="269.888888888889,123.222222222222" />
        <NodeLayout
          Size="174,42"
          Id="Package\Eventlog\4-20 Event - Storno Druckbeleg"
          TopLeft="1194,384" />
        <NodeLayout
          Size="192,42"
          Id="Package\Eventlog\4-22 Event - Fakturaaussteuerung"
          TopLeft="1477.57467532468,380.785714285714" />
        <NodeLayout
          Size="212,42"
          Id="Package\Eventlog\4-22 Event - Fakturasperre"
          TopLeft="1770.25,385.480158730158" />
        <NodeLayout
          Size="258,42"
          Id="Package\Eventlog\4-23 Event - Fälligkeitsdatum Zahlung"
          TopLeft="67.2142857142865,460.071428571429" />
        <NodeLayout
          Size="174,42"
          Id="Package\Eventlog\4-24 Event - Ausgleich"
          TopLeft="431.574675324676,464.785714285714" />
        <NodeLayout
          Size="231,42"
          Id="Package\Eventlog\4-25 Event - Erreiche Mahnstufe"
          TopLeft="72.5746753246762,531.785714285714" />
        <NodeLayout
          Size="143,42"
          Id="Package\Eventlog\4-26 Post Eventlog"
          TopLeft="440.81746031746,600.730158730158" />
        <NodeLayout
          Size="247,42"
          Id="Package\Eventlog\4-3 Event - Abrechnungsrelevantes Ablesedatum"
          TopLeft="534,124" />
        <NodeLayout
          Size="243,42"
          Id="Package\Eventlog\4-4 Event - Eingang Zählerstand"
          TopLeft="820.234126984127,135.837662337663" />
        <NodeLayout
          Size="243,42"
          Id="Package\Eventlog\4-5 Event - Ändere Kennzahl der Plausibilitätsprüfung"
          TopLeft="1115.23412698413,132.178571428572" />
        <NodeLayout
          Size="243,42"
          Id="Package\Eventlog\4-6 Event - Sperre Ablesebelg"
          TopLeft="1420.23412698413,134.678571428572" />
        <NodeLayout
          Size="270,42"
          Id="Package\Eventlog\4-7 Event - Ändere abgelesenen Zählerstand"
          TopLeft="26.492784992784,220.428571428572" />
        <NodeLayout
          Size="270,42"
          Id="Package\Eventlog\4-8 Event - Gebe Ablesebeleg frei"
          TopLeft="398.984126984127,209.678571428572" />
        <NodeLayout
          Size="257,43"
          Id="Package\Eventlog\4-9 Event - Geplantes Abrechnungsdatum"
          TopLeft="733.734126984127,210.178571428572" />
        <NodeLayout
          Size="206,42"
          Id="Package\Eventlog\Event - Sperre Mahnung"
          TopLeft="409.75,534.25" />
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung]"
          TopLeft="107.392857142857,82">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.1071428571429,43.5313852813861"
              Start="0,0"
              End="14.1071428571429,36.0313852813861">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.765692640693" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.765692640693"
                    Point2="0,21.765692640693"
                    Point3="4,21.765692640693" />
                  <mssgle:LineSegment
                    End="10.1071428571429,21.765692640693" />
                  <mssgle:CubicBezierSegment
                    Point1="10.1071428571429,21.765692640693"
                    Point2="14.1071428571429,21.765692640693"
                    Point3="14.1071428571429,25.765692640693" />
                  <mssgle:LineSegment
                    End="14.1071428571429,36.0313852813861" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="237.5,145.376803751804">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="32.388888888889,0"
              Start="0,0"
              End="24.888888888889,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.888888888889,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 10]"
          TopLeft="303.574675324676,554.017857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.175324675324,0"
              Start="0,0"
              End="98.6753246753238,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="98.6753246753238,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 11]"
          TopLeft="324.357142857143,316.303571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="59.6269841269841,0"
              Start="0,0"
              End="52.1269841269841,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="52.1269841269841,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 12]"
          TopLeft="1368,403.392857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="109.57467532468,0"
              Start="0,0"
              End="102.07467532468,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="102.07467532468,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 13]"
          TopLeft="1155.39285714286,403.375">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="38.607142857142,0"
              Start="0,0"
              End="31.107142857142,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="31.107142857142,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 16]"
          TopLeft="1063.23412698413,155.008116883118">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.000000000003,0"
              Start="0,0"
              End="44.500000000003,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="44.500000000003,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 17]"
          TopLeft="496.888888888889,144.611111111111">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.111111111111,0"
              Start="0,0"
              End="29.611111111111,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.611111111111,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 18]"
          TopLeft="781,145">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="39.234126984127,11.837662337663"
              Start="0,0"
              End="31.734126984127,11.837662337663">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="15.6170634920635,0" />
                  <mssgle:CubicBezierSegment
                    Point1="15.6170634920635,0"
                    Point2="19.6170634920635,0"
                    Point3="19.6170634920635,4" />
                  <mssgle:LineSegment
                    End="19.6170634920635,7.83766233766301" />
                  <mssgle:CubicBezierSegment
                    Point1="19.6170634920635,7.83766233766301"
                    Point2="19.6170634920635,11.837662337663"
                    Point3="23.6170634920635,11.837662337663" />
                  <mssgle:LineSegment
                    End="31.734126984127,11.837662337663" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 19]"
          TopLeft="1358.23412698413,154.428571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="61.9999999999995,0"
              Start="0,0"
              End="54.4999999999995,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="54.4999999999995,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 2]"
          TopLeft="631.984126984127,316.982142857143">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="44.5905483405493,0"
              Start="0,0"
              End="37.0905483405493,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="37.0905483405493,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 20]"
          TopLeft="668.984126984127,231.178571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="64.75,0"
              Start="0,0"
              End="57.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="57.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 21]"
          TopLeft="1541.73412698413,176.678571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1380.24134199135,43.75"
              Start="0,0"
              End="-1380.24134199135,36.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,17.875" />
                  <mssgle:CubicBezierSegment
                    Point1="0,17.875"
                    Point2="0,21.875"
                    Point3="-4,21.875" />
                  <mssgle:LineSegment
                    End="-1376.24134199135,21.875" />
                  <mssgle:CubicBezierSegment
                    Point1="-1376.24134199135,21.875"
                    Point2="-1380.24134199135,21.875"
                    Point3="-1380.24134199135,25.875" />
                  <mssgle:LineSegment
                    End="-1380.24134199135,36.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 22]"
          TopLeft="296.492784992784,241.428571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="102.491341991343,-10.75"
              Start="0,0"
              End="94.991341991343,-10.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="47.2456709956715,0" />
                  <mssgle:CubicBezierSegment
                    Point1="47.2456709956715,0"
                    Point2="51.2456709956715,0"
                    Point3="51.2456709956715,-4" />
                  <mssgle:LineSegment
                    End="51.2456709956715,-6.75" />
                  <mssgle:CubicBezierSegment
                    Point1="51.2456709956715,-6.75"
                    Point2="51.2456709956715,-10.75"
                    Point3="55.2456709956715,-10.75" />
                  <mssgle:LineSegment
                    End="94.991341991343,-10.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 23]"
          TopLeft="1669.57467532468,404.132936507936">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="100.67532467532,0"
              Start="0,0"
              End="93.1753246753201,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="93.1753246753201,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 25]"
          TopLeft="512.53373015873,576.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,24.4801587301581"
              Start="0,0"
              End="0,16.9801587301581">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.9801587301581" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 27]"
          TopLeft="1202.75,315.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="67.25,0"
              Start="0,0"
              End="59.75,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="59.75,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 28]"
          TopLeft="892.574675324676,316.642857142857">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="37.175324675324,0"
              Start="0,0"
              End="29.675324675324,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="29.675324675324,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 29]"
          TopLeft="409.75,389.25">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31,10.25"
              Start="0,0"
              End="23.5,10.25">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="11.5,0" />
                  <mssgle:CubicBezierSegment
                    Point1="11.5,0"
                    Point2="15.5,0"
                    Point3="15.5,4" />
                  <mssgle:LineSegment
                    End="15.5,6.25" />
                  <mssgle:CubicBezierSegment
                    Point1="15.5,6.25"
                    Point2="15.5,10.25"
                    Point3="19.5,10.25" />
                  <mssgle:LineSegment
                    End="23.5,10.25" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 3]"
          TopLeft="862.234126984127,253.178571428572">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-661.876984126984,40.25"
              Start="0,0"
              End="-661.876984126984,32.75">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,16.125" />
                  <mssgle:CubicBezierSegment
                    Point1="0,16.125"
                    Point2="0,20.125"
                    Point3="-4,20.125" />
                  <mssgle:LineSegment
                    End="-657.876984126984,20.125" />
                  <mssgle:CubicBezierSegment
                    Point1="-657.876984126984,20.125"
                    Point2="-661.876984126984,20.125"
                    Point3="-661.876984126984,24.125" />
                  <mssgle:LineSegment
                    End="-661.876984126984,32.75" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 32]"
          TopLeft="1535,311.865079365079">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="58.5,0"
              Start="0,0"
              End="51,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="51,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 33]"
          TopLeft="1705.5,330.730158730158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1584.44047619048,37.198412698414"
              Start="0,0"
              End="-1584.44047619048,29.698412698414">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,14.599206349207" />
                  <mssgle:CubicBezierSegment
                    Point1="0,14.599206349207"
                    Point2="0,18.599206349207"
                    Point3="-4,18.599206349207" />
                  <mssgle:LineSegment
                    End="-1580.44047619048,18.599206349207" />
                  <mssgle:CubicBezierSegment
                    Point1="-1580.44047619048,18.599206349207"
                    Point2="-1584.44047619048,18.599206349207"
                    Point3="-1584.44047619048,22.599206349207" />
                  <mssgle:LineSegment
                    End="-1584.44047619048,29.698412698414" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 4]"
          TopLeft="204.059523809524,389.089285714286">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="31.6904761904763,0"
              Start="0,0"
              End="24.1904761904763,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="24.1904761904763,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 5]"
          TopLeft="1876.25,427.480158730158">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-1680.03571428571,32.5912698412709"
              Start="0,0"
              End="-1680.03571428571,25.0912698412709">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.2956349206355" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12.2956349206355"
                    Point2="0,16.2956349206355"
                    Point3="-4,16.2956349206355" />
                  <mssgle:LineSegment
                    End="-1676.03571428571,16.2956349206355" />
                  <mssgle:CubicBezierSegment
                    Point1="-1676.03571428571,16.2956349206355"
                    Point2="-1680.03571428571,16.2956349206355"
                    Point3="-1680.03571428571,20.2956349206355" />
                  <mssgle:LineSegment
                    End="-1680.03571428571,25.0912698412709" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 6]"
          TopLeft="325.214285714287,483.428571428571">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="106.36038961039,0"
              Start="0,0"
              End="98.8603896103895,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="98.8603896103895,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 7]"
          TopLeft="518.574675324676,506.785714285714">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-330.5,25.0000000000002"
              Start="0,0"
              End="-330.5,17.5000000000002">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,8.50000000000011" />
                  <mssgle:CubicBezierSegment
                    Point1="0,8.50000000000011"
                    Point2="0,12.5000000000001"
                    Point3="-4,12.5000000000001" />
                  <mssgle:LineSegment
                    End="-326.5,12.5000000000001" />
                  <mssgle:CubicBezierSegment
                    Point1="-326.5,12.5000000000001"
                    Point2="-330.5,12.5000000000001"
                    Point3="-330.5,16.5000000000001" />
                  <mssgle:LineSegment
                    End="-330.5,17.5000000000002" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 8]"
          TopLeft="876.5,401.875">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="65.892857142858,0"
              Start="0,0"
              End="58.392857142858,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="58.392857142858,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Eventlog.PrecedenceConstraints[Einschränkung 9]"
          TopLeft="609.75,400.75">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="43.75,0"
              Start="0,0"
              End="36.25,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="36.25,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="2125,670"
          Size="2125,713"
          Id="Package\Eventlog"
          TopLeft="56.3333333333333,2011.88888888888" />
        <NodeLayout
          Size="162,42"
          Id="Package\Initialization\0-0 Instantiation"
          TopLeft="13,26.8333333333334" />
        <NodeLayout
          Size="189,42"
          Id="Package\Initialization\0-1 Connection Objects"
          TopLeft="217.833333333333,29.3333333333334" />
        <EdgeLayout
          Id="Package\Initialization.PrecedenceConstraints[Einschränkung]"
          TopLeft="175,49.0833333333334">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="42.833333333333,0"
              Start="0,0"
              End="35.333333333333,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="35.333333333333,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="512,77"
          Size="512,120"
          Id="Package\Initialization"
          TopLeft="1377.59343434343,574.7398989899" />
        <NodeLayout
          Size="168,42"
          Id="Package\Proc Mining Trans\7-0 Process Mining"
          TopLeft="71.6984126984134,36.448412698413" />
        <NodeLayout
          Size="154,42"
          Id="Package\Proc Mining Trans\7-1 Merge"
          TopLeft="83.4126984126988,134.162698412699" />
        <NodeLayout
          Size="154,42"
          Id="Package\Proc Mining Trans\7-2 Case Attributes"
          TopLeft="90.1269841269846,214.734126984128" />
        <EdgeLayout
          Id="Package\Proc Mining Trans.PrecedenceConstraints[Einschränkung]"
          TopLeft="163.769841269842,176.162698412699">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,38.5714285714291"
              Start="0,0"
              End="0,31.0714285714291">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31.0714285714291" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Proc Mining Trans.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="158.055555555556,78.448412698413">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,55.714285714286"
              Start="0,0"
              End="0,48.214285714286">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,48.214285714286" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="289,302"
          Size="289,345"
          Id="Package\Proc Mining Trans"
          TopLeft="2933.58333333333,2865.83333333333" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung]"
          TopLeft="1632.40836940837,694.7398989899">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,43.7824675324662"
              Start="0,0"
              End="0,36.2824675324662">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,36.2824675324662" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 1]"
          TopLeft="1631.22330447331,1535.52236652237">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="95.082251082245,111.964646464654"
              Start="0,0"
              End="95.082251082245,104.464646464654">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,51.982323232327" />
                  <mssgle:CubicBezierSegment
                    Point1="0,51.982323232327"
                    Point2="0,55.982323232327"
                    Point3="4,55.982323232327" />
                  <mssgle:LineSegment
                    End="91.082251082245,55.982323232327" />
                  <mssgle:CubicBezierSegment
                    Point1="91.082251082245,55.982323232327"
                    Point2="95.082251082245,55.982323232327"
                    Point3="95.082251082245,59.982323232327" />
                  <mssgle:LineSegment
                    End="95.082251082245,104.464646464654" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 2]"
          TopLeft="1623.80555555555,1783.11345598846">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-134.082251082247,0"
              Start="0,0"
              End="-126.582251082247,0">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="-126.582251082247,0" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 3]"
          TopLeft="2181.33333333333,2368.38888888888">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="561.389971139967,-89"
              Start="0,0"
              End="553.889971139967,-89">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="276.694985569983,0" />
                  <mssgle:CubicBezierSegment
                    Point1="276.694985569983,0"
                    Point2="280.694985569983,0"
                    Point3="280.694985569983,-4" />
                  <mssgle:LineSegment
                    End="280.694985569983,-85" />
                  <mssgle:CubicBezierSegment
                    Point1="280.694985569983,-85"
                    Point2="280.694985569983,-89"
                    Point3="284.694985569983,-89" />
                  <mssgle:LineSegment
                    End="553.889971139967,-89" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 4]"
          TopLeft="3092.7233044733,2534.88888888888">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-15.3899711399699,46.7777777777801"
              Start="0,0"
              End="-15.3899711399699,39.2777777777801">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,19.3888888888901" />
                  <mssgle:CubicBezierSegment
                    Point1="0,19.3888888888901"
                    Point2="0,23.3888888888901"
                    Point3="-4,23.3888888888901" />
                  <mssgle:LineSegment
                    End="-11.3899711399699,23.3888888888901" />
                  <mssgle:CubicBezierSegment
                    Point1="-11.3899711399699,23.3888888888901"
                    Point2="-15.3899711399699,23.3888888888901"
                    Point3="-15.3899711399699,27.3888888888901" />
                  <mssgle:LineSegment
                    End="-15.3899711399699,39.2777777777801" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 5]"
          TopLeft="1120.27831890332,1949.23989898991">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,62.6489898989701"
              Start="0,0"
              End="0,55.1489898989701">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.1489898989701" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 6]"
          TopLeft="3077.70833333333,2740.66666666666">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,125.16666666667"
              Start="0,0"
              End="0,117.66666666667">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,117.66666666667" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Einschränkung 7]"
          TopLeft="1630.79671717172,501">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,73.7398989899"
              Start="0,0"
              End="0,66.2398989899">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,66.2398989899" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>